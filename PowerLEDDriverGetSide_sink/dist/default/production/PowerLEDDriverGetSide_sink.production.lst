

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Aug 24 03:52:24 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0068                     _RB0	set	104
   570  0069                     _RB1	set	105
   571  006A                     _RB2	set	106
   572  006B                     _RB3	set	107
   573  006C                     _RB4	set	108
   574  006D                     _RB5	set	109
   575  006E                     _RB6	set	110
   576  006F                     _RB7	set	111
   577  0070                     _RC0	set	112
   578  0071                     _RC1	set	113
   579  0072                     _RC2	set	114
   580  0073                     _RC3	set	115
   581  0074                     _RC4	set	116
   582  008D                     _RCIF	set	141
   583  0078                     _RD0	set	120
   584  0079                     _RD1	set	121
   585  007E                     _RD6	set	126
   586  0080                     _RE0	set	128
   587  0081                     _RE1	set	129
   588  0082                     _RE2	set	130
   589  005D                     _TMR0IE	set	93
   590  005A                     _TMR0IF	set	90
   591  0095                     _OPTION_REG	set	149
   592  0099                     _OSCCON	set	153
   593  008C                     _TRISA	set	140
   594  008D                     _TRISB	set	141
   595  008E                     _TRISC	set	142
   596  008F                     _TRISD	set	143
   597  0090                     _TRISE	set	144
   598  0476                     _TRISC6	set	1142
   599  0477                     _TRISC7	set	1143
   600  04AF                     _nWPUEN	set	1199
   601  018C                     _ANSELA	set	396
   602  018D                     _ANSELB	set	397
   603  018F                     _ANSELD	set	399
   604  0190                     _ANSELE	set	400
   605  019F                     _BAUDCON	set	415
   606  0199                     _RCREG	set	409
   607  019D                     _RCSTA	set	413
   608  019B                     _SPBRG	set	411
   609  019A                     _TXREG	set	410
   610  019E                     _TXSTA	set	414
   611  0CF1                     _TRMT	set	3313
   612  020D                     _WPUB	set	525
   613                           
   614                           	psect	text0
   615  0000                     __ptext0:	
   616                           ; #config settings
   617                           
   618                           
   619                           ;psect for function _no0
   620  0000                     
   621                           	psect	cinit
   622  001F                     start_initialization:	
   623  001F                     __initialization:	
   624                           
   625                           ; Clear objects allocated to COMMON
   626  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   627                           
   628                           ; Clear objects allocated to BANK0
   629  0020  3020               	movlw	low __pbssBANK0
   630  0021  0084               	movwf	4
   631  0022  3000               	movlw	high __pbssBANK0
   632  0023  0085               	movwf	5
   633  0024  3030               	movlw	48
   634  0025  3182  22F0  3180   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK1
   637  0028  30A0               	movlw	low __pbssBANK1
   638  0029  0084               	movwf	4
   639  002A  3000               	movlw	high __pbssBANK1
   640  002B  0085               	movwf	5
   641  002C  3030               	movlw	48
   642  002D  3182  22F0         	fcall	clear_ram0
   643  002F                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  002F                     __end_of__initialization:	
   647  002F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   648  0030  0020               	movlb	0
   649  0031  3180  2833         	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	bssCOMMON
   652  0077                     __pbssCOMMON:	
   653  0077                     _time:	
   654  0077                     	ds	1
   655                           
   656                           	psect	bssBANK0
   657  0020                     __pbssBANK0:	
   658  0020                     _led:	
   659  0020                     	ds	48
   660                           
   661                           	psect	bssBANK1
   662  00A0                     __pbssBANK1:	
   663  00A0                     _stoc:	
   664  00A0                     	ds	48
   665                           
   666                           	psect	clrtext
   667  02F0                     clear_ram0:	
   668                           ;	Called with FSR0 containing the base address, and
   669                           ;	WREG with the size to clear
   670                           
   671  02F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  02F1                     clrloop0:	
   673  02F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  02F2  3101               	addfsr 0,1
   675  02F3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   676  02F4  2AF1               	goto	clrloop0	;have we reached the end yet?
   677  02F5  3400               	retlw	0	;all done for this memory range, return
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_putch:	
   682  0070                     ??_putch:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_waitstart:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_setdata:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_no0:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_no1:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_no2:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_no3:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_noxinit:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ??_noxinit:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_setpin:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_changeLED:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_InterTimer:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_main:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_getch:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     putch@Data:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 1 bytes @ 0x0
   729  0070                     	ds	2
   730  0072                     ??_no0:	
   731  0072                     ??_no1:	
   732                           ; 0 bytes @ 0x2
   733                           
   734  0072                     ??_no2:	
   735                           ; 0 bytes @ 0x2
   736                           
   737  0072                     ??_no3:	
   738                           ; 0 bytes @ 0x2
   739                           
   740  0072                     ??_changeLED:	
   741                           ; 0 bytes @ 0x2
   742                           
   743                           
   744                           ; 0 bytes @ 0x2
   745  0072                     	ds	2
   746  0074                     ??_InterTimer:	
   747                           
   748                           ; 0 bytes @ 0x4
   749  0074                     	ds	2
   750  0076                     ??_waitstart:	
   751  0076                     ??_getch:	
   752                           ; 0 bytes @ 0x6
   753                           
   754  0076                     ??_countup:	
   755                           ; 0 bytes @ 0x6
   756                           
   757  0076                     ??_setpin:	
   758                           ; 0 bytes @ 0x6
   759                           
   760  0076                     ?___bmul:	
   761                           ; 0 bytes @ 0x6
   762                           
   763  0076                     waitstart@ch:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     ___bmul@multiplicand:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 1 bytes @ 0x6
   771  0076                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0050                     __pcstackBANK0:	
   775  0050                     ??___bmul:	
   776  0050                     ?_countup:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0050                     countup@j:	
   780                           ; 2 bytes @ 0x0
   781                           
   782                           
   783                           ; 1 bytes @ 0x0
   784  0050                     	ds	1
   785  0051                     ___bmul@product:	
   786                           
   787                           ; 1 bytes @ 0x1
   788  0051                     	ds	1
   789  0052                     countup@i:	
   790  0052                     ___bmul@multiplier:	
   791                           ; 1 bytes @ 0x2
   792                           
   793                           
   794                           ; 1 bytes @ 0x2
   795  0052                     	ds	1
   796  0053                     ??_setdata:	
   797                           
   798                           ; 0 bytes @ 0x3
   799  0053                     	ds	5
   800  0058                     setdata@i:	
   801                           
   802                           ; 1 bytes @ 0x8
   803  0058                     	ds	1
   804  0059                     setdata@j:	
   805                           
   806                           ; 1 bytes @ 0x9
   807  0059                     	ds	1
   808  005A                     ??_main:	
   809                           
   810                           ; 0 bytes @ 0xA
   811  005A                     	ds	3
   812  005D                     main@stoclocal:	
   813                           
   814                           ; 1 bytes @ 0xD
   815  005D                     	ds	1
   816  005E                     main@j:	
   817                           
   818                           ; 1 bytes @ 0xE
   819  005E                     	ds	1
   820  005F                     main@i:	
   821                           
   822                           ; 1 bytes @ 0xF
   823  005F                     	ds	1
   824                           
   825                           	psect	maintext
   826  0033                     __pmaintext:	
   827 ;;
   828 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   829 ;;
   830 ;; *************** function _main *****************
   831 ;; Defined at:
   832 ;;		line 52 in file "ver0.0_20140727.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  test           32    0        unsigned char [4][8]
   837 ;;  str            10    0        unsigned char [10]
   838 ;;  i               1   15[BANK0 ] unsigned char 
   839 ;;  j               1   14[BANK0 ] unsigned char 
   840 ;;  stoclocal       1   13[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 17F/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   851 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;Total ram usage:        6 bytes
   855 ;; Hardware stack levels required when called:    5
   856 ;; This function calls:
   857 ;;		___bmul
   858 ;;		_countup
   859 ;;		_getch
   860 ;;		_setdata
   861 ;;		_setpin
   862 ;;		_waitstart
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _main
   870  0033                     _main:	
   871                           
   872                           ;ver0.0_20140727.c: 54: char i=1,j,str[10];
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   876  0033  0020               	movlb	0	; select bank0
   877  0034  01DF               	clrf	main@i
   878  0035  0ADF               	incf	main@i,f
   879                           
   880                           ;ver0.0_20140727.c: 55: unsigned char stoclocal;
   881                           ;ver0.0_20140727.c: 56: char test[8][4];
   882                           ;ver0.0_20140727.c: 57: setpin();
   883  0036  3182  2291  3180   	fcall	_setpin
   884                           
   885                           ;ver0.0_20140727.c: 58: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   886  0039  0021               	movlb	1	; select bank1
   887  003A  178E               	bsf	14,7	;volatile
   888  003B  130E               	bcf	14,6	;volatile
   889  003C  3033               	movlw	51
   890  003D  0023               	movlb	3	; select bank3
   891  003E  009B               	movwf	27	;volatile
   892  003F  3090               	movlw	144
   893  0040  009D               	movwf	29	;volatile
   894  0041  3024               	movlw	36
   895  0042  009E               	movwf	30	;volatile
   896  0043  019F               	clrf	31	;volatile
   897                           
   898                           ;ver0.0_20140727.c: 59: OPTION_REG = 0b00000110 ;
   899  0044  3006               	movlw	6
   900  0045  0021               	movlb	1	; select bank1
   901  0046  0095               	movwf	21	;volatile
   902                           
   903                           ;ver0.0_20140727.c: 60: TMR0 = 61 ;
   904  0047  303D               	movlw	61
   905  0048  0020               	movlb	0	; select bank0
   906  0049  0095               	movwf	21	;volatile
   907                           
   908                           ;ver0.0_20140727.c: 61: TMR0IF = 0 ;
   909  004A  110B               	bcf	11,2	;volatile
   910                           
   911                           ;ver0.0_20140727.c: 62: time = 0 ;
   912  004B  01F7               	clrf	_time
   913                           
   914                           ;ver0.0_20140727.c: 63: TMR0IE = 1 ;
   915  004C  168B               	bsf	11,5	;volatile
   916                           
   917                           ;ver0.0_20140727.c: 64: WPUB = 0xC0;
   918  004D  30C0               	movlw	192
   919  004E  0024               	movlb	4	; select bank4
   920  004F  008D               	movwf	13	;volatile
   921                           
   922                           ;ver0.0_20140727.c: 65: nWPUEN = 0;
   923  0050  0021               	movlb	1	; select bank1
   924  0051  1395               	bcf	21,7	;volatile
   925                           
   926                           ;ver0.0_20140727.c: 66: GIE = 0 ;
   927  0052  138B               	bcf	11,7	;volatile
   928                           
   929                           ;ver0.0_20140727.c: 67: RA1=1;
   930  0053  0020               	movlb	0	; select bank0
   931  0054  148C               	bsf	12,1	;volatile
   932                           
   933                           ;ver0.0_20140727.c: 68: RA2=1;
   934  0055  150C               	bsf	12,2	;volatile
   935                           
   936                           ;ver0.0_20140727.c: 69: RA3=1;
   937  0056  158C               	bsf	12,3	;volatile
   938                           
   939                           ;ver0.0_20140727.c: 70: RA4=1;
   940  0057  160C               	bsf	12,4	;volatile
   941                           
   942                           ;ver0.0_20140727.c: 71: RA5=1;
   943  0058  168C               	bsf	12,5	;volatile
   944                           
   945                           ;ver0.0_20140727.c: 72: RB0=1;
   946  0059  140D               	bsf	13,0	;volatile
   947                           
   948                           ;ver0.0_20140727.c: 73: RB1=1;
   949  005A  148D               	bsf	13,1	;volatile
   950                           
   951                           ;ver0.0_20140727.c: 74: RB2=1;
   952  005B  150D               	bsf	13,2	;volatile
   953                           
   954                           ;ver0.0_20140727.c: 75: RB3=1;
   955  005C  158D               	bsf	13,3	;volatile
   956                           
   957                           ;ver0.0_20140727.c: 76: RB4=1;
   958  005D  160D               	bsf	13,4	;volatile
   959                           
   960                           ;ver0.0_20140727.c: 77: RB5=1;
   961  005E  168D               	bsf	13,5	;volatile
   962                           
   963                           ;ver0.0_20140727.c: 78: RB6=1;
   964  005F  170D               	bsf	13,6	;volatile
   965                           
   966                           ;ver0.0_20140727.c: 79: RB7=1;
   967  0060  178D               	bsf	13,7	;volatile
   968                           
   969                           ;ver0.0_20140727.c: 80: RE0=1;
   970  0061  1410               	bsf	16,0	;volatile
   971                           
   972                           ;ver0.0_20140727.c: 81: RE1=1;
   973  0062  1490               	bsf	16,1	;volatile
   974                           
   975                           ;ver0.0_20140727.c: 82: RE2=1;
   976  0063  1510               	bsf	16,2	;volatile
   977                           
   978                           ;ver0.0_20140727.c: 84: PORTA=0xFF;
   979  0064  30FF               	movlw	255
   980  0065  008C               	movwf	12	;volatile
   981                           
   982                           ;ver0.0_20140727.c: 85: PORTB=0xFF;
   983  0066  30FF               	movlw	255
   984  0067  008D               	movwf	13	;volatile
   985                           
   986                           ;ver0.0_20140727.c: 86: PORTC=0xFF;
   987  0068  30FF               	movlw	255
   988  0069  008E               	movwf	14	;volatile
   989                           
   990                           ;ver0.0_20140727.c: 87: PORTD=0xFF;
   991  006A  30FF               	movlw	255
   992  006B  008F               	movwf	15	;volatile
   993                           
   994                           ;ver0.0_20140727.c: 88: PORTE=0xFF;
   995  006C  30FF               	movlw	255
   996  006D  0090               	movwf	16	;volatile
   997                           
   998                           ;ver0.0_20140727.c: 89: RA7=0;
   999  006E  138C               	bcf	12,7	;volatile
  1000                           
  1001                           ;ver0.0_20140727.c: 90: RA6=0;
  1002  006F  130C               	bcf	12,6	;volatile
  1003                           
  1004                           ;ver0.0_20140727.c: 91: RC0=0;
  1005  0070  100E               	bcf	14,0	;volatile
  1006                           
  1007                           ;ver0.0_20140727.c: 92: RC1=0;
  1008  0071  108E               	bcf	14,1	;volatile
  1009                           
  1010                           ;ver0.0_20140727.c: 93: RC2=0;
  1011  0072  110E               	bcf	14,2	;volatile
  1012                           
  1013                           ;ver0.0_20140727.c: 94: RC3=0;
  1014  0073  118E               	bcf	14,3	;volatile
  1015                           
  1016                           ;ver0.0_20140727.c: 95: RD0=0;
  1017  0074  100F               	bcf	15,0	;volatile
  1018                           
  1019                           ;ver0.0_20140727.c: 96: RD1=0;
  1020  0075  108F               	bcf	15,1	;volatile
  1021                           
  1022                           ;ver0.0_20140727.c: 97: i=1;0;
  1023  0076  01DF               	clrf	main@i
  1024  0077  0ADF               	incf	main@i,f
  1025                           
  1026                           ;ver0.0_20140727.c: 98: TRISD=0b00111100;
  1027  0078  303C               	movlw	60
  1028  0079  0021               	movlb	1	; select bank1
  1029  007A  008F               	movwf	15	;volatile
  1030                           
  1031                           ;ver0.0_20140727.c: 99: RD6=1;
  1032  007B  0020               	movlb	0	; select bank0
  1033  007C  170F               	bsf	15,6	;volatile
  1034                           
  1035                           ;ver0.0_20140727.c: 101: switch(i){
  1036                           
  1037                           ;ver0.0_20140727.c: 100: while(1){
  1038  007D  2893               	goto	l1763
  1039  007E                     l263:	
  1040                           ;ver0.0_20140727.c: 102: case 1:RA7=1;break;
  1041                           
  1042  007E  178C               	bsf	12,7	;volatile
  1043  007F  288D               	goto	l1765
  1044  0080                     l265:	
  1045                           ;ver0.0_20140727.c: 103: case 2:RA6=1;break;
  1046                           
  1047  0080  170C               	bsf	12,6	;volatile
  1048  0081  288D               	goto	l1765
  1049  0082                     l266:	
  1050                           ;ver0.0_20140727.c: 104: case 3:RC0=1;break;
  1051                           
  1052  0082  140E               	bsf	14,0	;volatile
  1053  0083  288D               	goto	l1765
  1054  0084                     l267:	
  1055                           ;ver0.0_20140727.c: 105: case 4:RC1=1;break;
  1056                           
  1057  0084  148E               	bsf	14,1	;volatile
  1058  0085  288D               	goto	l1765
  1059  0086                     l268:	
  1060                           ;ver0.0_20140727.c: 106: case 5:RC2=1;break;
  1061                           
  1062  0086  150E               	bsf	14,2	;volatile
  1063  0087  288D               	goto	l1765
  1064  0088                     l269:	
  1065                           ;ver0.0_20140727.c: 107: case 6:RC3=1;break;
  1066                           
  1067  0088  158E               	bsf	14,3	;volatile
  1068  0089  288D               	goto	l1765
  1069  008A                     l270:	
  1070                           ;ver0.0_20140727.c: 108: case 7:RD0=1;break;
  1071                           
  1072  008A  140F               	bsf	15,0	;volatile
  1073  008B  288D               	goto	l1765
  1074  008C                     l271:	
  1075                           ;ver0.0_20140727.c: 109: case 8:RD1=1;break;
  1076                           
  1077  008C  148F               	bsf	15,1	;volatile
  1078  008D                     l1765:	
  1079                           ;ver0.0_20140727.c: 110: }
  1080                           
  1081                           
  1082                           ;ver0.0_20140727.c: 111: if(i==9){
  1083  008D  085F               	movf	main@i,w
  1084  008E  3A09               	xorlw	9
  1085  008F  1D03               	skipz
  1086  0090  28A1               	goto	l274
  1087                           
  1088                           ;ver0.0_20140727.c: 112: i=1;
  1089  0091  01DF               	clrf	main@i
  1090  0092  0ADF               	incf	main@i,f
  1091  0093                     l1763:	
  1092  0093  085F               	movf	main@i,w
  1093                           
  1094                           ; Switch size 1, requested type "space"
  1095                           ; Number of cases is 8, Range of values is 1 to 8
  1096                           ; switch strategies available:
  1097                           ; Name         Instructions Cycles
  1098                           ; direct_byte           25     9 (fixed)
  1099                           ; simple_byte           25    13 (average)
  1100                           ; jumptable            263     9 (fixed)
  1101                           ;	Chosen strategy is direct_byte
  1102  0094  3EFF               	addlw	-1
  1103  0095  1C03               	skipc
  1104  0096  288D               	goto	l1765
  1105  0097  0084               	movwf	4
  1106  0098  3008               	movlw	8
  1107  0099  0204               	subwf	4,w
  1108  009A  1803               	skipnc
  1109  009B  288D               	goto	l1765
  1110  009C  3182               	movlp	high S1855
  1111  009D  3504               	lslf	4,w
  1112  009E  3EBA               	addlw	low S1855
  1113  009F  0082               	movwf	2
  1114                           
  1115                           ;ver0.0_20140727.c: 113: continue;
  1116  00A0  288D               	goto	l1765
  1117  00A1                     l274:	
  1118                           ;ver0.0_20140727.c: 114: }
  1119                           ;ver0.0_20140727.c: 115: while(RC4==1);
  1120                           
  1121  00A1  1A0E               	btfsc	14,4	;volatile
  1122  00A2  28A1               	goto	l274
  1123                           
  1124                           ;ver0.0_20140727.c: 117: RA7=0;
  1125  00A3  138C               	bcf	12,7	;volatile
  1126                           
  1127                           ;ver0.0_20140727.c: 118: RA6=0;
  1128  00A4  130C               	bcf	12,6	;volatile
  1129                           
  1130                           ;ver0.0_20140727.c: 119: RC0=0;
  1131  00A5  100E               	bcf	14,0	;volatile
  1132                           
  1133                           ;ver0.0_20140727.c: 120: RC1=0;
  1134  00A6  108E               	bcf	14,1	;volatile
  1135                           
  1136                           ;ver0.0_20140727.c: 121: RC2=0;
  1137  00A7  110E               	bcf	14,2	;volatile
  1138                           
  1139                           ;ver0.0_20140727.c: 122: RC3=0;
  1140  00A8  118E               	bcf	14,3	;volatile
  1141                           
  1142                           ;ver0.0_20140727.c: 123: RD0=0;
  1143  00A9  100F               	bcf	15,0	;volatile
  1144                           
  1145                           ;ver0.0_20140727.c: 124: RD1=0;
  1146  00AA  108F               	bcf	15,1	;volatile
  1147                           
  1148                           ;ver0.0_20140727.c: 125: i++;
  1149  00AB  3001               	movlw	1
  1150  00AC  00DA               	movwf	??_main
  1151  00AD  085A               	movf	??_main,w
  1152  00AE  07DF               	addwf	main@i,f
  1153  00AF                     l277:	
  1154                           ;ver0.0_20140727.c: 126: while(RC4==0);
  1155                           
  1156  00AF  1A0E               	btfsc	14,4	;volatile
  1157  00B0  2893               	goto	l1763
  1158  00B1  28AF               	goto	l277
  1159  00B2                     l1771:	
  1160                           ;ver0.0_20140727.c: 127: }
  1161                           ;ver0.0_20140727.c: 142: while(1) {
  1162                           
  1163                           
  1164                           ;ver0.0_20140727.c: 143: waitstart();
  1165  00B2  3182  2278  3180   	fcall	_waitstart
  1166                           
  1167                           ;ver0.0_20140727.c: 144: for(i=0;i<16;i++){
  1168  00B5  0020               	movlb	0	; select bank0
  1169  00B6  01DF               	clrf	main@i
  1170  00B7  3010               	movlw	16
  1171  00B8  025F               	subwf	main@i,w
  1172  00B9  1803               	btfsc	3,0
  1173  00BA  292A               	goto	l1807
  1174  00BB                     l1779:	
  1175                           
  1176                           ;ver0.0_20140727.c: 145: for(j=0;j<3;j++){
  1177  00BB  01DE               	clrf	main@j
  1178  00BC  3003               	movlw	3
  1179  00BD  025E               	subwf	main@j,w
  1180  00BE  1803               	btfsc	3,0
  1181  00BF  2922               	goto	l1803
  1182  00C0                     l1785:	
  1183                           
  1184                           ;ver0.0_20140727.c: 146: if((stoclocal=getch())==0x0D){
  1185  00C0  3182  22E2  3180   	fcall	_getch
  1186  00C3  0020               	movlb	0	; select bank0
  1187  00C4  00DA               	movwf	??_main
  1188  00C5  085A               	movf	??_main,w
  1189  00C6  00DD               	movwf	main@stoclocal
  1190  00C7  085D               	movf	main@stoclocal,w
  1191  00C8  3A0D               	xorlw	13
  1192  00C9  1D03               	skipz
  1193  00CA  2906               	goto	l1797
  1194                           
  1195                           ;ver0.0_20140727.c: 147: stoc[i][j]=0x0D;
  1196  00CB  300D               	movlw	13
  1197  00CC  00DA               	movwf	??_main
  1198  00CD  3003               	movlw	3
  1199  00CE  00DB               	movwf	??_main+1
  1200  00CF  085B               	movf	??_main+1,w
  1201  00D0  00F6               	movwf	___bmul@multiplicand
  1202  00D1  085F               	movf	main@i,w
  1203  00D2  3182  22A8  3180   	fcall	___bmul
  1204  00D5  3EA0               	addlw	_stoc& (0+255)
  1205  00D6  0020               	movlb	0	; select bank0
  1206  00D7  075E               	addwf	main@j,w
  1207  00D8  00DC               	movwf	??_main+2
  1208  00D9  085C               	movf	??_main+2,w
  1209  00DA  0086               	movwf	6
  1210  00DB  0187               	clrf	7
  1211  00DC  085A               	movf	??_main,w
  1212  00DD  0081               	movwf	1
  1213                           
  1214                           ;ver0.0_20140727.c: 148: if(countup(&i,&j));
  1215  00DE  305E               	movlw	main@j& (0+255)
  1216  00DF  00DA               	movwf	??_main
  1217  00E0  085A               	movf	??_main,w
  1218  00E1  00D0               	movwf	countup@j
  1219  00E2  305F               	movlw	main@i& (0+255)
  1220  00E3  3182  224A  3180   	fcall	_countup
  1221  00E6  0020               	movlb	0	; select bank0
  1222  00E7  0851               	movf	?_countup+1,w
  1223  00E8  0450               	iorwf	?_countup,w
  1224  00E9  1D03               	btfss	3,2
  1225  00EA  2919               	goto	l1799
  1226                           
  1227                           ;ver0.0_20140727.c: 149: else if((stoclocal=getch())==0x0A){
  1228  00EB  3182  22E2  3180   	fcall	_getch
  1229  00EE  0020               	movlb	0	; select bank0
  1230  00EF  00DA               	movwf	??_main
  1231  00F0  085A               	movf	??_main,w
  1232  00F1  00DD               	movwf	main@stoclocal
  1233  00F2  085D               	movf	main@stoclocal,w
  1234  00F3  3A0A               	xorlw	10
  1235  00F4  1D03               	skipz
  1236  00F5  2919               	goto	l1799
  1237                           
  1238                           ;ver0.0_20140727.c: 150: if(0xDD!=getch()){
  1239  00F6  3182  22E2  3180   	fcall	_getch
  1240  00F9  3ADD               	xorlw	221
  1241  00FA  1903               	skipnz
  1242  00FB  2919               	goto	l1799
  1243                           
  1244                           ;ver0.0_20140727.c: 151: i=16;
  1245  00FC  3010               	movlw	16
  1246  00FD  0020               	movlb	0	; select bank0
  1247  00FE  00DA               	movwf	??_main
  1248  00FF  085A               	movf	??_main,w
  1249  0100  00DF               	movwf	main@i
  1250                           
  1251                           ;ver0.0_20140727.c: 152: j=3;
  1252  0101  3003               	movlw	3
  1253  0102  00DA               	movwf	??_main
  1254  0103  085A               	movf	??_main,w
  1255  0104  00DE               	movwf	main@j
  1256                           
  1257                           ;ver0.0_20140727.c: 156: }
  1258                           ;ver0.0_20140727.c: 157: }
  1259                           
  1260                           ;ver0.0_20140727.c: 153: }
  1261                           ;ver0.0_20140727.c: 154: }else{
  1262  0105  2919               	goto	l1799
  1263  0106                     l1797:	
  1264                           
  1265                           ;ver0.0_20140727.c: 158: else
  1266                           ;ver0.0_20140727.c: 159: stoc[i][j]=stoclocal;
  1267  0106  085D               	movf	main@stoclocal,w
  1268  0107  00DA               	movwf	??_main
  1269  0108  3003               	movlw	3
  1270  0109  00DB               	movwf	??_main+1
  1271  010A  085B               	movf	??_main+1,w
  1272  010B  00F6               	movwf	___bmul@multiplicand
  1273  010C  085F               	movf	main@i,w
  1274  010D  3182  22A8  3180   	fcall	___bmul
  1275  0110  3EA0               	addlw	_stoc& (0+255)
  1276  0111  0020               	movlb	0	; select bank0
  1277  0112  075E               	addwf	main@j,w
  1278  0113  00DC               	movwf	??_main+2
  1279  0114  085C               	movf	??_main+2,w
  1280  0115  0086               	movwf	6
  1281  0116  0187               	clrf	7
  1282  0117  085A               	movf	??_main,w
  1283  0118  0081               	movwf	1
  1284  0119                     l1799:	
  1285  0119  3001               	movlw	1
  1286  011A  0020               	movlb	0	; select bank0
  1287  011B  00DA               	movwf	??_main
  1288  011C  085A               	movf	??_main,w
  1289  011D  07DE               	addwf	main@j,f
  1290  011E  3003               	movlw	3
  1291  011F  025E               	subwf	main@j,w
  1292  0120  1C03               	skipc
  1293  0121  28C0               	goto	l1785
  1294  0122                     l1803:	
  1295  0122  3001               	movlw	1
  1296  0123  00DA               	movwf	??_main
  1297  0124  085A               	movf	??_main,w
  1298  0125  07DF               	addwf	main@i,f
  1299  0126  3010               	movlw	16
  1300  0127  025F               	subwf	main@i,w
  1301  0128  1C03               	skipc
  1302  0129  28BB               	goto	l1779
  1303  012A                     l1807:	
  1304                           
  1305                           ;ver0.0_20140727.c: 160: }
  1306                           ;ver0.0_20140727.c: 161: }
  1307                           ;ver0.0_20140727.c: 162: if(i>16);
  1308  012A  3011               	movlw	17
  1309  012B  025F               	subwf	main@i,w
  1310  012C  1803               	btfsc	3,0
  1311  012D  28B2               	goto	l1771
  1312                           
  1313                           ;ver0.0_20140727.c: 163: else{
  1314                           ;ver0.0_20140727.c: 164: if(0x0D==getch()){
  1315  012E  3182  22E2  3180   	fcall	_getch
  1316  0131  3A0D               	xorlw	13
  1317  0132  1D03               	skipz
  1318  0133  28B2               	goto	l1771
  1319                           
  1320                           ;ver0.0_20140727.c: 165: if(0x0A==getch()){
  1321  0134  3182  22E2  3180   	fcall	_getch
  1322  0137  3A0A               	xorlw	10
  1323  0138  1D03               	skipz
  1324  0139  28B2               	goto	l1771
  1325                           
  1326                           ;ver0.0_20140727.c: 166: if(0xDD!=getch())
  1327  013A  3182  22E2  3180   	fcall	_getch
  1328  013D  3ADD               	xorlw	221
  1329  013E  1903               	skipnz
  1330  013F  28B2               	goto	l1771
  1331                           
  1332                           ;ver0.0_20140727.c: 167: setdata();
  1333  0140  3181  2144  3180   	fcall	_setdata
  1334  0143  28B2               	goto	l1771
  1335  0144                     __end_of_main:	
  1336                           
  1337                           	psect	swtext1
  1338  02BA                     __pswtext1:	
  1339  02BA                     S1855:	
  1340  02BA  3180  287E         	ljmp	l263
  1341  02BC  3180  2880         	ljmp	l265
  1342  02BE  3180  2882         	ljmp	l266
  1343  02C0  3180  2884         	ljmp	l267
  1344  02C2  3180  2886         	ljmp	l268
  1345  02C4  3180  2888         	ljmp	l269
  1346  02C6  3180  288A         	ljmp	l270
  1347  02C8  3180  288C         	ljmp	l271
  1348                           
  1349                           	psect	text1
  1350  0278                     __ptext1:	
  1351 ;; *************** function _waitstart *****************
  1352 ;; Defined at:
  1353 ;;		line 195 in file "ver0.0_20140727.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  ch              1    6[COMMON] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;		None               void
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, pclath, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1370 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    4
  1374 ;; This function calls:
  1375 ;;		_getch
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _waitstart
  1383  0278                     _waitstart:	
  1384                           
  1385                           ;ver0.0_20140727.c: 196: char ch=1;
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in _waitstart: [wreg+status,2+status,0+pclath+cstack]
  1389  0278  01F6               	clrf	waitstart@ch
  1390  0279  0AF6               	incf	waitstart@ch,f
  1391  027A                     l1365:	
  1392                           ;ver0.0_20140727.c: 198: while(getch()==0xFF);
  1393                           
  1394                           ;ver0.0_20140727.c: 197: do{
  1395                           
  1396  027A  3182  22E2  3182   	fcall	_getch
  1397  027D  3AFF               	xorlw	255
  1398  027E  1903               	skipnz
  1399  027F  2A7A               	goto	l1365
  1400                           
  1401                           ;ver0.0_20140727.c: 199: if(0x53==getch()){
  1402  0280  3182  22E2  3182   	fcall	_getch
  1403  0283  3A53               	xorlw	83
  1404  0284  1D03               	skipz
  1405  0285  2A8D               	goto	l1373
  1406                           
  1407                           ;ver0.0_20140727.c: 200: if(0x54==getch())
  1408  0286  3182  22E2  3182   	fcall	_getch
  1409  0289  3A54               	xorlw	84
  1410  028A  1D03               	skipz
  1411  028B  2A8D               	goto	l1373
  1412                           
  1413                           ;ver0.0_20140727.c: 201: ch=0;
  1414  028C  01F6               	clrf	waitstart@ch
  1415  028D                     l1373:	
  1416                           
  1417                           ;ver0.0_20140727.c: 202: }
  1418                           ;ver0.0_20140727.c: 203: }while(ch);
  1419  028D  08F6               	movf	waitstart@ch,f
  1420  028E  1903               	btfsc	3,2
  1421  028F  0008               	return
  1422  0290  2A7A               	goto	l1365
  1423  0291                     __end_of_waitstart:	
  1424                           
  1425                           	psect	text2
  1426  02E2                     __ptext2:	
  1427 ;; *************** function _getch *****************
  1428 ;; Defined at:
  1429 ;;		line 9 in file "uart.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      unsigned char 
  1436 ;; Registers used:
  1437 ;;		wreg
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;;		_waitstart
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _getch
  1460  02E2                     _getch:	
  1461  02E2                     l341:	
  1462                           ;uart.c: 10: while(!RCIF){}
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _getch: [wreg]
  1466                           
  1467  02E2  0020               	movlb	0	; select bank0
  1468  02E3  1E91               	btfss	17,5	;volatile
  1469  02E4  2AE2               	goto	l341
  1470                           
  1471                           ;uart.c: 11: RCIF=0;
  1472  02E5  1291               	bcf	17,5	;volatile
  1473                           
  1474                           ;uart.c: 12: return RCREG;
  1475  02E6  0023               	movlb	3	; select bank3
  1476  02E7  0819               	movf	25,w	;volatile
  1477  02E8  0008               	return
  1478  02E9                     __end_of_getch:	
  1479                           
  1480                           	psect	text3
  1481  0291                     __ptext3:	
  1482 ;; *************** function _setpin *****************
  1483 ;; Defined at:
  1484 ;;		line 62 in file "sorce.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _setpin
  1514  0291                     _setpin:	
  1515                           
  1516                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1517                           
  1518                           ;incstack = 0
  1519                           ; Regs used in _setpin: [wreg+status,2]
  1520  0291  3070               	movlw	112
  1521  0292  0021               	movlb	1	; select bank1
  1522  0293  0099               	movwf	25	;volatile
  1523                           
  1524                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1525  0294  0023               	movlb	3	; select bank3
  1526  0295  018C               	clrf	12	;volatile
  1527                           
  1528                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1529  0296  018D               	clrf	13	;volatile
  1530                           
  1531                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1532  0297  018F               	clrf	15	;volatile
  1533                           
  1534                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1535  0298  0190               	clrf	16	;volatile
  1536                           
  1537                           ;sorce.c: 68: TRISA = 0b00000000 ;
  1538  0299  0021               	movlb	1	; select bank1
  1539  029A  018C               	clrf	12	;volatile
  1540                           
  1541                           ;sorce.c: 69: TRISB = 0b00000000 ;
  1542  029B  018D               	clrf	13	;volatile
  1543                           
  1544                           ;sorce.c: 70: TRISC = 0b10110000 ;
  1545  029C  30B0               	movlw	176
  1546  029D  008E               	movwf	14	;volatile
  1547                           
  1548                           ;sorce.c: 71: TRISD = 0b00111100 ;
  1549  029E  303C               	movlw	60
  1550  029F  008F               	movwf	15	;volatile
  1551                           
  1552                           ;sorce.c: 72: TRISE = 0X00 ;
  1553  02A0  0190               	clrf	16	;volatile
  1554                           
  1555                           ;sorce.c: 74: PORTA = 0b00000000 ;
  1556  02A1  0020               	movlb	0	; select bank0
  1557  02A2  018C               	clrf	12	;volatile
  1558                           
  1559                           ;sorce.c: 75: PORTB = 0b00000000 ;
  1560  02A3  018D               	clrf	13	;volatile
  1561                           
  1562                           ;sorce.c: 76: PORTC = 0b10000000 ;
  1563  02A4  3080               	movlw	128
  1564  02A5  008E               	movwf	14	;volatile
  1565                           
  1566                           ;sorce.c: 77: PORTD = 0b00000000 ;
  1567  02A6  018F               	clrf	15	;volatile
  1568  02A7  0008               	return
  1569  02A8                     __end_of_setpin:	
  1570                           
  1571                           	psect	text4
  1572  0144                     __ptext4:	
  1573 ;; *************** function _setdata *****************
  1574 ;; Defined at:
  1575 ;;		line 188 in file "ver0.0_20140727.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  j               1    9[BANK0 ] unsigned char 
  1580 ;;  i               1    8[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;		None               void
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1591 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1592 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1593 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;Total ram usage:        7 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    4
  1597 ;; This function calls:
  1598 ;;		___bmul
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _setdata
  1606  0144                     _setdata:	
  1607                           
  1608                           ;ver0.0_20140727.c: 189: char i,j;
  1609                           ;ver0.0_20140727.c: 190: for(i=0;i<16;i++){
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _setdata: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1613  0144  0020               	movlb	0	; select bank0
  1614  0145  01D8               	clrf	setdata@i
  1615  0146                     L1:	
  1616  0146  3010               	movlw	16
  1617  0147  0258               	subwf	setdata@i,w
  1618  0148  1803               	btfsc	3,0
  1619  0149  0008               	return
  1620                           
  1621                           ;ver0.0_20140727.c: 191: for(j=0;j<3;j++)
  1622  014A  01D9               	clrf	setdata@j
  1623  014B  3003               	movlw	3
  1624  014C  0259               	subwf	setdata@j,w
  1625  014D  1803               	btfsc	3,0
  1626  014E  2979               	goto	l1661
  1627  014F                     l1655:	
  1628                           
  1629                           ;ver0.0_20140727.c: 192: led[i][j]=stoc[i][j];
  1630  014F  3003               	movlw	3
  1631  0150  00D3               	movwf	??_setdata
  1632  0151  0853               	movf	??_setdata,w
  1633  0152  00F6               	movwf	___bmul@multiplicand
  1634  0153  0858               	movf	setdata@i,w
  1635  0154  3182  22A8  3181   	fcall	___bmul
  1636  0157  3EA0               	addlw	_stoc& (0+255)
  1637  0158  0020               	movlb	0	; select bank0
  1638  0159  0759               	addwf	setdata@j,w
  1639  015A  00D4               	movwf	??_setdata+1
  1640  015B  0854               	movf	??_setdata+1,w
  1641  015C  0086               	movwf	6
  1642  015D  0187               	clrf	7
  1643  015E  0801               	movf	1,w
  1644  015F  00D5               	movwf	??_setdata+2
  1645  0160  3003               	movlw	3
  1646  0161  00D6               	movwf	??_setdata+3
  1647  0162  0856               	movf	??_setdata+3,w
  1648  0163  00F6               	movwf	___bmul@multiplicand
  1649  0164  0858               	movf	setdata@i,w
  1650  0165  3182  22A8  3181   	fcall	___bmul
  1651  0168  3E20               	addlw	_led& (0+255)
  1652  0169  0020               	movlb	0	; select bank0
  1653  016A  0759               	addwf	setdata@j,w
  1654  016B  00D7               	movwf	??_setdata+4
  1655  016C  0857               	movf	??_setdata+4,w
  1656  016D  0086               	movwf	6
  1657  016E  0187               	clrf	7
  1658  016F  0855               	movf	??_setdata+2,w
  1659  0170  0081               	movwf	1
  1660  0171  3001               	movlw	1
  1661  0172  00D3               	movwf	??_setdata
  1662  0173  0853               	movf	??_setdata,w
  1663  0174  07D9               	addwf	setdata@j,f
  1664  0175  3003               	movlw	3
  1665  0176  0259               	subwf	setdata@j,w
  1666  0177  1C03               	skipc
  1667  0178  294F               	goto	l1655
  1668  0179                     l1661:	
  1669  0179  3001               	movlw	1
  1670  017A  00D3               	movwf	??_setdata
  1671  017B  0853               	movf	??_setdata,w
  1672  017C  07D8               	addwf	setdata@i,f
  1673  017D  2946               	goto	L1
  1674  017E                     __end_of_setdata:	
  1675                           
  1676                           	psect	text5
  1677  02A8                     __ptext5:	
  1678 ;; *************** function ___bmul *****************
  1679 ;; Defined at:
  1680 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul8.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  multiplier      1    wreg     unsigned char 
  1683 ;;  multiplicand    1    6[COMMON] unsigned char 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1686 ;;  product         1    1[BANK0 ] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      unsigned char 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;Total ram usage:        4 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    3
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;;		_setdata
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function ___bmul
  1713  02A8                     ___bmul:	
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1717                           ;___bmul@multiplier stored from wreg
  1718  02A8  0020               	movlb	0	; select bank0
  1719  02A9  00D2               	movwf	___bmul@multiplier
  1720  02AA  01D1               	clrf	___bmul@product
  1721  02AB                     l1609:	
  1722  02AB  1C52               	btfss	___bmul@multiplier,0
  1723  02AC  2AB1               	goto	l1613
  1724  02AD  0876               	movf	___bmul@multiplicand,w
  1725  02AE  00D0               	movwf	??___bmul
  1726  02AF  0850               	movf	??___bmul,w
  1727  02B0  07D1               	addwf	___bmul@product,f
  1728  02B1                     l1613:	
  1729  02B1  1003               	clrc
  1730  02B2  0DF6               	rlf	___bmul@multiplicand,f
  1731  02B3  1003               	clrc
  1732  02B4  0CD2               	rrf	___bmul@multiplier,f
  1733  02B5  08D2               	movf	___bmul@multiplier,f
  1734  02B6  1D03               	skipz
  1735  02B7  2AAB               	goto	l1609
  1736  02B8  0851               	movf	___bmul@product,w
  1737  02B9  0008               	return
  1738  02BA                     __end_of___bmul:	
  1739                           
  1740                           	psect	text6
  1741  024A                     __ptext6:	
  1742 ;; *************** function _countup *****************
  1743 ;; Defined at:
  1744 ;;		line 173 in file "ver0.0_20140727.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  i               1    wreg     PTR unsigned char 
  1747 ;;		 -> main@i(1), 
  1748 ;;  j               1    0[BANK0 ] PTR unsigned char 
  1749 ;;		 -> main@j(1), 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  i               1    2[BANK0 ] PTR unsigned char 
  1752 ;;		 -> main@i(1), 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2    0[BANK0 ] int 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;Total ram usage:        4 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    3
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _countup
  1778  024A                     _countup:	
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _countup: [wreg+fsr1l+fsr1h+status,2+status,0]
  1782                           ;countup@i stored from wreg
  1783  024A  0020               	movlb	0	; select bank0
  1784  024B  00D2               	movwf	countup@i
  1785                           
  1786                           ;ver0.0_20140727.c: 174: if(*j<3-1)
  1787  024C  0850               	movf	countup@j,w
  1788  024D  0086               	movwf	6
  1789  024E  0187               	clrf	7
  1790  024F  3002               	movlw	2
  1791  0250  0201               	subwf	1,w
  1792  0251  1803               	skipnc
  1793  0252  2A58               	goto	l1627
  1794                           
  1795                           ;ver0.0_20140727.c: 175: *j++;
  1796  0253  3001               	movlw	1
  1797  0254  00F6               	movwf	??_countup
  1798  0255  0876               	movf	??_countup,w
  1799  0256  07D0               	addwf	countup@j,f
  1800  0257  2A75               	goto	l1639
  1801  0258                     l1627:	
  1802                           
  1803                           ;ver0.0_20140727.c: 176: else{
  1804                           ;ver0.0_20140727.c: 177: if(*i<16-1){
  1805  0258  0852               	movf	countup@i,w
  1806  0259  0086               	movwf	6
  1807  025A  0187               	clrf	7
  1808  025B  300F               	movlw	15
  1809  025C  0201               	subwf	1,w
  1810  025D  1803               	skipnc
  1811  025E  2A68               	goto	l1633
  1812                           
  1813                           ;ver0.0_20140727.c: 178: *j=0;
  1814  025F  0850               	movf	countup@j,w
  1815  0260  0086               	movwf	6
  1816  0261  0187               	clrf	7
  1817  0262  0181               	clrf	1
  1818                           
  1819                           ;ver0.0_20140727.c: 179: *i++;
  1820  0263  3001               	movlw	1
  1821  0264  00F6               	movwf	??_countup
  1822  0265  0876               	movf	??_countup,w
  1823  0266  07D2               	addwf	countup@i,f
  1824                           
  1825                           ;ver0.0_20140727.c: 180: }else{
  1826  0267  2A75               	goto	l1639
  1827  0268                     l1633:	
  1828                           
  1829                           ;ver0.0_20140727.c: 181: *j++;
  1830  0268  3001               	movlw	1
  1831  0269  00F6               	movwf	??_countup
  1832  026A  0876               	movf	??_countup,w
  1833  026B  07D0               	addwf	countup@j,f
  1834                           
  1835                           ;ver0.0_20140727.c: 182: *i++;
  1836  026C  3001               	movlw	1
  1837  026D  00F6               	movwf	??_countup
  1838  026E  0876               	movf	??_countup,w
  1839  026F  07D2               	addwf	countup@i,f
  1840                           
  1841                           ;ver0.0_20140727.c: 183: return 1;
  1842  0270  3001               	movlw	1
  1843  0271  00D0               	movwf	?_countup
  1844  0272  3000               	movlw	0
  1845  0273  00D1               	movwf	?_countup+1
  1846  0274  0008               	return
  1847  0275                     l1639:	
  1848                           
  1849                           ;ver0.0_20140727.c: 184: }
  1850                           ;ver0.0_20140727.c: 185: }
  1851                           ;ver0.0_20140727.c: 186: return 0;
  1852  0275  01D0               	clrf	?_countup
  1853  0276  01D1               	clrf	?_countup+1
  1854  0277  0008               	return
  1855  0278                     __end_of_countup:	
  1856                           
  1857                           	psect	intentry
  1858  0004                     __pintentry:	
  1859 ;; *************** function _InterTimer *****************
  1860 ;; Defined at:
  1861 ;;		line 39 in file "ver0.0_20140727.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;		None               void
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;Total ram usage:        2 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    2
  1882 ;; This function calls:
  1883 ;;		_changeLED
  1884 ;;		_putch
  1885 ;; This function is called by:
  1886 ;;		Interrupt level 1
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890  0004                     _InterTimer:	
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _InterTimer: [wreg+status,2+status,0+pclath+cstack]
  1894  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1895  0005  3180               	pagesel	$
  1896  0006  0020               	movlb	0	; select bank0
  1897  0007  087F               	movf	127,w
  1898  0008  00F5               	movwf	??_InterTimer+1
  1899                           
  1900                           ;ver0.0_20140727.c: 41: if (TMR0IF == 1) {
  1901  0009  1D0B               	btfss	11,2	;volatile
  1902  000A  2818               	goto	i1l258
  1903                           
  1904                           ;ver0.0_20140727.c: 42: TMR0 = 61 ;
  1905  000B  303D               	movlw	61
  1906  000C  0095               	movwf	21	;volatile
  1907                           
  1908                           ;ver0.0_20140727.c: 43: time++ ;
  1909  000D  3001               	movlw	1
  1910  000E  00F4               	movwf	??_InterTimer
  1911  000F  0874               	movf	??_InterTimer,w
  1912  0010  07F7               	addwf	_time,f
  1913                           
  1914                           ;ver0.0_20140727.c: 44: changeLED();
  1915  0011  3182  22CA  3180   	fcall	_changeLED
  1916                           
  1917                           ;ver0.0_20140727.c: 45: putch(0x09);
  1918  0014  3009               	movlw	9
  1919  0015  3182  22E9         	fcall	_putch
  1920                           
  1921                           ;ver0.0_20140727.c: 46: TMR0IF = 0 ;
  1922  0017  110B               	bcf	11,2	;volatile
  1923  0018                     i1l258:	
  1924  0018  0875               	movf	??_InterTimer+1,w
  1925  0019  0020               	movlb	0	; select bank0
  1926  001A  00FF               	movwf	127
  1927  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  1928  001C  0009               	retfie
  1929  001D                     __end_of_InterTimer:	
  1930                           
  1931                           	psect	text8
  1932  02E9                     __ptext8:	
  1933 ;; *************** function _putch *****************
  1934 ;; Defined at:
  1935 ;;		line 4 in file "uart.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  Data            1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  Data            1    0[COMMON] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;		None               void
  1942 ;; Registers used:
  1943 ;;		wreg
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;Total ram usage:        1 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_InterTimer
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _putch
  1964  02E9                     _putch:	
  1965                           
  1966                           ;incstack = 0
  1967                           ; Regs used in _putch: [wreg]
  1968                           ;putch@Data stored from wreg
  1969  02E9  00F0               	movwf	putch@Data
  1970  02EA                     i1l335:	
  1971                           ;uart.c: 5: while(!TRMT){}
  1972                           
  1973  02EA  0023               	movlb	3	; select bank3
  1974  02EB  1C9E               	btfss	30,1	;volatile
  1975  02EC  2AEA               	goto	i1l335
  1976                           
  1977                           ;uart.c: 6: TXREG = Data;
  1978  02ED  0870               	movf	putch@Data,w
  1979  02EE  009A               	movwf	26	;volatile
  1980  02EF  0008               	return
  1981  02F0                     __end_of_putch:	
  1982                           
  1983                           	psect	text9
  1984  02CA                     __ptext9:	
  1985 ;; *************** function _changeLED *****************
  1986 ;; Defined at:
  1987 ;;		line 23 in file "ver0.0_20140727.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;Total ram usage:        2 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    1
  2008 ;; This function calls:
  2009 ;;		_no0
  2010 ;;		_no1
  2011 ;;		_no2
  2012 ;;		_no3
  2013 ;;		_noxinit
  2014 ;; This function is called by:
  2015 ;;		_InterTimer
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           
  2020                           ;psect for function _changeLED
  2021  02CA                     _changeLED:	
  2022                           
  2023                           ;ver0.0_20140727.c: 24: if(time==0)
  2024                           
  2025                           ;incstack = 0
  2026                           ; Regs used in _changeLED: [wreg+status,2+status,0+pclath+cstack]
  2027  02CA  08F7               	movf	_time,f
  2028  02CB  1D03               	skipz
  2029  02CC  2AD0               	goto	i1l1051
  2030                           
  2031                           ;ver0.0_20140727.c: 25: noxinit();
  2032  02CD  3182  22DA         	fcall	_noxinit
  2033  02CF  0008               	return
  2034  02D0                     i1l1051:	
  2035                           ;ver0.0_20140727.c: 26: else if(0==0)
  2036                           
  2037                           
  2038                           ;ver0.0_20140727.c: 27: no0(time);
  2039  02D0  0877               	movf	_time,w
  2040  02D1  00F2               	movwf	??_changeLED
  2041  02D2  01F3               	clrf	??_changeLED+1
  2042  02D3  0872               	movf	??_changeLED,w
  2043  02D4  00F0               	movwf	?_no0
  2044  02D5  0873               	movf	??_changeLED+1,w
  2045  02D6  00F1               	movwf	?_no0+1
  2046  02D7  3182  2217         	fcall	_no0
  2047                           
  2048                           ;ver0.0_20140727.c: 28: else if(0==1)
  2049  02D9  0008               	return
  2050  02DA                     __end_of_changeLED:	
  2051                           ;ver0.0_20140727.c: 33: no3(time);
  2052                           
  2053                           ;ver0.0_20140727.c: 32: else if(0==3)
  2054                           
  2055                           ;ver0.0_20140727.c: 31: no2(time);
  2056                           
  2057                           ;ver0.0_20140727.c: 30: else if(0==2)
  2058                           
  2059                           ;ver0.0_20140727.c: 29: no1(time);
  2060                           
  2061                           
  2062                           	psect	text10
  2063  02DA                     __ptext10:	
  2064 ;; *************** function _noxinit *****************
  2065 ;; Defined at:
  2066 ;;		line 55 in file "sorce.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_changeLED
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _noxinit
  2095  02DA                     _noxinit:	
  2096                           
  2097                           ;sorce.c: 56: PORTA=0xFF;
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _noxinit: [wreg]
  2101  02DA  30FF               	movlw	255
  2102  02DB  0020               	movlb	0	; select bank0
  2103  02DC  008C               	movwf	12	;volatile
  2104                           
  2105                           ;sorce.c: 57: RC2=1;
  2106  02DD  150E               	bsf	14,2	;volatile
  2107                           
  2108                           ;sorce.c: 58: RC1=1;
  2109  02DE  148E               	bsf	14,1	;volatile
  2110                           
  2111                           ;sorce.c: 59: RC3=1;
  2112  02DF  158E               	bsf	14,3	;volatile
  2113                           
  2114                           ;sorce.c: 60: RC0=1;
  2115  02E0  140E               	bsf	14,0	;volatile
  2116  02E1  0008               	return
  2117  02E2                     __end_of_noxinit:	
  2118                           
  2119                           	psect	text11
  2120  017E                     __ptext11:	
  2121 ;; *************** function _no3 *****************
  2122 ;; Defined at:
  2123 ;;		line 42 in file "sorce.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_changeLED
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _no3
  2152  017E                     _no3:	
  2153                           
  2154                           ;sorce.c: 43: if(led[12][0]<time) RA2=0;
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _no3: [wreg]
  2158  017E  0877               	movf	_time,w
  2159  017F  0020               	movlb	0	; select bank0
  2160  0180  0244               	subwf	_led+36,w
  2161  0181  1C03               	btfss	3,0
  2162  0182  110C               	bcf	12,2	;volatile
  2163                           
  2164                           ;sorce.c: 44: if(led[12][1]<time) RA0=0;
  2165  0183  0877               	movf	_time,w
  2166  0184  0245               	subwf	_led+37,w
  2167  0185  1C03               	btfss	3,0
  2168  0186  100C               	bcf	12,0	;volatile
  2169                           
  2170                           ;sorce.c: 45: if(led[12][2]<time) RA3=0;
  2171  0187  0877               	movf	_time,w
  2172  0188  0246               	subwf	_led+38,w
  2173  0189  1C03               	btfss	3,0
  2174  018A  118C               	bcf	12,3	;volatile
  2175                           
  2176                           ;sorce.c: 46: if(led[13][0]<time) RA1=0;
  2177  018B  0877               	movf	_time,w
  2178  018C  0247               	subwf	_led+39,w
  2179  018D  1C03               	btfss	3,0
  2180  018E  108C               	bcf	12,1	;volatile
  2181                           
  2182                           ;sorce.c: 47: if(led[13][1]<time) RA5=0;
  2183  018F  0877               	movf	_time,w
  2184  0190  0248               	subwf	_led+40,w
  2185  0191  1C03               	btfss	3,0
  2186  0192  128C               	bcf	12,5	;volatile
  2187                           
  2188                           ;sorce.c: 48: if(led[13][2]<time) RA4=0;
  2189  0193  0877               	movf	_time,w
  2190  0194  0249               	subwf	_led+41,w
  2191  0195  1C03               	btfss	3,0
  2192  0196  120C               	bcf	12,4	;volatile
  2193                           
  2194                           ;sorce.c: 49: if(led[14][0]<time) RC2=0;
  2195  0197  0877               	movf	_time,w
  2196  0198  024A               	subwf	_led+42,w
  2197  0199  1C03               	btfss	3,0
  2198  019A  110E               	bcf	14,2	;volatile
  2199                           
  2200                           ;sorce.c: 50: if(led[14][1]<time) RA7=0;
  2201  019B  0877               	movf	_time,w
  2202  019C  024B               	subwf	_led+43,w
  2203  019D  1C03               	btfss	3,0
  2204  019E  138C               	bcf	12,7	;volatile
  2205                           
  2206                           ;sorce.c: 51: if(led[14][2]<time) RA6=0;
  2207  019F  0877               	movf	_time,w
  2208  01A0  024C               	subwf	_led+44,w
  2209  01A1  1C03               	btfss	3,0
  2210  01A2  130C               	bcf	12,6	;volatile
  2211                           
  2212                           ;sorce.c: 52: if(led[15][0]<time) RC1=0;
  2213  01A3  0877               	movf	_time,w
  2214  01A4  024D               	subwf	_led+45,w
  2215  01A5  1C03               	btfss	3,0
  2216  01A6  108E               	bcf	14,1	;volatile
  2217                           
  2218                           ;sorce.c: 53: if(led[15][1]<time) RC3=0;
  2219  01A7  0877               	movf	_time,w
  2220  01A8  024E               	subwf	_led+46,w
  2221  01A9  1C03               	btfss	3,0
  2222  01AA  118E               	bcf	14,3	;volatile
  2223                           
  2224                           ;sorce.c: 54: if(led[15][2]<time) RC0=0;
  2225  01AB  0877               	movf	_time,w
  2226  01AC  024F               	subwf	_led+47,w
  2227  01AD  1803               	skipnc
  2228  01AE  0008               	return
  2229  01AF  100E               	bcf	14,0	;volatile
  2230  01B0  0008               	return
  2231  01B1                     __end_of_no3:	
  2232                           
  2233                           	psect	text12
  2234  01B1                     __ptext12:	
  2235 ;; *************** function _no2 *****************
  2236 ;; Defined at:
  2237 ;;		line 29 in file "sorce.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;		None               void
  2244 ;; Registers used:
  2245 ;;		wreg
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_changeLED
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _no2
  2266  01B1                     _no2:	
  2267                           
  2268                           ;sorce.c: 30: if(led[8][0]<time) RA2=0;
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _no2: [wreg]
  2272  01B1  0877               	movf	_time,w
  2273  01B2  0020               	movlb	0	; select bank0
  2274  01B3  0238               	subwf	_led+24,w
  2275  01B4  1C03               	btfss	3,0
  2276  01B5  110C               	bcf	12,2	;volatile
  2277                           
  2278                           ;sorce.c: 31: if(led[8][1]<time) RA0=0;
  2279  01B6  0877               	movf	_time,w
  2280  01B7  0239               	subwf	_led+25,w
  2281  01B8  1C03               	btfss	3,0
  2282  01B9  100C               	bcf	12,0	;volatile
  2283                           
  2284                           ;sorce.c: 32: if(led[8][2]<time) RA3=0;
  2285  01BA  0877               	movf	_time,w
  2286  01BB  023A               	subwf	_led+26,w
  2287  01BC  1C03               	btfss	3,0
  2288  01BD  118C               	bcf	12,3	;volatile
  2289                           
  2290                           ;sorce.c: 33: if(led[9][0]<time) RA1=0;
  2291  01BE  0877               	movf	_time,w
  2292  01BF  023B               	subwf	_led+27,w
  2293  01C0  1C03               	btfss	3,0
  2294  01C1  108C               	bcf	12,1	;volatile
  2295                           
  2296                           ;sorce.c: 34: if(led[9][1]<time) RA5=0;
  2297  01C2  0877               	movf	_time,w
  2298  01C3  023C               	subwf	_led+28,w
  2299  01C4  1C03               	btfss	3,0
  2300  01C5  128C               	bcf	12,5	;volatile
  2301                           
  2302                           ;sorce.c: 35: if(led[9][2]<time) RA4=0;
  2303  01C6  0877               	movf	_time,w
  2304  01C7  023D               	subwf	_led+29,w
  2305  01C8  1C03               	btfss	3,0
  2306  01C9  120C               	bcf	12,4	;volatile
  2307                           
  2308                           ;sorce.c: 36: if(led[10][0]<time) RC2=0;
  2309  01CA  0877               	movf	_time,w
  2310  01CB  023E               	subwf	_led+30,w
  2311  01CC  1C03               	btfss	3,0
  2312  01CD  110E               	bcf	14,2	;volatile
  2313                           
  2314                           ;sorce.c: 37: if(led[10][1]<time) RA7=0;
  2315  01CE  0877               	movf	_time,w
  2316  01CF  023F               	subwf	_led+31,w
  2317  01D0  1C03               	btfss	3,0
  2318  01D1  138C               	bcf	12,7	;volatile
  2319                           
  2320                           ;sorce.c: 38: if(led[10][2]<time) RA6=0;
  2321  01D2  0877               	movf	_time,w
  2322  01D3  0240               	subwf	_led+32,w
  2323  01D4  1C03               	btfss	3,0
  2324  01D5  130C               	bcf	12,6	;volatile
  2325                           
  2326                           ;sorce.c: 39: if(led[11][0]<time) RC1=0;
  2327  01D6  0877               	movf	_time,w
  2328  01D7  0241               	subwf	_led+33,w
  2329  01D8  1C03               	btfss	3,0
  2330  01D9  108E               	bcf	14,1	;volatile
  2331                           
  2332                           ;sorce.c: 40: if(led[11][1]<time) RC3=0;
  2333  01DA  0877               	movf	_time,w
  2334  01DB  0242               	subwf	_led+34,w
  2335  01DC  1C03               	btfss	3,0
  2336  01DD  118E               	bcf	14,3	;volatile
  2337                           
  2338                           ;sorce.c: 41: if(led[11][2]<time) RC0=0;
  2339  01DE  0877               	movf	_time,w
  2340  01DF  0243               	subwf	_led+35,w
  2341  01E0  1803               	skipnc
  2342  01E1  0008               	return
  2343  01E2  100E               	bcf	14,0	;volatile
  2344  01E3  0008               	return
  2345  01E4                     __end_of_no2:	
  2346                           
  2347                           	psect	text13
  2348  01E4                     __ptext13:	
  2349 ;; *************** function _no1 *****************
  2350 ;; Defined at:
  2351 ;;		line 16 in file "sorce.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;Total ram usage:        2 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_changeLED
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _no1
  2380  01E4                     _no1:	
  2381                           
  2382                           ;sorce.c: 17: if(led[4][0]<time) RA2=0;
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _no1: [wreg]
  2386  01E4  0877               	movf	_time,w
  2387  01E5  0020               	movlb	0	; select bank0
  2388  01E6  022C               	subwf	_led+12,w
  2389  01E7  1C03               	btfss	3,0
  2390  01E8  110C               	bcf	12,2	;volatile
  2391                           
  2392                           ;sorce.c: 18: if(led[4][1]<time) RA0=0;
  2393  01E9  0877               	movf	_time,w
  2394  01EA  022D               	subwf	_led+13,w
  2395  01EB  1C03               	btfss	3,0
  2396  01EC  100C               	bcf	12,0	;volatile
  2397                           
  2398                           ;sorce.c: 19: if(led[4][2]<time) RA3=0;
  2399  01ED  0877               	movf	_time,w
  2400  01EE  022E               	subwf	_led+14,w
  2401  01EF  1C03               	btfss	3,0
  2402  01F0  118C               	bcf	12,3	;volatile
  2403                           
  2404                           ;sorce.c: 20: if(led[5][0]<time) RA1=0;
  2405  01F1  0877               	movf	_time,w
  2406  01F2  022F               	subwf	_led+15,w
  2407  01F3  1C03               	btfss	3,0
  2408  01F4  108C               	bcf	12,1	;volatile
  2409                           
  2410                           ;sorce.c: 21: if(led[5][1]<time) RA5=0;
  2411  01F5  0877               	movf	_time,w
  2412  01F6  0230               	subwf	_led+16,w
  2413  01F7  1C03               	btfss	3,0
  2414  01F8  128C               	bcf	12,5	;volatile
  2415                           
  2416                           ;sorce.c: 22: if(led[5][2]<time) RA4=0;
  2417  01F9  0877               	movf	_time,w
  2418  01FA  0231               	subwf	_led+17,w
  2419  01FB  1C03               	btfss	3,0
  2420  01FC  120C               	bcf	12,4	;volatile
  2421                           
  2422                           ;sorce.c: 23: if(led[6][0]<time) RC2=0;
  2423  01FD  0877               	movf	_time,w
  2424  01FE  0232               	subwf	_led+18,w
  2425  01FF  1C03               	btfss	3,0
  2426  0200  110E               	bcf	14,2	;volatile
  2427                           
  2428                           ;sorce.c: 24: if(led[6][1]<time) RA7=0;
  2429  0201  0877               	movf	_time,w
  2430  0202  0233               	subwf	_led+19,w
  2431  0203  1C03               	btfss	3,0
  2432  0204  138C               	bcf	12,7	;volatile
  2433                           
  2434                           ;sorce.c: 25: if(led[6][2]<time) RA6=0;
  2435  0205  0877               	movf	_time,w
  2436  0206  0234               	subwf	_led+20,w
  2437  0207  1C03               	btfss	3,0
  2438  0208  130C               	bcf	12,6	;volatile
  2439                           
  2440                           ;sorce.c: 26: if(led[7][0]<time) RC1=0;
  2441  0209  0877               	movf	_time,w
  2442  020A  0235               	subwf	_led+21,w
  2443  020B  1C03               	btfss	3,0
  2444  020C  108E               	bcf	14,1	;volatile
  2445                           
  2446                           ;sorce.c: 27: if(led[7][1]<time) RC3=0;
  2447  020D  0877               	movf	_time,w
  2448  020E  0236               	subwf	_led+22,w
  2449  020F  1C03               	btfss	3,0
  2450  0210  118E               	bcf	14,3	;volatile
  2451                           
  2452                           ;sorce.c: 28: if(led[7][2]<time) RC0=0;
  2453  0211  0877               	movf	_time,w
  2454  0212  0237               	subwf	_led+23,w
  2455  0213  1803               	skipnc
  2456  0214  0008               	return
  2457  0215  100E               	bcf	14,0	;volatile
  2458  0216  0008               	return
  2459  0217                     __end_of_no1:	
  2460                           
  2461                           	psect	text14
  2462  0217                     __ptext14:	
  2463 ;; *************** function _no0 *****************
  2464 ;; Defined at:
  2465 ;;		line 3 in file "sorce.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;		None               void
  2472 ;; Registers used:
  2473 ;;		wreg
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;Total ram usage:        2 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_changeLED
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           
  2493                           ;psect for function _no0
  2494  0217                     _no0:	
  2495                           
  2496                           ;sorce.c: 4: if(led[0][0]<time)RA2=0;
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _no0: [wreg]
  2500  0217  0877               	movf	_time,w
  2501  0218  0020               	movlb	0	; select bank0
  2502  0219  0220               	subwf	_led,w
  2503  021A  1C03               	btfss	3,0
  2504  021B  110C               	bcf	12,2	;volatile
  2505                           
  2506                           ;sorce.c: 5: if(led[0][1]<time) RA0=0;
  2507  021C  0877               	movf	_time,w
  2508  021D  0221               	subwf	_led+1,w
  2509  021E  1C03               	btfss	3,0
  2510  021F  100C               	bcf	12,0	;volatile
  2511                           
  2512                           ;sorce.c: 6: if(led[0][2]<time) RA3=0;
  2513  0220  0877               	movf	_time,w
  2514  0221  0222               	subwf	_led+2,w
  2515  0222  1C03               	btfss	3,0
  2516  0223  118C               	bcf	12,3	;volatile
  2517                           
  2518                           ;sorce.c: 7: if(led[1][0]<time) RA1=0;
  2519  0224  0877               	movf	_time,w
  2520  0225  0223               	subwf	_led+3,w
  2521  0226  1C03               	btfss	3,0
  2522  0227  108C               	bcf	12,1	;volatile
  2523                           
  2524                           ;sorce.c: 8: if(led[1][1]<time) RA5=0;
  2525  0228  0877               	movf	_time,w
  2526  0229  0224               	subwf	_led+4,w
  2527  022A  1C03               	btfss	3,0
  2528  022B  128C               	bcf	12,5	;volatile
  2529                           
  2530                           ;sorce.c: 9: if(led[1][2]<time) RA4=0;
  2531  022C  0877               	movf	_time,w
  2532  022D  0225               	subwf	_led+5,w
  2533  022E  1C03               	btfss	3,0
  2534  022F  120C               	bcf	12,4	;volatile
  2535                           
  2536                           ;sorce.c: 10: if(led[2][0]<time) RC2=0;
  2537  0230  0877               	movf	_time,w
  2538  0231  0226               	subwf	_led+6,w
  2539  0232  1C03               	btfss	3,0
  2540  0233  110E               	bcf	14,2	;volatile
  2541                           
  2542                           ;sorce.c: 11: if(led[2][1]<time) RA7=0;
  2543  0234  0877               	movf	_time,w
  2544  0235  0227               	subwf	_led+7,w
  2545  0236  1C03               	btfss	3,0
  2546  0237  138C               	bcf	12,7	;volatile
  2547                           
  2548                           ;sorce.c: 12: if(led[2][2]<time) RA6=0;
  2549  0238  0877               	movf	_time,w
  2550  0239  0228               	subwf	_led+8,w
  2551  023A  1C03               	btfss	3,0
  2552  023B  130C               	bcf	12,6	;volatile
  2553                           
  2554                           ;sorce.c: 13: if(led[3][0]<time) RC1=0;
  2555  023C  0877               	movf	_time,w
  2556  023D  0229               	subwf	_led+9,w
  2557  023E  1C03               	btfss	3,0
  2558  023F  108E               	bcf	14,1	;volatile
  2559                           
  2560                           ;sorce.c: 14: if(led[3][1]<time) RC3=0;
  2561  0240  0877               	movf	_time,w
  2562  0241  022A               	subwf	_led+10,w
  2563  0242  1C03               	btfss	3,0
  2564  0243  118E               	bcf	14,3	;volatile
  2565                           
  2566                           ;sorce.c: 15: if(led[3][2]<time) RC0=0;
  2567  0244  0877               	movf	_time,w
  2568  0245  022B               	subwf	_led+11,w
  2569  0246  1803               	skipnc
  2570  0247  0008               	return
  2571  0248  100E               	bcf	14,0	;volatile
  2572  0249  0008               	return
  2573  024A                     __end_of_no0:	
  2574  007E                     btemp	set	126	;btemp
  2575  007E                     pic14e$flags	set	126
  2576  007E                     wtemp	set	126
  2577  007E                     wtemp0	set	126
  2578  0080                     wtemp1	set	128
  2579  0082                     wtemp2	set	130
  2580  0084                     wtemp3	set	132
  2581  0086                     wtemp4	set	134
  2582  0088                     wtemp5	set	136
  2583  007F                     wtemp6	set	127
  2584  007E                     ttemp	set	126
  2585  007E                     ttemp0	set	126
  2586  0081                     ttemp1	set	129
  2587  0084                     ttemp2	set	132
  2588  0087                     ttemp3	set	135
  2589  007F                     ttemp4	set	127
  2590  007E                     ltemp	set	126
  2591  007E                     ltemp0	set	126
  2592  0082                     ltemp1	set	130
  2593  0086                     ltemp2	set	134
  2594  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     16      64
    BANK1            80      0      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    countup@i	PTR unsigned char  size(1) Largest target is 1
		 -> main@i(BANK0[1]), 

    countup@j	PTR unsigned char  size(1) Largest target is 1
		 -> main@j(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->_countup
    _main->_waitstart
    _setdata->___bmul

Critical Paths under _InterTimer in COMMON

    _InterTimer->_changeLED
    _changeLED->_no0
    _changeLED->_no1
    _changeLED->_no2
    _changeLED->_no3

Critical Paths under _main in BANK0

    _main->_setdata
    _setdata->___bmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0    1518
                                             10 BANK0      6     6      0
                             ___bmul
                            _countup
                              _getch
                            _setdata
                             _setpin
                          _waitstart
 ---------------------------------------------------------------------------------
 (1) _waitstart                                            1     1      0      24
                                              6 COMMON     1     1      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setdata                                              7     7      0     536
                                              3 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     276
                                              6 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _countup                                              4     2      2     200
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0      15
                                              4 COMMON     2     2      0
                          _changeLED
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _changeLED                                            2     2      0       0
                                              2 COMMON     2     2      0
                                _no0
                                _no1
                                _no2
                                _no3
                            _noxinit
 ---------------------------------------------------------------------------------
 (5) _noxinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _no3                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no2                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no1                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no0                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _countup
   _getch
   _setdata
     ___bmul
   _setpin
   _waitstart
     _getch

 _InterTimer (ROOT)
   _changeLED
     _no0
     _no1
     _no2
     _no3
     _noxinit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Aug 24 03:52:24 2014

                      pc 0002           ___bmul@product 0051              __CFG_CP$OFF 0000  
            __CFG_LVP$ON 0000                      l341 02E2                      l270 008A  
                    l271 008C                      l263 007E                      l265 0080  
                    l274 00A1                      l266 0082                      l267 0084  
                    l268 0086                      l277 00AF                      l269 0088  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RC0 0070                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RD0 0078                      _RC2 0072  
                    _RB4 006C                      _RA6 0066                      _RD1 0079  
                    _RC3 0073                      _RB5 006D                      _RA7 0067  
                    _RE0 0080                      _RC4 0074                      _RB6 006E  
                    _RE1 0081                      _RB7 006F                      _RE2 0082  
                    _RD6 007E             __CFG_CPD$OFF 0000                      _no0 0217  
                    _no1 01E4                      _no2 01B1                      _no3 017E  
                    _led 0020             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     S1855 02BA                     ?_no0 0070  
                   ?_no1 0070                     ?_no2 0070                     ?_no3 0070  
                   l1613 02B1                     l1373 028D                     l1365 027A  
                   l1633 0268                     l1609 02AB                     l1627 0258  
                   l1803 0122                     l1661 0179                     l1639 0275  
                   l1655 014F                     l1807 012A                     l1771 00B2  
                   l1763 0093                     l1765 008D                     l1785 00C0  
                   l1779 00BB                     l1797 0106                     l1799 0119  
                   _RCIF 008D                     _TMR0 0015                     _TRMT 0CF1  
                   _WPUB 020D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 0033                     _time 0077                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _stoc 00A0  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 001D                     ttemp 007E                     wtemp 007E  
      ___bmul@multiplier 0052                    ??_no0 0072                    ??_no1 0072  
                  ??_no2 0072                    ??_no3 0072            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l335 02EA  
                  i1l258 0018                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PORTD 000F                    _PORTE 0010  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _TRISE 0090                    _TXREG 019A  
                  _TXSTA 019E            __CFG_PWRTE$ON 0000          __end_of_countup 0278  
                  _getch 02E2                    _putch 02E9                    main@i 005F  
                  main@j 005E          __end_of_setdata 017E                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
        __end_of_noxinit 02E2                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 001F  
           __end_of_main 0144                   ??_main 005A               _InterTimer 0004  
                 ?_getch 0070                   _ANSELA 018C                   ?_putch 0070  
                 _ANSELB 018D                   _ANSELD 018F                   _ANSELE 0190  
                 i1l1051 02D0                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TRISC6 0476                   _TRISC7 0477  
                 _nWPUEN 04AF                   ___bmul 02A8           __CFG_STVREN$ON 0000  
                 _setpin 0291                ??_countup 0076                ??_setdata 0053  
              ??_noxinit 0070            main@stoclocal 005D  __end_of__initialization 002F  
    ___bmul@multiplicand 0076           __pcstackCOMMON 0070       __size_of_changeLED 0010  
          __end_of_getch 02E9            __end_of_putch 02F0              ?_InterTimer 0070  
                ??_getch 0076                  ??_putch 0070               __pbssBANK0 0020  
             __pbssBANK1 00A0          __CFG_VCAPEN$OFF 0000               __pmaintext 0033  
                ?___bmul 0076               __pintentry 0004                  _BAUDCON 019F  
                ?_setpin 0070       __size_of_waitstart 0019        __end_of_changeLED 02DA  
    __size_of_InterTimer 0019          __size_of___bmul 0012                  __ptext0 0000  
                __ptext1 0278                  __ptext2 02E2                  __ptext3 0291  
                __ptext4 0144                  __ptext5 02A8                  __ptext6 024A  
                __ptext8 02E9                  __ptext9 02CA          __size_of_setpin 0017  
                _countup 024A             __size_of_no0 0033             __size_of_no1 0033  
           __size_of_no2 0033             __size_of_no3 0033                  _setdata 0144  
                _noxinit 02DA                  clrloop0 02F1     end_of_initialization 002F  
      __end_of_waitstart 0291         __CFG_FOSC$INTOSC 0000              waitstart@ch 0076  
         __end_of___bmul 02BA             ??_InterTimer 0074           __end_of_setpin 02A8  
    start_initialization 001F              __end_of_no0 024A              __end_of_no1 0217  
            __end_of_no2 01E4              __end_of_no3 01B1       __end_of_InterTimer 001D  
               ??___bmul 0050                 ??_setpin 0076              __pbssCOMMON 0077  
              ___latbits 0003            __pcstackBANK0 0050                _changeLED 02CA  
              __pswtext1 02BA                 ?_countup 0050                 ?_setdata 0070  
               ?_noxinit 0070           __size_of_getch 0007           __size_of_putch 0007  
             ?_changeLED 0070                clear_ram0 02F0                _waitstart 0278  
             ?_waitstart 0070         __size_of_countup 002E                 __ptext10 02DA  
               __ptext11 017E                 __ptext12 01B1                 __ptext13 01E4  
               __ptext14 0217         __size_of_setdata 003A         __size_of_noxinit 0008  
          __size_of_main 0111              ??_changeLED 0072                putch@Data 0070  
               countup@i 0052                 countup@j 0050              pic14e$flags 007E  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000                 setdata@i 0058  
               setdata@j 0059              ??_waitstart 0076               _OPTION_REG 0095  
