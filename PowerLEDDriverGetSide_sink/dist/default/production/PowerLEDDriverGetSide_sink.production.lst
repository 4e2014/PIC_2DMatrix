

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Aug 25 17:28:35 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0068                     _RB0	set	104
   570  0069                     _RB1	set	105
   571  006A                     _RB2	set	106
   572  006B                     _RB3	set	107
   573  006C                     _RB4	set	108
   574  006D                     _RB5	set	109
   575  006E                     _RB6	set	110
   576  006F                     _RB7	set	111
   577  0070                     _RC0	set	112
   578  0071                     _RC1	set	113
   579  0072                     _RC2	set	114
   580  0073                     _RC3	set	115
   581  008D                     _RCIF	set	141
   582  0078                     _RD0	set	120
   583  0079                     _RD1	set	121
   584  007C                     _RD4	set	124
   585  007D                     _RD5	set	125
   586  007E                     _RD6	set	126
   587  0080                     _RE0	set	128
   588  0081                     _RE1	set	129
   589  0082                     _RE2	set	130
   590  005D                     _TMR0IE	set	93
   591  005A                     _TMR0IF	set	90
   592  0095                     _OPTION_REG	set	149
   593  0099                     _OSCCON	set	153
   594  008C                     _TRISA	set	140
   595  008D                     _TRISB	set	141
   596  008E                     _TRISC	set	142
   597  008F                     _TRISD	set	143
   598  0090                     _TRISE	set	144
   599  0476                     _TRISC6	set	1142
   600  0477                     _TRISC7	set	1143
   601  04AF                     _nWPUEN	set	1199
   602  018C                     _ANSELA	set	396
   603  018D                     _ANSELB	set	397
   604  018F                     _ANSELD	set	399
   605  0190                     _ANSELE	set	400
   606  019F                     _BAUDCON	set	415
   607  0199                     _RCREG	set	409
   608  019D                     _RCSTA	set	413
   609  019B                     _SPBRG	set	411
   610  019A                     _TXREG	set	410
   611  019E                     _TXSTA	set	414
   612  0CF1                     _TRMT	set	3313
   613  020D                     _WPUB	set	525
   614                           
   615                           	psect	text0
   616  0000                     __ptext0:	
   617                           ; #config settings
   618                           
   619                           
   620                           ;psect for function _no0
   621  0000                     
   622                           	psect	cinit
   623  001F                     start_initialization:	
   624  001F                     __initialization:	
   625                           
   626                           ; Clear objects allocated to COMMON
   627  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   628                           
   629                           ; Clear objects allocated to BANK0
   630  0020  3020               	movlw	low __pbssBANK0
   631  0021  0084               	movwf	4
   632  0022  3000               	movlw	high __pbssBANK0
   633  0023  0085               	movwf	5
   634  0024  3030               	movlw	48
   635  0025  3182  22F4  3180   	fcall	clear_ram0
   636                           
   637                           ; Clear objects allocated to BANK1
   638  0028  30A0               	movlw	low __pbssBANK1
   639  0029  0084               	movwf	4
   640  002A  3000               	movlw	high __pbssBANK1
   641  002B  0085               	movwf	5
   642  002C  3030               	movlw	48
   643  002D  3182  22F4         	fcall	clear_ram0
   644  002F                     end_of_initialization:	
   645                           ;End of C runtime variable initialization code
   646                           
   647  002F                     __end_of__initialization:	
   648  002F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   649  0030  0020               	movlb	0
   650  0031  3180  2833         	ljmp	_main	;jump to C main() function
   651                           
   652                           	psect	bssCOMMON
   653  0077                     __pbssCOMMON:	
   654  0077                     _time:	
   655  0077                     	ds	1
   656                           
   657                           	psect	bssBANK0
   658  0020                     __pbssBANK0:	
   659  0020                     _led:	
   660  0020                     	ds	48
   661                           
   662                           	psect	bssBANK1
   663  00A0                     __pbssBANK1:	
   664  00A0                     _stoc:	
   665  00A0                     	ds	48
   666                           
   667                           	psect	clrtext
   668  02F4                     clear_ram0:	
   669                           ;	Called with FSR0 containing the base address, and
   670                           ;	WREG with the size to clear
   671                           
   672  02F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   673  02F5                     clrloop0:	
   674  02F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   675  02F6  3101               	addfsr 0,1
   676  02F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   677  02F8  2AF5               	goto	clrloop0	;have we reached the end yet?
   678  02F9  3400               	retlw	0	;all done for this memory range, return
   679                           
   680                           	psect	cstackCOMMON
   681  0070                     __pcstackCOMMON:	
   682  0070                     ?_putch:	
   683  0070                     ??_putch:	
   684                           ; 0 bytes @ 0x0
   685                           
   686  0070                     ?_waitstart:	
   687                           ; 0 bytes @ 0x0
   688                           
   689  0070                     ?_setdata:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0070                     ?_no0:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0070                     ?_no1:	
   696                           ; 0 bytes @ 0x0
   697                           
   698  0070                     ?_no2:	
   699                           ; 0 bytes @ 0x0
   700                           
   701  0070                     ?_no3:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0070                     ?_noxinit:	
   705                           ; 0 bytes @ 0x0
   706                           
   707  0070                     ??_noxinit:	
   708                           ; 0 bytes @ 0x0
   709                           
   710  0070                     ?_setpin:	
   711                           ; 0 bytes @ 0x0
   712                           
   713  0070                     ?_changeLED:	
   714                           ; 0 bytes @ 0x0
   715                           
   716  0070                     ?_InterTimer:	
   717                           ; 0 bytes @ 0x0
   718                           
   719  0070                     ?_main:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ?_getch:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     putch@Data:	
   726                           ; 1 bytes @ 0x0
   727                           
   728                           
   729                           ; 1 bytes @ 0x0
   730  0070                     	ds	2
   731  0072                     ??_no0:	
   732  0072                     ??_no1:	
   733                           ; 0 bytes @ 0x2
   734                           
   735  0072                     ??_no2:	
   736                           ; 0 bytes @ 0x2
   737                           
   738  0072                     ??_no3:	
   739                           ; 0 bytes @ 0x2
   740                           
   741  0072                     ??_changeLED:	
   742                           ; 0 bytes @ 0x2
   743                           
   744                           
   745                           ; 0 bytes @ 0x2
   746  0072                     	ds	2
   747  0074                     ??_InterTimer:	
   748                           
   749                           ; 0 bytes @ 0x4
   750  0074                     	ds	2
   751  0076                     ??_waitstart:	
   752  0076                     ??_getch:	
   753                           ; 0 bytes @ 0x6
   754                           
   755  0076                     ??_countup:	
   756                           ; 0 bytes @ 0x6
   757                           
   758  0076                     ??_setpin:	
   759                           ; 0 bytes @ 0x6
   760                           
   761  0076                     ?___bmul:	
   762                           ; 0 bytes @ 0x6
   763                           
   764  0076                     waitstart@ch:	
   765                           ; 1 bytes @ 0x6
   766                           
   767  0076                     ___bmul@multiplicand:	
   768                           ; 1 bytes @ 0x6
   769                           
   770                           
   771                           ; 1 bytes @ 0x6
   772  0076                     	ds	1
   773                           
   774                           	psect	cstackBANK0
   775  0050                     __pcstackBANK0:	
   776  0050                     ??___bmul:	
   777  0050                     ?_countup:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0050                     countup@j:	
   781                           ; 2 bytes @ 0x0
   782                           
   783                           
   784                           ; 1 bytes @ 0x0
   785  0050                     	ds	1
   786  0051                     ___bmul@product:	
   787                           
   788                           ; 1 bytes @ 0x1
   789  0051                     	ds	1
   790  0052                     countup@i:	
   791  0052                     ___bmul@multiplier:	
   792                           ; 1 bytes @ 0x2
   793                           
   794                           
   795                           ; 1 bytes @ 0x2
   796  0052                     	ds	1
   797  0053                     ??_setdata:	
   798                           
   799                           ; 0 bytes @ 0x3
   800  0053                     	ds	5
   801  0058                     setdata@i:	
   802                           
   803                           ; 1 bytes @ 0x8
   804  0058                     	ds	1
   805  0059                     setdata@j:	
   806                           
   807                           ; 1 bytes @ 0x9
   808  0059                     	ds	1
   809  005A                     ??_main:	
   810                           
   811                           ; 0 bytes @ 0xA
   812  005A                     	ds	3
   813  005D                     main@stoclocal:	
   814                           
   815                           ; 1 bytes @ 0xD
   816  005D                     	ds	1
   817  005E                     main@j:	
   818                           
   819                           ; 1 bytes @ 0xE
   820  005E                     	ds	1
   821  005F                     main@i:	
   822                           
   823                           ; 1 bytes @ 0xF
   824  005F                     	ds	1
   825                           
   826                           	psect	maintext
   827  0033                     __pmaintext:	
   828 ;;
   829 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   830 ;;
   831 ;; *************** function _main *****************
   832 ;; Defined at:
   833 ;;		line 52 in file "ver0.0_20140727.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  test           32    0        unsigned char [4][8]
   838 ;;  str            10    0        unsigned char [10]
   839 ;;  i               1   15[BANK0 ] unsigned char 
   840 ;;  j               1   14[BANK0 ] unsigned char 
   841 ;;  stoclocal       1   13[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 17F/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   855 ;;Total ram usage:        6 bytes
   856 ;; Hardware stack levels required when called:    5
   857 ;; This function calls:
   858 ;;		___bmul
   859 ;;		_countup
   860 ;;		_getch
   861 ;;		_setdata
   862 ;;		_setpin
   863 ;;		_waitstart
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _main
   871  0033                     _main:	
   872                           
   873                           ;ver0.0_20140727.c: 54: char i=1,j,str[10];
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   877  0033  0020               	movlb	0	; select bank0
   878  0034  01DF               	clrf	main@i
   879  0035  0ADF               	incf	main@i,f
   880                           
   881                           ;ver0.0_20140727.c: 55: unsigned char stoclocal;
   882                           ;ver0.0_20140727.c: 56: char test[8][4];
   883                           ;ver0.0_20140727.c: 57: setpin();
   884  0036  3182  2294  3180   	fcall	_setpin
   885                           
   886                           ;ver0.0_20140727.c: 58: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   887  0039  0021               	movlb	1	; select bank1
   888  003A  178E               	bsf	14,7	;volatile
   889  003B  130E               	bcf	14,6	;volatile
   890  003C  3033               	movlw	51
   891  003D  0023               	movlb	3	; select bank3
   892  003E  009B               	movwf	27	;volatile
   893  003F  3090               	movlw	144
   894  0040  009D               	movwf	29	;volatile
   895  0041  3024               	movlw	36
   896  0042  009E               	movwf	30	;volatile
   897  0043  019F               	clrf	31	;volatile
   898                           
   899                           ;ver0.0_20140727.c: 59: OPTION_REG = 0b00000110 ;
   900  0044  3006               	movlw	6
   901  0045  0021               	movlb	1	; select bank1
   902  0046  0095               	movwf	21	;volatile
   903                           
   904                           ;ver0.0_20140727.c: 60: TMR0 = 61 ;
   905  0047  303D               	movlw	61
   906  0048  0020               	movlb	0	; select bank0
   907  0049  0095               	movwf	21	;volatile
   908                           
   909                           ;ver0.0_20140727.c: 61: TMR0IF = 0 ;
   910  004A  110B               	bcf	11,2	;volatile
   911                           
   912                           ;ver0.0_20140727.c: 62: time = 0 ;
   913  004B  01F7               	clrf	_time
   914                           
   915                           ;ver0.0_20140727.c: 63: TMR0IE = 1 ;
   916  004C  168B               	bsf	11,5	;volatile
   917                           
   918                           ;ver0.0_20140727.c: 64: WPUB = 0xC0;
   919  004D  30C0               	movlw	192
   920  004E  0024               	movlb	4	; select bank4
   921  004F  008D               	movwf	13	;volatile
   922                           
   923                           ;ver0.0_20140727.c: 65: nWPUEN = 0;
   924  0050  0021               	movlb	1	; select bank1
   925  0051  1395               	bcf	21,7	;volatile
   926                           
   927                           ;ver0.0_20140727.c: 66: GIE = 0 ;
   928  0052  138B               	bcf	11,7	;volatile
   929                           
   930                           ;ver0.0_20140727.c: 67: RA1=1;
   931  0053  0020               	movlb	0	; select bank0
   932  0054  148C               	bsf	12,1	;volatile
   933                           
   934                           ;ver0.0_20140727.c: 68: RA2=1;
   935  0055  150C               	bsf	12,2	;volatile
   936                           
   937                           ;ver0.0_20140727.c: 69: RA3=1;
   938  0056  158C               	bsf	12,3	;volatile
   939                           
   940                           ;ver0.0_20140727.c: 70: RA4=1;
   941  0057  160C               	bsf	12,4	;volatile
   942                           
   943                           ;ver0.0_20140727.c: 71: RA5=1;
   944  0058  168C               	bsf	12,5	;volatile
   945                           
   946                           ;ver0.0_20140727.c: 72: RB0=1;
   947  0059  140D               	bsf	13,0	;volatile
   948                           
   949                           ;ver0.0_20140727.c: 73: RB1=1;
   950  005A  148D               	bsf	13,1	;volatile
   951                           
   952                           ;ver0.0_20140727.c: 74: RB2=1;
   953  005B  150D               	bsf	13,2	;volatile
   954                           
   955                           ;ver0.0_20140727.c: 75: RB3=1;
   956  005C  158D               	bsf	13,3	;volatile
   957                           
   958                           ;ver0.0_20140727.c: 76: RB4=1;
   959  005D  160D               	bsf	13,4	;volatile
   960                           
   961                           ;ver0.0_20140727.c: 77: RB5=1;
   962  005E  168D               	bsf	13,5	;volatile
   963                           
   964                           ;ver0.0_20140727.c: 78: RB6=1;
   965  005F  170D               	bsf	13,6	;volatile
   966                           
   967                           ;ver0.0_20140727.c: 79: RB7=1;
   968  0060  178D               	bsf	13,7	;volatile
   969                           
   970                           ;ver0.0_20140727.c: 80: RE0=1;
   971  0061  1410               	bsf	16,0	;volatile
   972                           
   973                           ;ver0.0_20140727.c: 81: RE1=1;
   974  0062  1490               	bsf	16,1	;volatile
   975                           
   976                           ;ver0.0_20140727.c: 82: RE2=1;
   977  0063  1510               	bsf	16,2	;volatile
   978                           
   979                           ;ver0.0_20140727.c: 84: PORTA=0xFF;
   980  0064  30FF               	movlw	255
   981  0065  008C               	movwf	12	;volatile
   982                           
   983                           ;ver0.0_20140727.c: 85: PORTB=0xFF;
   984  0066  30FF               	movlw	255
   985  0067  008D               	movwf	13	;volatile
   986                           
   987                           ;ver0.0_20140727.c: 86: PORTC=0xFF;
   988  0068  30FF               	movlw	255
   989  0069  008E               	movwf	14	;volatile
   990                           
   991                           ;ver0.0_20140727.c: 87: PORTD=0xFF;
   992  006A  30FF               	movlw	255
   993  006B  008F               	movwf	15	;volatile
   994                           
   995                           ;ver0.0_20140727.c: 88: PORTE=0xFF;
   996  006C  30FF               	movlw	255
   997  006D  0090               	movwf	16	;volatile
   998                           
   999                           ;ver0.0_20140727.c: 89: RA7=0;
  1000  006E  138C               	bcf	12,7	;volatile
  1001                           
  1002                           ;ver0.0_20140727.c: 90: RA6=0;
  1003  006F  130C               	bcf	12,6	;volatile
  1004                           
  1005                           ;ver0.0_20140727.c: 91: RC0=0;
  1006  0070  100E               	bcf	14,0	;volatile
  1007                           
  1008                           ;ver0.0_20140727.c: 92: RC1=0;
  1009  0071  108E               	bcf	14,1	;volatile
  1010                           
  1011                           ;ver0.0_20140727.c: 93: RC2=0;
  1012  0072  110E               	bcf	14,2	;volatile
  1013                           
  1014                           ;ver0.0_20140727.c: 94: RC3=0;
  1015  0073  118E               	bcf	14,3	;volatile
  1016                           
  1017                           ;ver0.0_20140727.c: 95: RD0=0;
  1018  0074  100F               	bcf	15,0	;volatile
  1019                           
  1020                           ;ver0.0_20140727.c: 96: RD1=0;
  1021  0075  108F               	bcf	15,1	;volatile
  1022                           
  1023                           ;ver0.0_20140727.c: 97: i=1;0;
  1024  0076  01DF               	clrf	main@i
  1025  0077  0ADF               	incf	main@i,f
  1026                           
  1027                           ;ver0.0_20140727.c: 98: RD6=1;
  1028  0078  170F               	bsf	15,6	;volatile
  1029  0079                     l264:	
  1030                           ;ver0.0_20140727.c: 100: while(RD4==0);
  1031                           
  1032                           ;ver0.0_20140727.c: 99: while(1){
  1033                           
  1034  0079  1E0F               	btfss	15,4	;volatile
  1035  007A  2879               	goto	l264
  1036                           
  1037                           ;ver0.0_20140727.c: 101: if(RD5==1)
  1038  007B  1E8F               	btfss	15,5	;volatile
  1039  007C  2893               	goto	l1767
  1040                           
  1041                           ;ver0.0_20140727.c: 102: i=8;
  1042  007D  3008               	movlw	8
  1043  007E  00DA               	movwf	??_main
  1044  007F  085A               	movf	??_main,w
  1045  0080  00DF               	movwf	main@i
  1046                           
  1047                           ;ver0.0_20140727.c: 104: switch(i){
  1048  0081  2893               	goto	l1767
  1049  0082                     l269:	
  1050                           ;ver0.0_20140727.c: 105: case 1:RA7=1;break;
  1051                           
  1052  0082  178C               	bsf	12,7	;volatile
  1053  0083  28A0               	goto	l278
  1054  0084                     l271:	
  1055                           ;ver0.0_20140727.c: 106: case 2:RA6=1;break;
  1056                           
  1057  0084  170C               	bsf	12,6	;volatile
  1058  0085  28A0               	goto	l278
  1059  0086                     l272:	
  1060                           ;ver0.0_20140727.c: 107: case 3:RC0=1;break;
  1061                           
  1062  0086  140E               	bsf	14,0	;volatile
  1063  0087  28A0               	goto	l278
  1064  0088                     l273:	
  1065                           ;ver0.0_20140727.c: 108: case 4:RC1=1;break;
  1066                           
  1067  0088  148E               	bsf	14,1	;volatile
  1068  0089  28A0               	goto	l278
  1069  008A                     l274:	
  1070                           ;ver0.0_20140727.c: 109: case 5:RC2=1;break;
  1071                           
  1072  008A  150E               	bsf	14,2	;volatile
  1073  008B  28A0               	goto	l278
  1074  008C                     l275:	
  1075                           ;ver0.0_20140727.c: 110: case 6:RC3=1;break;
  1076                           
  1077  008C  158E               	bsf	14,3	;volatile
  1078  008D  28A0               	goto	l278
  1079  008E                     l276:	
  1080                           ;ver0.0_20140727.c: 111: case 7:RD0=1;break;
  1081                           
  1082  008E  140F               	bsf	15,0	;volatile
  1083  008F  28A0               	goto	l278
  1084  0090                     l277:	
  1085                           ;ver0.0_20140727.c: 112: case 8:RD1=1;i=0;break;
  1086                           
  1087  0090  148F               	bsf	15,1	;volatile
  1088  0091  01DF               	clrf	main@i
  1089                           
  1090                           ;ver0.0_20140727.c: 113: }
  1091  0092  28A0               	goto	l278
  1092  0093                     l1767:	
  1093  0093  085F               	movf	main@i,w
  1094                           
  1095                           ; Switch size 1, requested type "space"
  1096                           ; Number of cases is 8, Range of values is 1 to 8
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; direct_byte           25     9 (fixed)
  1100                           ; simple_byte           25    13 (average)
  1101                           ; jumptable            263     9 (fixed)
  1102                           ;	Chosen strategy is direct_byte
  1103  0094  3EFF               	addlw	-1
  1104  0095  1C03               	skipc
  1105  0096  28A0               	goto	l278
  1106  0097  0084               	movwf	4
  1107  0098  3008               	movlw	8
  1108  0099  0204               	subwf	4,w
  1109  009A  1803               	skipnc
  1110  009B  28A0               	goto	l278
  1111  009C  3182               	movlp	high S1857
  1112  009D  3504               	lslf	4,w
  1113  009E  3EBE               	addlw	low S1857
  1114  009F  0082               	movwf	2
  1115  00A0                     l278:	
  1116                           ;ver0.0_20140727.c: 115: while(RD4==1);
  1117                           
  1118  00A0  1A0F               	btfsc	15,4	;volatile
  1119  00A1  28A0               	goto	l278
  1120                           
  1121                           ;ver0.0_20140727.c: 117: RA7=0;
  1122  00A2  138C               	bcf	12,7	;volatile
  1123                           
  1124                           ;ver0.0_20140727.c: 118: RA6=0;
  1125  00A3  130C               	bcf	12,6	;volatile
  1126                           
  1127                           ;ver0.0_20140727.c: 119: RC0=0;
  1128  00A4  100E               	bcf	14,0	;volatile
  1129                           
  1130                           ;ver0.0_20140727.c: 120: RC1=0;
  1131  00A5  108E               	bcf	14,1	;volatile
  1132                           
  1133                           ;ver0.0_20140727.c: 121: RC2=0;
  1134  00A6  110E               	bcf	14,2	;volatile
  1135                           
  1136                           ;ver0.0_20140727.c: 122: RC3=0;
  1137  00A7  118E               	bcf	14,3	;volatile
  1138                           
  1139                           ;ver0.0_20140727.c: 123: RD0=0;
  1140  00A8  100F               	bcf	15,0	;volatile
  1141                           
  1142                           ;ver0.0_20140727.c: 124: RD1=0;
  1143  00A9  108F               	bcf	15,1	;volatile
  1144                           
  1145                           ;ver0.0_20140727.c: 125: PORTC=0b11110000;
  1146  00AA  30F0               	movlw	240
  1147  00AB  008E               	movwf	14	;volatile
  1148                           
  1149                           ;ver0.0_20140727.c: 126: PORTA=0b00111111;
  1150  00AC  303F               	movlw	63
  1151  00AD  008C               	movwf	12	;volatile
  1152                           
  1153                           ;ver0.0_20140727.c: 127: PORTD=0b11111100;
  1154  00AE  30FC               	movlw	252
  1155  00AF  008F               	movwf	15	;volatile
  1156                           
  1157                           ;ver0.0_20140727.c: 129: i++;
  1158  00B0  3001               	movlw	1
  1159  00B1  00DA               	movwf	??_main
  1160  00B2  085A               	movf	??_main,w
  1161  00B3  07DF               	addwf	main@i,f
  1162  00B4  2879               	goto	l264
  1163  00B5                     l1773:	
  1164                           ;ver0.0_20140727.c: 130: }
  1165                           ;ver0.0_20140727.c: 145: while(1) {
  1166                           
  1167                           
  1168                           ;ver0.0_20140727.c: 146: waitstart();
  1169  00B5  3182  227B  3180   	fcall	_waitstart
  1170                           
  1171                           ;ver0.0_20140727.c: 147: for(i=0;i<16;i++){
  1172  00B8  0020               	movlb	0	; select bank0
  1173  00B9  01DF               	clrf	main@i
  1174  00BA  3010               	movlw	16
  1175  00BB  025F               	subwf	main@i,w
  1176  00BC  1803               	btfsc	3,0
  1177  00BD  292D               	goto	l1809
  1178  00BE                     l1781:	
  1179                           
  1180                           ;ver0.0_20140727.c: 148: for(j=0;j<3;j++){
  1181  00BE  01DE               	clrf	main@j
  1182  00BF  3003               	movlw	3
  1183  00C0  025E               	subwf	main@j,w
  1184  00C1  1803               	btfsc	3,0
  1185  00C2  2925               	goto	l1805
  1186  00C3                     l1787:	
  1187                           
  1188                           ;ver0.0_20140727.c: 149: if((stoclocal=getch())==0x0D){
  1189  00C3  3182  22E6  3180   	fcall	_getch
  1190  00C6  0020               	movlb	0	; select bank0
  1191  00C7  00DA               	movwf	??_main
  1192  00C8  085A               	movf	??_main,w
  1193  00C9  00DD               	movwf	main@stoclocal
  1194  00CA  085D               	movf	main@stoclocal,w
  1195  00CB  3A0D               	xorlw	13
  1196  00CC  1D03               	skipz
  1197  00CD  2909               	goto	l1799
  1198                           
  1199                           ;ver0.0_20140727.c: 150: stoc[i][j]=0x0D;
  1200  00CE  300D               	movlw	13
  1201  00CF  00DA               	movwf	??_main
  1202  00D0  3003               	movlw	3
  1203  00D1  00DB               	movwf	??_main+1
  1204  00D2  085B               	movf	??_main+1,w
  1205  00D3  00F6               	movwf	___bmul@multiplicand
  1206  00D4  085F               	movf	main@i,w
  1207  00D5  3182  22AC  3180   	fcall	___bmul
  1208  00D8  3EA0               	addlw	_stoc& (0+255)
  1209  00D9  0020               	movlb	0	; select bank0
  1210  00DA  075E               	addwf	main@j,w
  1211  00DB  00DC               	movwf	??_main+2
  1212  00DC  085C               	movf	??_main+2,w
  1213  00DD  0086               	movwf	6
  1214  00DE  0187               	clrf	7
  1215  00DF  085A               	movf	??_main,w
  1216  00E0  0081               	movwf	1
  1217                           
  1218                           ;ver0.0_20140727.c: 151: if(countup(&i,&j));
  1219  00E1  305E               	movlw	main@j& (0+255)
  1220  00E2  00DA               	movwf	??_main
  1221  00E3  085A               	movf	??_main,w
  1222  00E4  00D0               	movwf	countup@j
  1223  00E5  305F               	movlw	main@i& (0+255)
  1224  00E6  3182  224D  3180   	fcall	_countup
  1225  00E9  0020               	movlb	0	; select bank0
  1226  00EA  0851               	movf	?_countup+1,w
  1227  00EB  0450               	iorwf	?_countup,w
  1228  00EC  1D03               	btfss	3,2
  1229  00ED  291C               	goto	l1801
  1230                           
  1231                           ;ver0.0_20140727.c: 152: else if((stoclocal=getch())==0x0A){
  1232  00EE  3182  22E6  3180   	fcall	_getch
  1233  00F1  0020               	movlb	0	; select bank0
  1234  00F2  00DA               	movwf	??_main
  1235  00F3  085A               	movf	??_main,w
  1236  00F4  00DD               	movwf	main@stoclocal
  1237  00F5  085D               	movf	main@stoclocal,w
  1238  00F6  3A0A               	xorlw	10
  1239  00F7  1D03               	skipz
  1240  00F8  291C               	goto	l1801
  1241                           
  1242                           ;ver0.0_20140727.c: 153: if(0xDD!=getch()){
  1243  00F9  3182  22E6  3180   	fcall	_getch
  1244  00FC  3ADD               	xorlw	221
  1245  00FD  1903               	skipnz
  1246  00FE  291C               	goto	l1801
  1247                           
  1248                           ;ver0.0_20140727.c: 154: i=16;
  1249  00FF  3010               	movlw	16
  1250  0100  0020               	movlb	0	; select bank0
  1251  0101  00DA               	movwf	??_main
  1252  0102  085A               	movf	??_main,w
  1253  0103  00DF               	movwf	main@i
  1254                           
  1255                           ;ver0.0_20140727.c: 155: j=3;
  1256  0104  3003               	movlw	3
  1257  0105  00DA               	movwf	??_main
  1258  0106  085A               	movf	??_main,w
  1259  0107  00DE               	movwf	main@j
  1260                           
  1261                           ;ver0.0_20140727.c: 159: }
  1262                           ;ver0.0_20140727.c: 160: }
  1263                           
  1264                           ;ver0.0_20140727.c: 156: }
  1265                           ;ver0.0_20140727.c: 157: }else{
  1266  0108  291C               	goto	l1801
  1267  0109                     l1799:	
  1268                           
  1269                           ;ver0.0_20140727.c: 161: else
  1270                           ;ver0.0_20140727.c: 162: stoc[i][j]=stoclocal;
  1271  0109  085D               	movf	main@stoclocal,w
  1272  010A  00DA               	movwf	??_main
  1273  010B  3003               	movlw	3
  1274  010C  00DB               	movwf	??_main+1
  1275  010D  085B               	movf	??_main+1,w
  1276  010E  00F6               	movwf	___bmul@multiplicand
  1277  010F  085F               	movf	main@i,w
  1278  0110  3182  22AC  3180   	fcall	___bmul
  1279  0113  3EA0               	addlw	_stoc& (0+255)
  1280  0114  0020               	movlb	0	; select bank0
  1281  0115  075E               	addwf	main@j,w
  1282  0116  00DC               	movwf	??_main+2
  1283  0117  085C               	movf	??_main+2,w
  1284  0118  0086               	movwf	6
  1285  0119  0187               	clrf	7
  1286  011A  085A               	movf	??_main,w
  1287  011B  0081               	movwf	1
  1288  011C                     l1801:	
  1289  011C  3001               	movlw	1
  1290  011D  0020               	movlb	0	; select bank0
  1291  011E  00DA               	movwf	??_main
  1292  011F  085A               	movf	??_main,w
  1293  0120  07DE               	addwf	main@j,f
  1294  0121  3003               	movlw	3
  1295  0122  025E               	subwf	main@j,w
  1296  0123  1C03               	skipc
  1297  0124  28C3               	goto	l1787
  1298  0125                     l1805:	
  1299  0125  3001               	movlw	1
  1300  0126  00DA               	movwf	??_main
  1301  0127  085A               	movf	??_main,w
  1302  0128  07DF               	addwf	main@i,f
  1303  0129  3010               	movlw	16
  1304  012A  025F               	subwf	main@i,w
  1305  012B  1C03               	skipc
  1306  012C  28BE               	goto	l1781
  1307  012D                     l1809:	
  1308                           
  1309                           ;ver0.0_20140727.c: 163: }
  1310                           ;ver0.0_20140727.c: 164: }
  1311                           ;ver0.0_20140727.c: 165: if(i>16);
  1312  012D  3011               	movlw	17
  1313  012E  025F               	subwf	main@i,w
  1314  012F  1803               	btfsc	3,0
  1315  0130  28B5               	goto	l1773
  1316                           
  1317                           ;ver0.0_20140727.c: 166: else{
  1318                           ;ver0.0_20140727.c: 167: if(0x0D==getch()){
  1319  0131  3182  22E6  3180   	fcall	_getch
  1320  0134  3A0D               	xorlw	13
  1321  0135  1D03               	skipz
  1322  0136  28B5               	goto	l1773
  1323                           
  1324                           ;ver0.0_20140727.c: 168: if(0x0A==getch()){
  1325  0137  3182  22E6  3180   	fcall	_getch
  1326  013A  3A0A               	xorlw	10
  1327  013B  1D03               	skipz
  1328  013C  28B5               	goto	l1773
  1329                           
  1330                           ;ver0.0_20140727.c: 169: if(0xDD!=getch())
  1331  013D  3182  22E6  3180   	fcall	_getch
  1332  0140  3ADD               	xorlw	221
  1333  0141  1903               	skipnz
  1334  0142  28B5               	goto	l1773
  1335                           
  1336                           ;ver0.0_20140727.c: 170: setdata();
  1337  0143  3181  2147  3180   	fcall	_setdata
  1338  0146  28B5               	goto	l1773
  1339  0147                     __end_of_main:	
  1340                           
  1341                           	psect	swtext1
  1342  02BE                     __pswtext1:	
  1343  02BE                     S1857:	
  1344  02BE  3180  2882         	ljmp	l269
  1345  02C0  3180  2884         	ljmp	l271
  1346  02C2  3180  2886         	ljmp	l272
  1347  02C4  3180  2888         	ljmp	l273
  1348  02C6  3180  288A         	ljmp	l274
  1349  02C8  3180  288C         	ljmp	l275
  1350  02CA  3180  288E         	ljmp	l276
  1351  02CC  3180  2890         	ljmp	l277
  1352                           
  1353                           	psect	text1
  1354  027B                     __ptext1:	
  1355 ;; *************** function _waitstart *****************
  1356 ;; Defined at:
  1357 ;;		line 198 in file "ver0.0_20140727.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  ch              1    6[COMMON] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    4
  1378 ;; This function calls:
  1379 ;;		_getch
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _waitstart
  1387  027B                     _waitstart:	
  1388                           
  1389                           ;ver0.0_20140727.c: 199: char ch=1;
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _waitstart: [wreg+status,2+status,0+pclath+cstack]
  1393  027B  01F6               	clrf	waitstart@ch
  1394  027C  0AF6               	incf	waitstart@ch,f
  1395  027D                     l1367:	
  1396                           ;ver0.0_20140727.c: 201: while(getch()==0xFF);
  1397                           
  1398                           ;ver0.0_20140727.c: 200: do{
  1399                           
  1400  027D  3182  22E6  3182   	fcall	_getch
  1401  0280  3AFF               	xorlw	255
  1402  0281  1903               	skipnz
  1403  0282  2A7D               	goto	l1367
  1404                           
  1405                           ;ver0.0_20140727.c: 202: if(0x53==getch()){
  1406  0283  3182  22E6  3182   	fcall	_getch
  1407  0286  3A53               	xorlw	83
  1408  0287  1D03               	skipz
  1409  0288  2A90               	goto	l1375
  1410                           
  1411                           ;ver0.0_20140727.c: 203: if(0x54==getch())
  1412  0289  3182  22E6  3182   	fcall	_getch
  1413  028C  3A54               	xorlw	84
  1414  028D  1D03               	skipz
  1415  028E  2A90               	goto	l1375
  1416                           
  1417                           ;ver0.0_20140727.c: 204: ch=0;
  1418  028F  01F6               	clrf	waitstart@ch
  1419  0290                     l1375:	
  1420                           
  1421                           ;ver0.0_20140727.c: 205: }
  1422                           ;ver0.0_20140727.c: 206: }while(ch);
  1423  0290  08F6               	movf	waitstart@ch,f
  1424  0291  1903               	btfsc	3,2
  1425  0292  0008               	return
  1426  0293  2A7D               	goto	l1367
  1427  0294                     __end_of_waitstart:	
  1428                           
  1429                           	psect	text2
  1430  02E6                     __ptext2:	
  1431 ;; *************** function _getch *****************
  1432 ;; Defined at:
  1433 ;;		line 9 in file "uart.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    3
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;;		_waitstart
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _getch
  1464  02E6                     _getch:	
  1465  02E6                     l343:	
  1466                           ;uart.c: 10: while(!RCIF){}
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _getch: [wreg]
  1470                           
  1471  02E6  0020               	movlb	0	; select bank0
  1472  02E7  1E91               	btfss	17,5	;volatile
  1473  02E8  2AE6               	goto	l343
  1474                           
  1475                           ;uart.c: 11: RCIF=0;
  1476  02E9  1291               	bcf	17,5	;volatile
  1477                           
  1478                           ;uart.c: 12: return RCREG;
  1479  02EA  0023               	movlb	3	; select bank3
  1480  02EB  0819               	movf	25,w	;volatile
  1481  02EC  0008               	return
  1482  02ED                     __end_of_getch:	
  1483                           
  1484                           	psect	text3
  1485  0294                     __ptext3:	
  1486 ;; *************** function _setpin *****************
  1487 ;; Defined at:
  1488 ;;		line 62 in file "sorce.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;		None               void
  1495 ;; Registers used:
  1496 ;;		wreg, status,2
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    3
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _setpin
  1518  0294                     _setpin:	
  1519                           
  1520                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1521                           
  1522                           ;incstack = 0
  1523                           ; Regs used in _setpin: [wreg+status,2]
  1524  0294  3070               	movlw	112
  1525  0295  0021               	movlb	1	; select bank1
  1526  0296  0099               	movwf	25	;volatile
  1527                           
  1528                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1529  0297  0023               	movlb	3	; select bank3
  1530  0298  018C               	clrf	12	;volatile
  1531                           
  1532                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1533  0299  018D               	clrf	13	;volatile
  1534                           
  1535                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1536  029A  018F               	clrf	15	;volatile
  1537                           
  1538                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1539  029B  0190               	clrf	16	;volatile
  1540                           
  1541                           ;sorce.c: 68: TRISA = 0b00000000 ;
  1542  029C  0021               	movlb	1	; select bank1
  1543  029D  018C               	clrf	12	;volatile
  1544                           
  1545                           ;sorce.c: 69: TRISB = 0b00000000 ;
  1546  029E  018D               	clrf	13	;volatile
  1547                           
  1548                           ;sorce.c: 70: TRISC = 0b10110000 ;
  1549  029F  30B0               	movlw	176
  1550  02A0  008E               	movwf	14	;volatile
  1551                           
  1552                           ;sorce.c: 71: TRISD = 0b00111100 ;
  1553  02A1  303C               	movlw	60
  1554  02A2  008F               	movwf	15	;volatile
  1555                           
  1556                           ;sorce.c: 72: TRISE = 0X00 ;
  1557  02A3  0190               	clrf	16	;volatile
  1558                           
  1559                           ;sorce.c: 74: PORTA = 0b00000000 ;
  1560  02A4  0020               	movlb	0	; select bank0
  1561  02A5  018C               	clrf	12	;volatile
  1562                           
  1563                           ;sorce.c: 75: PORTB = 0b00000000 ;
  1564  02A6  018D               	clrf	13	;volatile
  1565                           
  1566                           ;sorce.c: 76: PORTC = 0b10000000 ;
  1567  02A7  3080               	movlw	128
  1568  02A8  008E               	movwf	14	;volatile
  1569                           
  1570                           ;sorce.c: 77: PORTD = 0b00000000 ;
  1571  02A9  018F               	clrf	15	;volatile
  1572                           
  1573                           ;sorce.c: 78: PORTE=0x00;
  1574  02AA  0190               	clrf	16	;volatile
  1575  02AB  0008               	return
  1576  02AC                     __end_of_setpin:	
  1577                           
  1578                           	psect	text4
  1579  0147                     __ptext4:	
  1580 ;; *************** function _setdata *****************
  1581 ;; Defined at:
  1582 ;;		line 191 in file "ver0.0_20140727.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  j               1    9[BANK0 ] unsigned char 
  1587 ;;  i               1    8[BANK0 ] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;		None               void
  1590 ;; Registers used:
  1591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;Total ram usage:        7 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    4
  1604 ;; This function calls:
  1605 ;;		___bmul
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _setdata
  1613  0147                     _setdata:	
  1614                           
  1615                           ;ver0.0_20140727.c: 192: char i,j;
  1616                           ;ver0.0_20140727.c: 193: for(i=0;i<16;i++){
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _setdata: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1620  0147  0020               	movlb	0	; select bank0
  1621  0148  01D8               	clrf	setdata@i
  1622  0149                     L1:	
  1623  0149  3010               	movlw	16
  1624  014A  0258               	subwf	setdata@i,w
  1625  014B  1803               	btfsc	3,0
  1626  014C  0008               	return
  1627                           
  1628                           ;ver0.0_20140727.c: 194: for(j=0;j<3;j++)
  1629  014D  01D9               	clrf	setdata@j
  1630  014E  3003               	movlw	3
  1631  014F  0259               	subwf	setdata@j,w
  1632  0150  1803               	btfsc	3,0
  1633  0151  297C               	goto	l1663
  1634  0152                     l1657:	
  1635                           
  1636                           ;ver0.0_20140727.c: 195: led[i][j]=stoc[i][j];
  1637  0152  3003               	movlw	3
  1638  0153  00D3               	movwf	??_setdata
  1639  0154  0853               	movf	??_setdata,w
  1640  0155  00F6               	movwf	___bmul@multiplicand
  1641  0156  0858               	movf	setdata@i,w
  1642  0157  3182  22AC  3181   	fcall	___bmul
  1643  015A  3EA0               	addlw	_stoc& (0+255)
  1644  015B  0020               	movlb	0	; select bank0
  1645  015C  0759               	addwf	setdata@j,w
  1646  015D  00D4               	movwf	??_setdata+1
  1647  015E  0854               	movf	??_setdata+1,w
  1648  015F  0086               	movwf	6
  1649  0160  0187               	clrf	7
  1650  0161  0801               	movf	1,w
  1651  0162  00D5               	movwf	??_setdata+2
  1652  0163  3003               	movlw	3
  1653  0164  00D6               	movwf	??_setdata+3
  1654  0165  0856               	movf	??_setdata+3,w
  1655  0166  00F6               	movwf	___bmul@multiplicand
  1656  0167  0858               	movf	setdata@i,w
  1657  0168  3182  22AC  3181   	fcall	___bmul
  1658  016B  3E20               	addlw	_led& (0+255)
  1659  016C  0020               	movlb	0	; select bank0
  1660  016D  0759               	addwf	setdata@j,w
  1661  016E  00D7               	movwf	??_setdata+4
  1662  016F  0857               	movf	??_setdata+4,w
  1663  0170  0086               	movwf	6
  1664  0171  0187               	clrf	7
  1665  0172  0855               	movf	??_setdata+2,w
  1666  0173  0081               	movwf	1
  1667  0174  3001               	movlw	1
  1668  0175  00D3               	movwf	??_setdata
  1669  0176  0853               	movf	??_setdata,w
  1670  0177  07D9               	addwf	setdata@j,f
  1671  0178  3003               	movlw	3
  1672  0179  0259               	subwf	setdata@j,w
  1673  017A  1C03               	skipc
  1674  017B  2952               	goto	l1657
  1675  017C                     l1663:	
  1676  017C  3001               	movlw	1
  1677  017D  00D3               	movwf	??_setdata
  1678  017E  0853               	movf	??_setdata,w
  1679  017F  07D8               	addwf	setdata@i,f
  1680  0180  2949               	goto	L1
  1681  0181                     __end_of_setdata:	
  1682                           
  1683                           	psect	text5
  1684  02AC                     __ptext5:	
  1685 ;; *************** function ___bmul *****************
  1686 ;; Defined at:
  1687 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul8.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  multiplier      1    wreg     unsigned char 
  1690 ;;  multiplicand    1    6[COMMON] unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1693 ;;  product         1    1[BANK0 ] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      unsigned char 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1703 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1706 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;;		_setdata
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function ___bmul
  1720  02AC                     ___bmul:	
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1724                           ;___bmul@multiplier stored from wreg
  1725  02AC  0020               	movlb	0	; select bank0
  1726  02AD  00D2               	movwf	___bmul@multiplier
  1727  02AE  01D1               	clrf	___bmul@product
  1728  02AF                     l1611:	
  1729  02AF  1C52               	btfss	___bmul@multiplier,0
  1730  02B0  2AB5               	goto	l1615
  1731  02B1  0876               	movf	___bmul@multiplicand,w
  1732  02B2  00D0               	movwf	??___bmul
  1733  02B3  0850               	movf	??___bmul,w
  1734  02B4  07D1               	addwf	___bmul@product,f
  1735  02B5                     l1615:	
  1736  02B5  1003               	clrc
  1737  02B6  0DF6               	rlf	___bmul@multiplicand,f
  1738  02B7  1003               	clrc
  1739  02B8  0CD2               	rrf	___bmul@multiplier,f
  1740  02B9  08D2               	movf	___bmul@multiplier,f
  1741  02BA  1D03               	skipz
  1742  02BB  2AAF               	goto	l1611
  1743  02BC  0851               	movf	___bmul@product,w
  1744  02BD  0008               	return
  1745  02BE                     __end_of___bmul:	
  1746                           
  1747                           	psect	text6
  1748  024D                     __ptext6:	
  1749 ;; *************** function _countup *****************
  1750 ;; Defined at:
  1751 ;;		line 176 in file "ver0.0_20140727.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  i               1    wreg     PTR unsigned char 
  1754 ;;		 -> main@i(1), 
  1755 ;;  j               1    0[BANK0 ] PTR unsigned char 
  1756 ;;		 -> main@j(1), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  i               1    2[BANK0 ] PTR unsigned char 
  1759 ;;		 -> main@i(1), 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2    0[BANK0 ] int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;Total ram usage:        4 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    3
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _countup
  1785  024D                     _countup:	
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _countup: [wreg+fsr1l+fsr1h+status,2+status,0]
  1789                           ;countup@i stored from wreg
  1790  024D  0020               	movlb	0	; select bank0
  1791  024E  00D2               	movwf	countup@i
  1792                           
  1793                           ;ver0.0_20140727.c: 177: if(*j<3-1)
  1794  024F  0850               	movf	countup@j,w
  1795  0250  0086               	movwf	6
  1796  0251  0187               	clrf	7
  1797  0252  3002               	movlw	2
  1798  0253  0201               	subwf	1,w
  1799  0254  1803               	skipnc
  1800  0255  2A5B               	goto	l1629
  1801                           
  1802                           ;ver0.0_20140727.c: 178: *j++;
  1803  0256  3001               	movlw	1
  1804  0257  00F6               	movwf	??_countup
  1805  0258  0876               	movf	??_countup,w
  1806  0259  07D0               	addwf	countup@j,f
  1807  025A  2A78               	goto	l1641
  1808  025B                     l1629:	
  1809                           
  1810                           ;ver0.0_20140727.c: 179: else{
  1811                           ;ver0.0_20140727.c: 180: if(*i<16-1){
  1812  025B  0852               	movf	countup@i,w
  1813  025C  0086               	movwf	6
  1814  025D  0187               	clrf	7
  1815  025E  300F               	movlw	15
  1816  025F  0201               	subwf	1,w
  1817  0260  1803               	skipnc
  1818  0261  2A6B               	goto	l1635
  1819                           
  1820                           ;ver0.0_20140727.c: 181: *j=0;
  1821  0262  0850               	movf	countup@j,w
  1822  0263  0086               	movwf	6
  1823  0264  0187               	clrf	7
  1824  0265  0181               	clrf	1
  1825                           
  1826                           ;ver0.0_20140727.c: 182: *i++;
  1827  0266  3001               	movlw	1
  1828  0267  00F6               	movwf	??_countup
  1829  0268  0876               	movf	??_countup,w
  1830  0269  07D2               	addwf	countup@i,f
  1831                           
  1832                           ;ver0.0_20140727.c: 183: }else{
  1833  026A  2A78               	goto	l1641
  1834  026B                     l1635:	
  1835                           
  1836                           ;ver0.0_20140727.c: 184: *j++;
  1837  026B  3001               	movlw	1
  1838  026C  00F6               	movwf	??_countup
  1839  026D  0876               	movf	??_countup,w
  1840  026E  07D0               	addwf	countup@j,f
  1841                           
  1842                           ;ver0.0_20140727.c: 185: *i++;
  1843  026F  3001               	movlw	1
  1844  0270  00F6               	movwf	??_countup
  1845  0271  0876               	movf	??_countup,w
  1846  0272  07D2               	addwf	countup@i,f
  1847                           
  1848                           ;ver0.0_20140727.c: 186: return 1;
  1849  0273  3001               	movlw	1
  1850  0274  00D0               	movwf	?_countup
  1851  0275  3000               	movlw	0
  1852  0276  00D1               	movwf	?_countup+1
  1853  0277  0008               	return
  1854  0278                     l1641:	
  1855                           
  1856                           ;ver0.0_20140727.c: 187: }
  1857                           ;ver0.0_20140727.c: 188: }
  1858                           ;ver0.0_20140727.c: 189: return 0;
  1859  0278  01D0               	clrf	?_countup
  1860  0279  01D1               	clrf	?_countup+1
  1861  027A  0008               	return
  1862  027B                     __end_of_countup:	
  1863                           
  1864                           	psect	intentry
  1865  0004                     __pintentry:	
  1866 ;; *************** function _InterTimer *****************
  1867 ;; Defined at:
  1868 ;;		line 39 in file "ver0.0_20140727.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		_changeLED
  1891 ;;		_putch
  1892 ;; This function is called by:
  1893 ;;		Interrupt level 1
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897  0004                     _InterTimer:	
  1898                           
  1899                           ;incstack = 0
  1900                           ; Regs used in _InterTimer: [wreg+status,2+status,0+pclath+cstack]
  1901  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1902  0005  3180               	pagesel	$
  1903  0006  0020               	movlb	0	; select bank0
  1904  0007  087F               	movf	127,w
  1905  0008  00F5               	movwf	??_InterTimer+1
  1906                           
  1907                           ;ver0.0_20140727.c: 41: if (TMR0IF == 1) {
  1908  0009  1D0B               	btfss	11,2	;volatile
  1909  000A  2818               	goto	i1l260
  1910                           
  1911                           ;ver0.0_20140727.c: 42: TMR0 = 61 ;
  1912  000B  303D               	movlw	61
  1913  000C  0095               	movwf	21	;volatile
  1914                           
  1915                           ;ver0.0_20140727.c: 43: time++ ;
  1916  000D  3001               	movlw	1
  1917  000E  00F4               	movwf	??_InterTimer
  1918  000F  0874               	movf	??_InterTimer,w
  1919  0010  07F7               	addwf	_time,f
  1920                           
  1921                           ;ver0.0_20140727.c: 44: changeLED();
  1922  0011  3182  22CE  3180   	fcall	_changeLED
  1923                           
  1924                           ;ver0.0_20140727.c: 45: putch(0x09);
  1925  0014  3009               	movlw	9
  1926  0015  3182  22ED         	fcall	_putch
  1927                           
  1928                           ;ver0.0_20140727.c: 46: TMR0IF = 0 ;
  1929  0017  110B               	bcf	11,2	;volatile
  1930  0018                     i1l260:	
  1931  0018  0875               	movf	??_InterTimer+1,w
  1932  0019  0020               	movlb	0	; select bank0
  1933  001A  00FF               	movwf	127
  1934  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  1935  001C  0009               	retfie
  1936  001D                     __end_of_InterTimer:	
  1937                           
  1938                           	psect	text8
  1939  02ED                     __ptext8:	
  1940 ;; *************** function _putch *****************
  1941 ;; Defined at:
  1942 ;;		line 4 in file "uart.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  Data            1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  Data            1    0[COMMON] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;		None               void
  1949 ;; Registers used:
  1950 ;;		wreg
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_InterTimer
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _putch
  1971  02ED                     _putch:	
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _putch: [wreg]
  1975                           ;putch@Data stored from wreg
  1976  02ED  00F0               	movwf	putch@Data
  1977  02EE                     i1l337:	
  1978                           ;uart.c: 5: while(!TRMT){}
  1979                           
  1980  02EE  0023               	movlb	3	; select bank3
  1981  02EF  1C9E               	btfss	30,1	;volatile
  1982  02F0  2AEE               	goto	i1l337
  1983                           
  1984                           ;uart.c: 6: TXREG = Data;
  1985  02F1  0870               	movf	putch@Data,w
  1986  02F2  009A               	movwf	26	;volatile
  1987  02F3  0008               	return
  1988  02F4                     __end_of_putch:	
  1989                           
  1990                           	psect	text9
  1991  02CE                     __ptext9:	
  1992 ;; *************** function _changeLED *****************
  1993 ;; Defined at:
  1994 ;;		line 23 in file "ver0.0_20140727.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		_no0
  2017 ;;		_no1
  2018 ;;		_no2
  2019 ;;		_no3
  2020 ;;		_noxinit
  2021 ;; This function is called by:
  2022 ;;		_InterTimer
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _changeLED
  2028  02CE                     _changeLED:	
  2029                           
  2030                           ;ver0.0_20140727.c: 24: if(time==0)
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _changeLED: [wreg+status,2+status,0+pclath+cstack]
  2034  02CE  08F7               	movf	_time,f
  2035  02CF  1D03               	skipz
  2036  02D0  2AD4               	goto	i1l1053
  2037                           
  2038                           ;ver0.0_20140727.c: 25: noxinit();
  2039  02D1  3182  22DE         	fcall	_noxinit
  2040  02D3  0008               	return
  2041  02D4                     i1l1053:	
  2042                           ;ver0.0_20140727.c: 26: else if(0==0)
  2043                           
  2044                           
  2045                           ;ver0.0_20140727.c: 27: no0(time);
  2046  02D4  0877               	movf	_time,w
  2047  02D5  00F2               	movwf	??_changeLED
  2048  02D6  01F3               	clrf	??_changeLED+1
  2049  02D7  0872               	movf	??_changeLED,w
  2050  02D8  00F0               	movwf	?_no0
  2051  02D9  0873               	movf	??_changeLED+1,w
  2052  02DA  00F1               	movwf	?_no0+1
  2053  02DB  3182  221A         	fcall	_no0
  2054                           
  2055                           ;ver0.0_20140727.c: 28: else if(0==1)
  2056  02DD  0008               	return
  2057  02DE                     __end_of_changeLED:	
  2058                           ;ver0.0_20140727.c: 33: no3(time);
  2059                           
  2060                           ;ver0.0_20140727.c: 32: else if(0==3)
  2061                           
  2062                           ;ver0.0_20140727.c: 31: no2(time);
  2063                           
  2064                           ;ver0.0_20140727.c: 30: else if(0==2)
  2065                           
  2066                           ;ver0.0_20140727.c: 29: no1(time);
  2067                           
  2068                           
  2069                           	psect	text10
  2070  02DE                     __ptext10:	
  2071 ;; *************** function _noxinit *****************
  2072 ;; Defined at:
  2073 ;;		line 55 in file "sorce.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_changeLED
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _noxinit
  2102  02DE                     _noxinit:	
  2103                           
  2104                           ;sorce.c: 56: PORTA=0xFF;
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _noxinit: [wreg]
  2108  02DE  30FF               	movlw	255
  2109  02DF  0020               	movlb	0	; select bank0
  2110  02E0  008C               	movwf	12	;volatile
  2111                           
  2112                           ;sorce.c: 57: RC2=1;
  2113  02E1  150E               	bsf	14,2	;volatile
  2114                           
  2115                           ;sorce.c: 58: RC1=1;
  2116  02E2  148E               	bsf	14,1	;volatile
  2117                           
  2118                           ;sorce.c: 59: RC3=1;
  2119  02E3  158E               	bsf	14,3	;volatile
  2120                           
  2121                           ;sorce.c: 60: RC0=1;
  2122  02E4  140E               	bsf	14,0	;volatile
  2123  02E5  0008               	return
  2124  02E6                     __end_of_noxinit:	
  2125                           
  2126                           	psect	text11
  2127  0181                     __ptext11:	
  2128 ;; *************** function _no3 *****************
  2129 ;; Defined at:
  2130 ;;		line 42 in file "sorce.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;		None               void
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_changeLED
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _no3
  2159  0181                     _no3:	
  2160                           
  2161                           ;sorce.c: 43: if(led[12][0]<time) RA2=0;
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _no3: [wreg]
  2165  0181  0877               	movf	_time,w
  2166  0182  0020               	movlb	0	; select bank0
  2167  0183  0244               	subwf	_led+36,w
  2168  0184  1C03               	btfss	3,0
  2169  0185  110C               	bcf	12,2	;volatile
  2170                           
  2171                           ;sorce.c: 44: if(led[12][1]<time) RA0=0;
  2172  0186  0877               	movf	_time,w
  2173  0187  0245               	subwf	_led+37,w
  2174  0188  1C03               	btfss	3,0
  2175  0189  100C               	bcf	12,0	;volatile
  2176                           
  2177                           ;sorce.c: 45: if(led[12][2]<time) RA3=0;
  2178  018A  0877               	movf	_time,w
  2179  018B  0246               	subwf	_led+38,w
  2180  018C  1C03               	btfss	3,0
  2181  018D  118C               	bcf	12,3	;volatile
  2182                           
  2183                           ;sorce.c: 46: if(led[13][0]<time) RA1=0;
  2184  018E  0877               	movf	_time,w
  2185  018F  0247               	subwf	_led+39,w
  2186  0190  1C03               	btfss	3,0
  2187  0191  108C               	bcf	12,1	;volatile
  2188                           
  2189                           ;sorce.c: 47: if(led[13][1]<time) RA5=0;
  2190  0192  0877               	movf	_time,w
  2191  0193  0248               	subwf	_led+40,w
  2192  0194  1C03               	btfss	3,0
  2193  0195  128C               	bcf	12,5	;volatile
  2194                           
  2195                           ;sorce.c: 48: if(led[13][2]<time) RA4=0;
  2196  0196  0877               	movf	_time,w
  2197  0197  0249               	subwf	_led+41,w
  2198  0198  1C03               	btfss	3,0
  2199  0199  120C               	bcf	12,4	;volatile
  2200                           
  2201                           ;sorce.c: 49: if(led[14][0]<time) RC2=0;
  2202  019A  0877               	movf	_time,w
  2203  019B  024A               	subwf	_led+42,w
  2204  019C  1C03               	btfss	3,0
  2205  019D  110E               	bcf	14,2	;volatile
  2206                           
  2207                           ;sorce.c: 50: if(led[14][1]<time) RA7=0;
  2208  019E  0877               	movf	_time,w
  2209  019F  024B               	subwf	_led+43,w
  2210  01A0  1C03               	btfss	3,0
  2211  01A1  138C               	bcf	12,7	;volatile
  2212                           
  2213                           ;sorce.c: 51: if(led[14][2]<time) RA6=0;
  2214  01A2  0877               	movf	_time,w
  2215  01A3  024C               	subwf	_led+44,w
  2216  01A4  1C03               	btfss	3,0
  2217  01A5  130C               	bcf	12,6	;volatile
  2218                           
  2219                           ;sorce.c: 52: if(led[15][0]<time) RC1=0;
  2220  01A6  0877               	movf	_time,w
  2221  01A7  024D               	subwf	_led+45,w
  2222  01A8  1C03               	btfss	3,0
  2223  01A9  108E               	bcf	14,1	;volatile
  2224                           
  2225                           ;sorce.c: 53: if(led[15][1]<time) RC3=0;
  2226  01AA  0877               	movf	_time,w
  2227  01AB  024E               	subwf	_led+46,w
  2228  01AC  1C03               	btfss	3,0
  2229  01AD  118E               	bcf	14,3	;volatile
  2230                           
  2231                           ;sorce.c: 54: if(led[15][2]<time) RC0=0;
  2232  01AE  0877               	movf	_time,w
  2233  01AF  024F               	subwf	_led+47,w
  2234  01B0  1803               	skipnc
  2235  01B1  0008               	return
  2236  01B2  100E               	bcf	14,0	;volatile
  2237  01B3  0008               	return
  2238  01B4                     __end_of_no3:	
  2239                           
  2240                           	psect	text12
  2241  01B4                     __ptext12:	
  2242 ;; *************** function _no2 *****************
  2243 ;; Defined at:
  2244 ;;		line 29 in file "sorce.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;		None               void
  2251 ;; Registers used:
  2252 ;;		wreg
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;Total ram usage:        2 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_changeLED
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _no2
  2273  01B4                     _no2:	
  2274                           
  2275                           ;sorce.c: 30: if(led[8][0]<time) RA2=0;
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _no2: [wreg]
  2279  01B4  0877               	movf	_time,w
  2280  01B5  0020               	movlb	0	; select bank0
  2281  01B6  0238               	subwf	_led+24,w
  2282  01B7  1C03               	btfss	3,0
  2283  01B8  110C               	bcf	12,2	;volatile
  2284                           
  2285                           ;sorce.c: 31: if(led[8][1]<time) RA0=0;
  2286  01B9  0877               	movf	_time,w
  2287  01BA  0239               	subwf	_led+25,w
  2288  01BB  1C03               	btfss	3,0
  2289  01BC  100C               	bcf	12,0	;volatile
  2290                           
  2291                           ;sorce.c: 32: if(led[8][2]<time) RA3=0;
  2292  01BD  0877               	movf	_time,w
  2293  01BE  023A               	subwf	_led+26,w
  2294  01BF  1C03               	btfss	3,0
  2295  01C0  118C               	bcf	12,3	;volatile
  2296                           
  2297                           ;sorce.c: 33: if(led[9][0]<time) RA1=0;
  2298  01C1  0877               	movf	_time,w
  2299  01C2  023B               	subwf	_led+27,w
  2300  01C3  1C03               	btfss	3,0
  2301  01C4  108C               	bcf	12,1	;volatile
  2302                           
  2303                           ;sorce.c: 34: if(led[9][1]<time) RA5=0;
  2304  01C5  0877               	movf	_time,w
  2305  01C6  023C               	subwf	_led+28,w
  2306  01C7  1C03               	btfss	3,0
  2307  01C8  128C               	bcf	12,5	;volatile
  2308                           
  2309                           ;sorce.c: 35: if(led[9][2]<time) RA4=0;
  2310  01C9  0877               	movf	_time,w
  2311  01CA  023D               	subwf	_led+29,w
  2312  01CB  1C03               	btfss	3,0
  2313  01CC  120C               	bcf	12,4	;volatile
  2314                           
  2315                           ;sorce.c: 36: if(led[10][0]<time) RC2=0;
  2316  01CD  0877               	movf	_time,w
  2317  01CE  023E               	subwf	_led+30,w
  2318  01CF  1C03               	btfss	3,0
  2319  01D0  110E               	bcf	14,2	;volatile
  2320                           
  2321                           ;sorce.c: 37: if(led[10][1]<time) RA7=0;
  2322  01D1  0877               	movf	_time,w
  2323  01D2  023F               	subwf	_led+31,w
  2324  01D3  1C03               	btfss	3,0
  2325  01D4  138C               	bcf	12,7	;volatile
  2326                           
  2327                           ;sorce.c: 38: if(led[10][2]<time) RA6=0;
  2328  01D5  0877               	movf	_time,w
  2329  01D6  0240               	subwf	_led+32,w
  2330  01D7  1C03               	btfss	3,0
  2331  01D8  130C               	bcf	12,6	;volatile
  2332                           
  2333                           ;sorce.c: 39: if(led[11][0]<time) RC1=0;
  2334  01D9  0877               	movf	_time,w
  2335  01DA  0241               	subwf	_led+33,w
  2336  01DB  1C03               	btfss	3,0
  2337  01DC  108E               	bcf	14,1	;volatile
  2338                           
  2339                           ;sorce.c: 40: if(led[11][1]<time) RC3=0;
  2340  01DD  0877               	movf	_time,w
  2341  01DE  0242               	subwf	_led+34,w
  2342  01DF  1C03               	btfss	3,0
  2343  01E0  118E               	bcf	14,3	;volatile
  2344                           
  2345                           ;sorce.c: 41: if(led[11][2]<time) RC0=0;
  2346  01E1  0877               	movf	_time,w
  2347  01E2  0243               	subwf	_led+35,w
  2348  01E3  1803               	skipnc
  2349  01E4  0008               	return
  2350  01E5  100E               	bcf	14,0	;volatile
  2351  01E6  0008               	return
  2352  01E7                     __end_of_no2:	
  2353                           
  2354                           	psect	text13
  2355  01E7                     __ptext13:	
  2356 ;; *************** function _no1 *****************
  2357 ;; Defined at:
  2358 ;;		line 16 in file "sorce.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;		None               void
  2365 ;; Registers used:
  2366 ;;		wreg
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_changeLED
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _no1
  2387  01E7                     _no1:	
  2388                           
  2389                           ;sorce.c: 17: if(led[4][0]<time) RA2=0;
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _no1: [wreg]
  2393  01E7  0877               	movf	_time,w
  2394  01E8  0020               	movlb	0	; select bank0
  2395  01E9  022C               	subwf	_led+12,w
  2396  01EA  1C03               	btfss	3,0
  2397  01EB  110C               	bcf	12,2	;volatile
  2398                           
  2399                           ;sorce.c: 18: if(led[4][1]<time) RA0=0;
  2400  01EC  0877               	movf	_time,w
  2401  01ED  022D               	subwf	_led+13,w
  2402  01EE  1C03               	btfss	3,0
  2403  01EF  100C               	bcf	12,0	;volatile
  2404                           
  2405                           ;sorce.c: 19: if(led[4][2]<time) RA3=0;
  2406  01F0  0877               	movf	_time,w
  2407  01F1  022E               	subwf	_led+14,w
  2408  01F2  1C03               	btfss	3,0
  2409  01F3  118C               	bcf	12,3	;volatile
  2410                           
  2411                           ;sorce.c: 20: if(led[5][0]<time) RA1=0;
  2412  01F4  0877               	movf	_time,w
  2413  01F5  022F               	subwf	_led+15,w
  2414  01F6  1C03               	btfss	3,0
  2415  01F7  108C               	bcf	12,1	;volatile
  2416                           
  2417                           ;sorce.c: 21: if(led[5][1]<time) RA5=0;
  2418  01F8  0877               	movf	_time,w
  2419  01F9  0230               	subwf	_led+16,w
  2420  01FA  1C03               	btfss	3,0
  2421  01FB  128C               	bcf	12,5	;volatile
  2422                           
  2423                           ;sorce.c: 22: if(led[5][2]<time) RA4=0;
  2424  01FC  0877               	movf	_time,w
  2425  01FD  0231               	subwf	_led+17,w
  2426  01FE  1C03               	btfss	3,0
  2427  01FF  120C               	bcf	12,4	;volatile
  2428                           
  2429                           ;sorce.c: 23: if(led[6][0]<time) RC2=0;
  2430  0200  0877               	movf	_time,w
  2431  0201  0232               	subwf	_led+18,w
  2432  0202  1C03               	btfss	3,0
  2433  0203  110E               	bcf	14,2	;volatile
  2434                           
  2435                           ;sorce.c: 24: if(led[6][1]<time) RA7=0;
  2436  0204  0877               	movf	_time,w
  2437  0205  0233               	subwf	_led+19,w
  2438  0206  1C03               	btfss	3,0
  2439  0207  138C               	bcf	12,7	;volatile
  2440                           
  2441                           ;sorce.c: 25: if(led[6][2]<time) RA6=0;
  2442  0208  0877               	movf	_time,w
  2443  0209  0234               	subwf	_led+20,w
  2444  020A  1C03               	btfss	3,0
  2445  020B  130C               	bcf	12,6	;volatile
  2446                           
  2447                           ;sorce.c: 26: if(led[7][0]<time) RC1=0;
  2448  020C  0877               	movf	_time,w
  2449  020D  0235               	subwf	_led+21,w
  2450  020E  1C03               	btfss	3,0
  2451  020F  108E               	bcf	14,1	;volatile
  2452                           
  2453                           ;sorce.c: 27: if(led[7][1]<time) RC3=0;
  2454  0210  0877               	movf	_time,w
  2455  0211  0236               	subwf	_led+22,w
  2456  0212  1C03               	btfss	3,0
  2457  0213  118E               	bcf	14,3	;volatile
  2458                           
  2459                           ;sorce.c: 28: if(led[7][2]<time) RC0=0;
  2460  0214  0877               	movf	_time,w
  2461  0215  0237               	subwf	_led+23,w
  2462  0216  1803               	skipnc
  2463  0217  0008               	return
  2464  0218  100E               	bcf	14,0	;volatile
  2465  0219  0008               	return
  2466  021A                     __end_of_no1:	
  2467                           
  2468                           	psect	text14
  2469  021A                     __ptext14:	
  2470 ;; *************** function _no0 *****************
  2471 ;; Defined at:
  2472 ;;		line 3 in file "sorce.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_changeLED
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _no0
  2501  021A                     _no0:	
  2502                           
  2503                           ;sorce.c: 4: if(led[0][0]<time)RA2=0;
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _no0: [wreg]
  2507  021A  0877               	movf	_time,w
  2508  021B  0020               	movlb	0	; select bank0
  2509  021C  0220               	subwf	_led,w
  2510  021D  1C03               	btfss	3,0
  2511  021E  110C               	bcf	12,2	;volatile
  2512                           
  2513                           ;sorce.c: 5: if(led[0][1]<time) RA0=0;
  2514  021F  0877               	movf	_time,w
  2515  0220  0221               	subwf	_led+1,w
  2516  0221  1C03               	btfss	3,0
  2517  0222  100C               	bcf	12,0	;volatile
  2518                           
  2519                           ;sorce.c: 6: if(led[0][2]<time) RA3=0;
  2520  0223  0877               	movf	_time,w
  2521  0224  0222               	subwf	_led+2,w
  2522  0225  1C03               	btfss	3,0
  2523  0226  118C               	bcf	12,3	;volatile
  2524                           
  2525                           ;sorce.c: 7: if(led[1][0]<time) RA1=0;
  2526  0227  0877               	movf	_time,w
  2527  0228  0223               	subwf	_led+3,w
  2528  0229  1C03               	btfss	3,0
  2529  022A  108C               	bcf	12,1	;volatile
  2530                           
  2531                           ;sorce.c: 8: if(led[1][1]<time) RA5=0;
  2532  022B  0877               	movf	_time,w
  2533  022C  0224               	subwf	_led+4,w
  2534  022D  1C03               	btfss	3,0
  2535  022E  128C               	bcf	12,5	;volatile
  2536                           
  2537                           ;sorce.c: 9: if(led[1][2]<time) RA4=0;
  2538  022F  0877               	movf	_time,w
  2539  0230  0225               	subwf	_led+5,w
  2540  0231  1C03               	btfss	3,0
  2541  0232  120C               	bcf	12,4	;volatile
  2542                           
  2543                           ;sorce.c: 10: if(led[2][0]<time) RC2=0;
  2544  0233  0877               	movf	_time,w
  2545  0234  0226               	subwf	_led+6,w
  2546  0235  1C03               	btfss	3,0
  2547  0236  110E               	bcf	14,2	;volatile
  2548                           
  2549                           ;sorce.c: 11: if(led[2][1]<time) RA7=0;
  2550  0237  0877               	movf	_time,w
  2551  0238  0227               	subwf	_led+7,w
  2552  0239  1C03               	btfss	3,0
  2553  023A  138C               	bcf	12,7	;volatile
  2554                           
  2555                           ;sorce.c: 12: if(led[2][2]<time) RA6=0;
  2556  023B  0877               	movf	_time,w
  2557  023C  0228               	subwf	_led+8,w
  2558  023D  1C03               	btfss	3,0
  2559  023E  130C               	bcf	12,6	;volatile
  2560                           
  2561                           ;sorce.c: 13: if(led[3][0]<time) RC1=0;
  2562  023F  0877               	movf	_time,w
  2563  0240  0229               	subwf	_led+9,w
  2564  0241  1C03               	btfss	3,0
  2565  0242  108E               	bcf	14,1	;volatile
  2566                           
  2567                           ;sorce.c: 14: if(led[3][1]<time) RC3=0;
  2568  0243  0877               	movf	_time,w
  2569  0244  022A               	subwf	_led+10,w
  2570  0245  1C03               	btfss	3,0
  2571  0246  118E               	bcf	14,3	;volatile
  2572                           
  2573                           ;sorce.c: 15: if(led[3][2]<time) RC0=0;
  2574  0247  0877               	movf	_time,w
  2575  0248  022B               	subwf	_led+11,w
  2576  0249  1803               	skipnc
  2577  024A  0008               	return
  2578  024B  100E               	bcf	14,0	;volatile
  2579  024C  0008               	return
  2580  024D                     __end_of_no0:	
  2581  007E                     btemp	set	126	;btemp
  2582  007E                     pic14e$flags	set	126
  2583  007E                     wtemp	set	126
  2584  007E                     wtemp0	set	126
  2585  0080                     wtemp1	set	128
  2586  0082                     wtemp2	set	130
  2587  0084                     wtemp3	set	132
  2588  0086                     wtemp4	set	134
  2589  0088                     wtemp5	set	136
  2590  007F                     wtemp6	set	127
  2591  007E                     ttemp	set	126
  2592  007E                     ttemp0	set	126
  2593  0081                     ttemp1	set	129
  2594  0084                     ttemp2	set	132
  2595  0087                     ttemp3	set	135
  2596  007F                     ttemp4	set	127
  2597  007E                     ltemp	set	126
  2598  007E                     ltemp0	set	126
  2599  0082                     ltemp1	set	130
  2600  0086                     ltemp2	set	134
  2601  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     16      64
    BANK1            80      0      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    countup@i	PTR unsigned char  size(1) Largest target is 1
		 -> main@i(BANK0[1]), 

    countup@j	PTR unsigned char  size(1) Largest target is 1
		 -> main@j(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->_countup
    _main->_waitstart
    _setdata->___bmul

Critical Paths under _InterTimer in COMMON

    _InterTimer->_changeLED
    _changeLED->_no0
    _changeLED->_no1
    _changeLED->_no2
    _changeLED->_no3

Critical Paths under _main in BANK0

    _main->_setdata
    _setdata->___bmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0    1490
                                             10 BANK0      6     6      0
                             ___bmul
                            _countup
                              _getch
                            _setdata
                             _setpin
                          _waitstart
 ---------------------------------------------------------------------------------
 (1) _waitstart                                            1     1      0      24
                                              6 COMMON     1     1      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setdata                                              7     7      0     536
                                              3 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     276
                                              6 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _countup                                              4     2      2     200
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0      15
                                              4 COMMON     2     2      0
                          _changeLED
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _changeLED                                            2     2      0       0
                                              2 COMMON     2     2      0
                                _no0
                                _no1
                                _no2
                                _no3
                            _noxinit
 ---------------------------------------------------------------------------------
 (5) _noxinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _no3                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no2                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no1                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no0                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _countup
   _getch
   _setdata
     ___bmul
   _setpin
   _waitstart
     _getch

 _InterTimer (ROOT)
   _changeLED
     _no0
     _no1
     _no2
     _no3
     _noxinit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Aug 25 17:28:35 2014

                      pc 0002           ___bmul@product 0051              __CFG_CP$OFF 0000  
            __CFG_LVP$ON 0000                      l343 02E6                      l271 0084  
                    l272 0086                      l264 0079                      l273 0088  
                    l274 008A                      l275 008C                      l276 008E  
                    l277 0090                      l269 0082                      l278 00A0  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RC0 0070                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RD0 0078                      _RC2 0072  
                    _RB4 006C                      _RA6 0066                      _RD1 0079  
                    _RC3 0073                      _RB5 006D                      _RA7 0067  
                    _RE0 0080                      _RB6 006E                      _RE1 0081  
                    _RB7 006F                      _RE2 0082                      _RD4 007C  
                    _RD5 007D                      _RD6 007E             __CFG_CPD$OFF 0000  
                    _no0 021A                      _no1 01E7                      _no2 01B4  
                    _no3 0181                      _led 0020             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     S1857 02BE  
                   ?_no0 0070                     ?_no1 0070                     ?_no2 0070  
                   ?_no3 0070                     l1611 02AF                     l1615 02B5  
                   l1375 0290                     l1367 027D                     l1641 0278  
                   l1801 011C                     l1635 026B                     l1629 025B  
                   l1805 0125                     l1663 017C                     l1657 0152  
                   l1809 012D                     l1781 00BE                     l1773 00B5  
                   l1767 0093                     l1787 00C3                     l1799 0109  
                   _RCIF 008D                     _TMR0 0015                     _TRMT 0CF1  
                   _WPUB 020D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 0033                     _time 0077                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _stoc 00A0  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 001D                     ttemp 007E                     wtemp 007E  
      ___bmul@multiplier 0052                    ??_no0 0072                    ??_no1 0072  
                  ??_no2 0072                    ??_no3 0072            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l260 0018  
                  i1l337 02EE                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PORTD 000F                    _PORTE 0010  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _TRISE 0090                    _TXREG 019A  
                  _TXSTA 019E            __CFG_PWRTE$ON 0000          __end_of_countup 027B  
                  _getch 02E6                    _putch 02ED                    main@i 005F  
                  main@j 005E          __end_of_setdata 0181                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
        __end_of_noxinit 02E6                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 001F  
           __end_of_main 0147                   ??_main 005A               _InterTimer 0004  
                 ?_getch 0070                   _ANSELA 018C                   ?_putch 0070  
                 _ANSELB 018D                   _ANSELD 018F                   _ANSELE 0190  
                 i1l1053 02D4                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TRISC6 0476                   _TRISC7 0477  
                 _nWPUEN 04AF                   ___bmul 02AC           __CFG_STVREN$ON 0000  
                 _setpin 0294                ??_countup 0076                ??_setdata 0053  
              ??_noxinit 0070            main@stoclocal 005D  __end_of__initialization 002F  
    ___bmul@multiplicand 0076           __pcstackCOMMON 0070       __size_of_changeLED 0010  
          __end_of_getch 02ED            __end_of_putch 02F4              ?_InterTimer 0070  
                ??_getch 0076                  ??_putch 0070               __pbssBANK0 0020  
             __pbssBANK1 00A0          __CFG_VCAPEN$OFF 0000               __pmaintext 0033  
                ?___bmul 0076               __pintentry 0004                  _BAUDCON 019F  
                ?_setpin 0070       __size_of_waitstart 0019        __end_of_changeLED 02DE  
    __size_of_InterTimer 0019          __size_of___bmul 0012                  __ptext0 0000  
                __ptext1 027B                  __ptext2 02E6                  __ptext3 0294  
                __ptext4 0147                  __ptext5 02AC                  __ptext6 024D  
                __ptext8 02ED                  __ptext9 02CE          __size_of_setpin 0018  
                _countup 024D             __size_of_no0 0033             __size_of_no1 0033  
           __size_of_no2 0033             __size_of_no3 0033                  _setdata 0147  
                _noxinit 02DE                  clrloop0 02F5     end_of_initialization 002F  
      __end_of_waitstart 0294         __CFG_FOSC$INTOSC 0000              waitstart@ch 0076  
         __end_of___bmul 02BE             ??_InterTimer 0074           __end_of_setpin 02AC  
    start_initialization 001F              __end_of_no0 024D              __end_of_no1 021A  
            __end_of_no2 01E7              __end_of_no3 01B4       __end_of_InterTimer 001D  
               ??___bmul 0050                 ??_setpin 0076              __pbssCOMMON 0077  
              ___latbits 0003            __pcstackBANK0 0050                _changeLED 02CE  
              __pswtext1 02BE                 ?_countup 0050                 ?_setdata 0070  
               ?_noxinit 0070           __size_of_getch 0007           __size_of_putch 0007  
             ?_changeLED 0070                clear_ram0 02F4                _waitstart 027B  
             ?_waitstart 0070         __size_of_countup 002E                 __ptext10 02DE  
               __ptext11 0181                 __ptext12 01B4                 __ptext13 01E7  
               __ptext14 021A         __size_of_setdata 003A         __size_of_noxinit 0008  
          __size_of_main 0114              ??_changeLED 0072                putch@Data 0070  
               countup@i 0052                 countup@j 0050              pic14e$flags 007E  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000                 setdata@i 0058  
               setdata@j 0059              ??_waitstart 0076               _OPTION_REG 0095  
