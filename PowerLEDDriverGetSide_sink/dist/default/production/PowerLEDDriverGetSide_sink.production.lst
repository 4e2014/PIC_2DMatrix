

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Aug 25 16:57:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0068                     _RB0	set	104
   570  0069                     _RB1	set	105
   571  006A                     _RB2	set	106
   572  006B                     _RB3	set	107
   573  006C                     _RB4	set	108
   574  006D                     _RB5	set	109
   575  006E                     _RB6	set	110
   576  006F                     _RB7	set	111
   577  0070                     _RC0	set	112
   578  0071                     _RC1	set	113
   579  0072                     _RC2	set	114
   580  0073                     _RC3	set	115
   581  0074                     _RC4	set	116
   582  008D                     _RCIF	set	141
   583  0078                     _RD0	set	120
   584  0079                     _RD1	set	121
   585  007E                     _RD6	set	126
   586  0080                     _RE0	set	128
   587  0081                     _RE1	set	129
   588  0082                     _RE2	set	130
   589  005D                     _TMR0IE	set	93
   590  005A                     _TMR0IF	set	90
   591  0095                     _OPTION_REG	set	149
   592  0099                     _OSCCON	set	153
   593  008C                     _TRISA	set	140
   594  008D                     _TRISB	set	141
   595  008E                     _TRISC	set	142
   596  008F                     _TRISD	set	143
   597  0090                     _TRISE	set	144
   598  0476                     _TRISC6	set	1142
   599  0477                     _TRISC7	set	1143
   600  04AF                     _nWPUEN	set	1199
   601  018C                     _ANSELA	set	396
   602  018D                     _ANSELB	set	397
   603  018F                     _ANSELD	set	399
   604  0190                     _ANSELE	set	400
   605  019F                     _BAUDCON	set	415
   606  0199                     _RCREG	set	409
   607  019D                     _RCSTA	set	413
   608  019B                     _SPBRG	set	411
   609  019A                     _TXREG	set	410
   610  019E                     _TXSTA	set	414
   611  0CF1                     _TRMT	set	3313
   612  020D                     _WPUB	set	525
   613                           
   614                           	psect	text0
   615  0000                     __ptext0:	
   616                           ; #config settings
   617                           
   618                           
   619                           ;psect for function _no0
   620  0000                     
   621                           	psect	cinit
   622  001F                     start_initialization:	
   623  001F                     __initialization:	
   624                           
   625                           ; Clear objects allocated to COMMON
   626  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   627                           
   628                           ; Clear objects allocated to BANK0
   629  0020  3020               	movlw	low __pbssBANK0
   630  0021  0084               	movwf	4
   631  0022  3000               	movlw	high __pbssBANK0
   632  0023  0085               	movwf	5
   633  0024  3030               	movlw	48
   634  0025  3182  22EE  3180   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK1
   637  0028  30A0               	movlw	low __pbssBANK1
   638  0029  0084               	movwf	4
   639  002A  3000               	movlw	high __pbssBANK1
   640  002B  0085               	movwf	5
   641  002C  3030               	movlw	48
   642  002D  3182  22EE         	fcall	clear_ram0
   643  002F                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  002F                     __end_of__initialization:	
   647  002F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   648  0030  0020               	movlb	0
   649  0031  3180  2833         	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	bssCOMMON
   652  0077                     __pbssCOMMON:	
   653  0077                     _time:	
   654  0077                     	ds	1
   655                           
   656                           	psect	bssBANK0
   657  0020                     __pbssBANK0:	
   658  0020                     _led:	
   659  0020                     	ds	48
   660                           
   661                           	psect	bssBANK1
   662  00A0                     __pbssBANK1:	
   663  00A0                     _stoc:	
   664  00A0                     	ds	48
   665                           
   666                           	psect	clrtext
   667  02EE                     clear_ram0:	
   668                           ;	Called with FSR0 containing the base address, and
   669                           ;	WREG with the size to clear
   670                           
   671  02EE  0064               	clrwdt	;clear the watchdog before getting into this loop
   672  02EF                     clrloop0:	
   673  02EF  0180               	clrf	0	;clear RAM location pointed to by FSR
   674  02F0  3101               	addfsr 0,1
   675  02F1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   676  02F2  2AEF               	goto	clrloop0	;have we reached the end yet?
   677  02F3  3400               	retlw	0	;all done for this memory range, return
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_putch:	
   682  0070                     ??_putch:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_waitstart:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_setdata:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_no0:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_no1:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_no2:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_no3:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_noxinit:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ??_noxinit:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_setpin:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_changeLED:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_InterTimer:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_main:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_getch:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     putch@Data:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 1 bytes @ 0x0
   729  0070                     	ds	2
   730  0072                     ??_no0:	
   731  0072                     ??_no1:	
   732                           ; 0 bytes @ 0x2
   733                           
   734  0072                     ??_no2:	
   735                           ; 0 bytes @ 0x2
   736                           
   737  0072                     ??_no3:	
   738                           ; 0 bytes @ 0x2
   739                           
   740  0072                     ??_changeLED:	
   741                           ; 0 bytes @ 0x2
   742                           
   743                           
   744                           ; 0 bytes @ 0x2
   745  0072                     	ds	2
   746  0074                     ??_InterTimer:	
   747                           
   748                           ; 0 bytes @ 0x4
   749  0074                     	ds	2
   750  0076                     ??_waitstart:	
   751  0076                     ??_getch:	
   752                           ; 0 bytes @ 0x6
   753                           
   754  0076                     ??_countup:	
   755                           ; 0 bytes @ 0x6
   756                           
   757  0076                     ??_setpin:	
   758                           ; 0 bytes @ 0x6
   759                           
   760  0076                     ?___bmul:	
   761                           ; 0 bytes @ 0x6
   762                           
   763  0076                     waitstart@ch:	
   764                           ; 1 bytes @ 0x6
   765                           
   766  0076                     ___bmul@multiplicand:	
   767                           ; 1 bytes @ 0x6
   768                           
   769                           
   770                           ; 1 bytes @ 0x6
   771  0076                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0050                     __pcstackBANK0:	
   775  0050                     ??___bmul:	
   776  0050                     ?_countup:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0050                     countup@j:	
   780                           ; 2 bytes @ 0x0
   781                           
   782                           
   783                           ; 1 bytes @ 0x0
   784  0050                     	ds	1
   785  0051                     ___bmul@product:	
   786                           
   787                           ; 1 bytes @ 0x1
   788  0051                     	ds	1
   789  0052                     countup@i:	
   790  0052                     ___bmul@multiplier:	
   791                           ; 1 bytes @ 0x2
   792                           
   793                           
   794                           ; 1 bytes @ 0x2
   795  0052                     	ds	1
   796  0053                     ??_setdata:	
   797                           
   798                           ; 0 bytes @ 0x3
   799  0053                     	ds	5
   800  0058                     setdata@i:	
   801                           
   802                           ; 1 bytes @ 0x8
   803  0058                     	ds	1
   804  0059                     setdata@j:	
   805                           
   806                           ; 1 bytes @ 0x9
   807  0059                     	ds	1
   808  005A                     ??_main:	
   809                           
   810                           ; 0 bytes @ 0xA
   811  005A                     	ds	3
   812  005D                     main@stoclocal:	
   813                           
   814                           ; 1 bytes @ 0xD
   815  005D                     	ds	1
   816  005E                     main@j:	
   817                           
   818                           ; 1 bytes @ 0xE
   819  005E                     	ds	1
   820  005F                     main@i:	
   821                           
   822                           ; 1 bytes @ 0xF
   823  005F                     	ds	1
   824                           
   825                           	psect	maintext
   826  0033                     __pmaintext:	
   827 ;;
   828 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   829 ;;
   830 ;; *************** function _main *****************
   831 ;; Defined at:
   832 ;;		line 52 in file "ver0.0_20140727.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  test           32    0        unsigned char [4][8]
   837 ;;  str            10    0        unsigned char [10]
   838 ;;  i               1   15[BANK0 ] unsigned char 
   839 ;;  j               1   14[BANK0 ] unsigned char 
   840 ;;  stoclocal       1   13[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;		None               void
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 17F/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   851 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;Total ram usage:        6 bytes
   855 ;; Hardware stack levels required when called:    5
   856 ;; This function calls:
   857 ;;		___bmul
   858 ;;		_countup
   859 ;;		_getch
   860 ;;		_setdata
   861 ;;		_setpin
   862 ;;		_waitstart
   863 ;; This function is called by:
   864 ;;		Startup code after reset
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           
   869                           ;psect for function _main
   870  0033                     _main:	
   871                           
   872                           ;ver0.0_20140727.c: 54: char i=1,j,str[10];
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   876  0033  0020               	movlb	0	; select bank0
   877  0034  01DF               	clrf	main@i
   878  0035  0ADF               	incf	main@i,f
   879                           
   880                           ;ver0.0_20140727.c: 55: unsigned char stoclocal;
   881                           ;ver0.0_20140727.c: 56: char test[8][4];
   882                           ;ver0.0_20140727.c: 57: setpin();
   883  0036  3182  228E  3180   	fcall	_setpin
   884                           
   885                           ;ver0.0_20140727.c: 58: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   886  0039  0021               	movlb	1	; select bank1
   887  003A  178E               	bsf	14,7	;volatile
   888  003B  130E               	bcf	14,6	;volatile
   889  003C  3033               	movlw	51
   890  003D  0023               	movlb	3	; select bank3
   891  003E  009B               	movwf	27	;volatile
   892  003F  3090               	movlw	144
   893  0040  009D               	movwf	29	;volatile
   894  0041  3024               	movlw	36
   895  0042  009E               	movwf	30	;volatile
   896  0043  019F               	clrf	31	;volatile
   897                           
   898                           ;ver0.0_20140727.c: 59: OPTION_REG = 0b00000110 ;
   899  0044  3006               	movlw	6
   900  0045  0021               	movlb	1	; select bank1
   901  0046  0095               	movwf	21	;volatile
   902                           
   903                           ;ver0.0_20140727.c: 60: TMR0 = 61 ;
   904  0047  303D               	movlw	61
   905  0048  0020               	movlb	0	; select bank0
   906  0049  0095               	movwf	21	;volatile
   907                           
   908                           ;ver0.0_20140727.c: 61: TMR0IF = 0 ;
   909  004A  110B               	bcf	11,2	;volatile
   910                           
   911                           ;ver0.0_20140727.c: 62: time = 0 ;
   912  004B  01F7               	clrf	_time
   913                           
   914                           ;ver0.0_20140727.c: 63: TMR0IE = 1 ;
   915  004C  168B               	bsf	11,5	;volatile
   916                           
   917                           ;ver0.0_20140727.c: 64: WPUB = 0xC0;
   918  004D  30C0               	movlw	192
   919  004E  0024               	movlb	4	; select bank4
   920  004F  008D               	movwf	13	;volatile
   921                           
   922                           ;ver0.0_20140727.c: 65: nWPUEN = 0;
   923  0050  0021               	movlb	1	; select bank1
   924  0051  1395               	bcf	21,7	;volatile
   925                           
   926                           ;ver0.0_20140727.c: 66: GIE = 0 ;
   927  0052  138B               	bcf	11,7	;volatile
   928                           
   929                           ;ver0.0_20140727.c: 67: RA1=1;
   930  0053  0020               	movlb	0	; select bank0
   931  0054  148C               	bsf	12,1	;volatile
   932                           
   933                           ;ver0.0_20140727.c: 68: RA2=1;
   934  0055  150C               	bsf	12,2	;volatile
   935                           
   936                           ;ver0.0_20140727.c: 69: RA3=1;
   937  0056  158C               	bsf	12,3	;volatile
   938                           
   939                           ;ver0.0_20140727.c: 70: RA4=1;
   940  0057  160C               	bsf	12,4	;volatile
   941                           
   942                           ;ver0.0_20140727.c: 71: RA5=1;
   943  0058  168C               	bsf	12,5	;volatile
   944                           
   945                           ;ver0.0_20140727.c: 72: RB0=1;
   946  0059  140D               	bsf	13,0	;volatile
   947                           
   948                           ;ver0.0_20140727.c: 73: RB1=1;
   949  005A  148D               	bsf	13,1	;volatile
   950                           
   951                           ;ver0.0_20140727.c: 74: RB2=1;
   952  005B  150D               	bsf	13,2	;volatile
   953                           
   954                           ;ver0.0_20140727.c: 75: RB3=1;
   955  005C  158D               	bsf	13,3	;volatile
   956                           
   957                           ;ver0.0_20140727.c: 76: RB4=1;
   958  005D  160D               	bsf	13,4	;volatile
   959                           
   960                           ;ver0.0_20140727.c: 77: RB5=1;
   961  005E  168D               	bsf	13,5	;volatile
   962                           
   963                           ;ver0.0_20140727.c: 78: RB6=1;
   964  005F  170D               	bsf	13,6	;volatile
   965                           
   966                           ;ver0.0_20140727.c: 79: RB7=1;
   967  0060  178D               	bsf	13,7	;volatile
   968                           
   969                           ;ver0.0_20140727.c: 80: RE0=1;
   970  0061  1410               	bsf	16,0	;volatile
   971                           
   972                           ;ver0.0_20140727.c: 81: RE1=1;
   973  0062  1490               	bsf	16,1	;volatile
   974                           
   975                           ;ver0.0_20140727.c: 82: RE2=1;
   976  0063  1510               	bsf	16,2	;volatile
   977                           
   978                           ;ver0.0_20140727.c: 84: PORTA=0xFF;
   979  0064  30FF               	movlw	255
   980  0065  008C               	movwf	12	;volatile
   981                           
   982                           ;ver0.0_20140727.c: 85: PORTB=0xFF;
   983  0066  30FF               	movlw	255
   984  0067  008D               	movwf	13	;volatile
   985                           
   986                           ;ver0.0_20140727.c: 86: PORTC=0xFF;
   987  0068  30FF               	movlw	255
   988  0069  008E               	movwf	14	;volatile
   989                           
   990                           ;ver0.0_20140727.c: 87: PORTD=0xFF;
   991  006A  30FF               	movlw	255
   992  006B  008F               	movwf	15	;volatile
   993                           
   994                           ;ver0.0_20140727.c: 88: PORTE=0xFF;
   995  006C  30FF               	movlw	255
   996  006D  0090               	movwf	16	;volatile
   997                           
   998                           ;ver0.0_20140727.c: 89: RA7=0;
   999  006E  138C               	bcf	12,7	;volatile
  1000                           
  1001                           ;ver0.0_20140727.c: 90: RA6=0;
  1002  006F  130C               	bcf	12,6	;volatile
  1003                           
  1004                           ;ver0.0_20140727.c: 91: RC0=0;
  1005  0070  100E               	bcf	14,0	;volatile
  1006                           
  1007                           ;ver0.0_20140727.c: 92: RC1=0;
  1008  0071  108E               	bcf	14,1	;volatile
  1009                           
  1010                           ;ver0.0_20140727.c: 93: RC2=0;
  1011  0072  110E               	bcf	14,2	;volatile
  1012                           
  1013                           ;ver0.0_20140727.c: 94: RC3=0;
  1014  0073  118E               	bcf	14,3	;volatile
  1015                           
  1016                           ;ver0.0_20140727.c: 95: RD0=0;
  1017  0074  100F               	bcf	15,0	;volatile
  1018                           
  1019                           ;ver0.0_20140727.c: 96: RD1=0;
  1020  0075  108F               	bcf	15,1	;volatile
  1021                           
  1022                           ;ver0.0_20140727.c: 97: i=1;0;
  1023  0076  01DF               	clrf	main@i
  1024  0077  0ADF               	incf	main@i,f
  1025                           
  1026                           ;ver0.0_20140727.c: 98: RD6=1;
  1027  0078  170F               	bsf	15,6	;volatile
  1028  0079                     l262:	
  1029                           ;ver0.0_20140727.c: 100: while(RC4==0);
  1030                           
  1031                           ;ver0.0_20140727.c: 99: while(1){
  1032                           
  1033  0079  1A0E               	btfsc	14,4	;volatile
  1034  007A  288D               	goto	l1758
  1035  007B  2879               	goto	l262
  1036  007C                     l266:	
  1037                           ;ver0.0_20140727.c: 103: case 1:RA7=1;break;
  1038                           
  1039                           ;ver0.0_20140727.c: 102: switch(i){
  1040                           
  1041  007C  178C               	bsf	12,7	;volatile
  1042  007D  289A               	goto	l275
  1043  007E                     l268:	
  1044                           ;ver0.0_20140727.c: 104: case 2:RA6=1;break;
  1045                           
  1046  007E  170C               	bsf	12,6	;volatile
  1047  007F  289A               	goto	l275
  1048  0080                     l269:	
  1049                           ;ver0.0_20140727.c: 105: case 3:RC0=1;break;
  1050                           
  1051  0080  140E               	bsf	14,0	;volatile
  1052  0081  289A               	goto	l275
  1053  0082                     l270:	
  1054                           ;ver0.0_20140727.c: 106: case 4:RC1=1;break;
  1055                           
  1056  0082  148E               	bsf	14,1	;volatile
  1057  0083  289A               	goto	l275
  1058  0084                     l271:	
  1059                           ;ver0.0_20140727.c: 107: case 5:RC2=1;break;
  1060                           
  1061  0084  150E               	bsf	14,2	;volatile
  1062  0085  289A               	goto	l275
  1063  0086                     l272:	
  1064                           ;ver0.0_20140727.c: 108: case 6:RC3=1;break;
  1065                           
  1066  0086  158E               	bsf	14,3	;volatile
  1067  0087  289A               	goto	l275
  1068  0088                     l273:	
  1069                           ;ver0.0_20140727.c: 109: case 7:RD0=1;break;
  1070                           
  1071  0088  140F               	bsf	15,0	;volatile
  1072  0089  289A               	goto	l275
  1073  008A                     l274:	
  1074                           ;ver0.0_20140727.c: 110: case 8:RD1=1;i=0;break;
  1075                           
  1076  008A  148F               	bsf	15,1	;volatile
  1077  008B  01DF               	clrf	main@i
  1078                           
  1079                           ;ver0.0_20140727.c: 111: }
  1080  008C  289A               	goto	l275
  1081  008D                     l1758:	
  1082  008D  085F               	movf	main@i,w
  1083                           
  1084                           ; Switch size 1, requested type "space"
  1085                           ; Number of cases is 8, Range of values is 1 to 8
  1086                           ; switch strategies available:
  1087                           ; Name         Instructions Cycles
  1088                           ; direct_byte           25     9 (fixed)
  1089                           ; simple_byte           25    13 (average)
  1090                           ; jumptable            263     9 (fixed)
  1091                           ;	Chosen strategy is direct_byte
  1092  008E  3EFF               	addlw	-1
  1093  008F  1C03               	skipc
  1094  0090  289A               	goto	l275
  1095  0091  0084               	movwf	4
  1096  0092  3008               	movlw	8
  1097  0093  0204               	subwf	4,w
  1098  0094  1803               	skipnc
  1099  0095  289A               	goto	l275
  1100  0096  3182               	movlp	high S1848
  1101  0097  3504               	lslf	4,w
  1102  0098  3EB8               	addlw	low S1848
  1103  0099  0082               	movwf	2
  1104  009A                     l275:	
  1105                           ;ver0.0_20140727.c: 113: while(RC4==1);
  1106                           
  1107  009A  1A0E               	btfsc	14,4	;volatile
  1108  009B  289A               	goto	l275
  1109                           
  1110                           ;ver0.0_20140727.c: 115: RA7=0;
  1111  009C  138C               	bcf	12,7	;volatile
  1112                           
  1113                           ;ver0.0_20140727.c: 116: RA6=0;
  1114  009D  130C               	bcf	12,6	;volatile
  1115                           
  1116                           ;ver0.0_20140727.c: 117: RC0=0;
  1117  009E  100E               	bcf	14,0	;volatile
  1118                           
  1119                           ;ver0.0_20140727.c: 118: RC1=0;
  1120  009F  108E               	bcf	14,1	;volatile
  1121                           
  1122                           ;ver0.0_20140727.c: 119: RC2=0;
  1123  00A0  110E               	bcf	14,2	;volatile
  1124                           
  1125                           ;ver0.0_20140727.c: 120: RC3=0;
  1126  00A1  118E               	bcf	14,3	;volatile
  1127                           
  1128                           ;ver0.0_20140727.c: 121: RD0=0;
  1129  00A2  100F               	bcf	15,0	;volatile
  1130                           
  1131                           ;ver0.0_20140727.c: 122: RD1=0;
  1132  00A3  108F               	bcf	15,1	;volatile
  1133                           
  1134                           ;ver0.0_20140727.c: 123: PORTC=0b11110000;
  1135  00A4  30F0               	movlw	240
  1136  00A5  008E               	movwf	14	;volatile
  1137                           
  1138                           ;ver0.0_20140727.c: 124: PORTA=0b00111111;
  1139  00A6  303F               	movlw	63
  1140  00A7  008C               	movwf	12	;volatile
  1141                           
  1142                           ;ver0.0_20140727.c: 125: PORTD=0b11111100;
  1143  00A8  30FC               	movlw	252
  1144  00A9  008F               	movwf	15	;volatile
  1145                           
  1146                           ;ver0.0_20140727.c: 127: i++;
  1147  00AA  3001               	movlw	1
  1148  00AB  00DA               	movwf	??_main
  1149  00AC  085A               	movf	??_main,w
  1150  00AD  07DF               	addwf	main@i,f
  1151  00AE  2879               	goto	l262
  1152  00AF                     l1764:	
  1153                           ;ver0.0_20140727.c: 128: }
  1154                           ;ver0.0_20140727.c: 143: while(1) {
  1155                           
  1156                           
  1157                           ;ver0.0_20140727.c: 144: waitstart();
  1158  00AF  3182  2275  3180   	fcall	_waitstart
  1159                           
  1160                           ;ver0.0_20140727.c: 145: for(i=0;i<16;i++){
  1161  00B2  0020               	movlb	0	; select bank0
  1162  00B3  01DF               	clrf	main@i
  1163  00B4  3010               	movlw	16
  1164  00B5  025F               	subwf	main@i,w
  1165  00B6  1803               	btfsc	3,0
  1166  00B7  2927               	goto	l1800
  1167  00B8                     l1772:	
  1168                           
  1169                           ;ver0.0_20140727.c: 146: for(j=0;j<3;j++){
  1170  00B8  01DE               	clrf	main@j
  1171  00B9  3003               	movlw	3
  1172  00BA  025E               	subwf	main@j,w
  1173  00BB  1803               	btfsc	3,0
  1174  00BC  291F               	goto	l1796
  1175  00BD                     l1778:	
  1176                           
  1177                           ;ver0.0_20140727.c: 147: if((stoclocal=getch())==0x0D){
  1178  00BD  3182  22E0  3180   	fcall	_getch
  1179  00C0  0020               	movlb	0	; select bank0
  1180  00C1  00DA               	movwf	??_main
  1181  00C2  085A               	movf	??_main,w
  1182  00C3  00DD               	movwf	main@stoclocal
  1183  00C4  085D               	movf	main@stoclocal,w
  1184  00C5  3A0D               	xorlw	13
  1185  00C6  1D03               	skipz
  1186  00C7  2903               	goto	l1790
  1187                           
  1188                           ;ver0.0_20140727.c: 148: stoc[i][j]=0x0D;
  1189  00C8  300D               	movlw	13
  1190  00C9  00DA               	movwf	??_main
  1191  00CA  3003               	movlw	3
  1192  00CB  00DB               	movwf	??_main+1
  1193  00CC  085B               	movf	??_main+1,w
  1194  00CD  00F6               	movwf	___bmul@multiplicand
  1195  00CE  085F               	movf	main@i,w
  1196  00CF  3182  22A6  3180   	fcall	___bmul
  1197  00D2  3EA0               	addlw	_stoc& (0+255)
  1198  00D3  0020               	movlb	0	; select bank0
  1199  00D4  075E               	addwf	main@j,w
  1200  00D5  00DC               	movwf	??_main+2
  1201  00D6  085C               	movf	??_main+2,w
  1202  00D7  0086               	movwf	6
  1203  00D8  0187               	clrf	7
  1204  00D9  085A               	movf	??_main,w
  1205  00DA  0081               	movwf	1
  1206                           
  1207                           ;ver0.0_20140727.c: 149: if(countup(&i,&j));
  1208  00DB  305E               	movlw	main@j& (0+255)
  1209  00DC  00DA               	movwf	??_main
  1210  00DD  085A               	movf	??_main,w
  1211  00DE  00D0               	movwf	countup@j
  1212  00DF  305F               	movlw	main@i& (0+255)
  1213  00E0  3182  2247  3180   	fcall	_countup
  1214  00E3  0020               	movlb	0	; select bank0
  1215  00E4  0851               	movf	?_countup+1,w
  1216  00E5  0450               	iorwf	?_countup,w
  1217  00E6  1D03               	btfss	3,2
  1218  00E7  2916               	goto	l1792
  1219                           
  1220                           ;ver0.0_20140727.c: 150: else if((stoclocal=getch())==0x0A){
  1221  00E8  3182  22E0  3180   	fcall	_getch
  1222  00EB  0020               	movlb	0	; select bank0
  1223  00EC  00DA               	movwf	??_main
  1224  00ED  085A               	movf	??_main,w
  1225  00EE  00DD               	movwf	main@stoclocal
  1226  00EF  085D               	movf	main@stoclocal,w
  1227  00F0  3A0A               	xorlw	10
  1228  00F1  1D03               	skipz
  1229  00F2  2916               	goto	l1792
  1230                           
  1231                           ;ver0.0_20140727.c: 151: if(0xDD!=getch()){
  1232  00F3  3182  22E0  3180   	fcall	_getch
  1233  00F6  3ADD               	xorlw	221
  1234  00F7  1903               	skipnz
  1235  00F8  2916               	goto	l1792
  1236                           
  1237                           ;ver0.0_20140727.c: 152: i=16;
  1238  00F9  3010               	movlw	16
  1239  00FA  0020               	movlb	0	; select bank0
  1240  00FB  00DA               	movwf	??_main
  1241  00FC  085A               	movf	??_main,w
  1242  00FD  00DF               	movwf	main@i
  1243                           
  1244                           ;ver0.0_20140727.c: 153: j=3;
  1245  00FE  3003               	movlw	3
  1246  00FF  00DA               	movwf	??_main
  1247  0100  085A               	movf	??_main,w
  1248  0101  00DE               	movwf	main@j
  1249                           
  1250                           ;ver0.0_20140727.c: 157: }
  1251                           ;ver0.0_20140727.c: 158: }
  1252                           
  1253                           ;ver0.0_20140727.c: 154: }
  1254                           ;ver0.0_20140727.c: 155: }else{
  1255  0102  2916               	goto	l1792
  1256  0103                     l1790:	
  1257                           
  1258                           ;ver0.0_20140727.c: 159: else
  1259                           ;ver0.0_20140727.c: 160: stoc[i][j]=stoclocal;
  1260  0103  085D               	movf	main@stoclocal,w
  1261  0104  00DA               	movwf	??_main
  1262  0105  3003               	movlw	3
  1263  0106  00DB               	movwf	??_main+1
  1264  0107  085B               	movf	??_main+1,w
  1265  0108  00F6               	movwf	___bmul@multiplicand
  1266  0109  085F               	movf	main@i,w
  1267  010A  3182  22A6  3180   	fcall	___bmul
  1268  010D  3EA0               	addlw	_stoc& (0+255)
  1269  010E  0020               	movlb	0	; select bank0
  1270  010F  075E               	addwf	main@j,w
  1271  0110  00DC               	movwf	??_main+2
  1272  0111  085C               	movf	??_main+2,w
  1273  0112  0086               	movwf	6
  1274  0113  0187               	clrf	7
  1275  0114  085A               	movf	??_main,w
  1276  0115  0081               	movwf	1
  1277  0116                     l1792:	
  1278  0116  3001               	movlw	1
  1279  0117  0020               	movlb	0	; select bank0
  1280  0118  00DA               	movwf	??_main
  1281  0119  085A               	movf	??_main,w
  1282  011A  07DE               	addwf	main@j,f
  1283  011B  3003               	movlw	3
  1284  011C  025E               	subwf	main@j,w
  1285  011D  1C03               	skipc
  1286  011E  28BD               	goto	l1778
  1287  011F                     l1796:	
  1288  011F  3001               	movlw	1
  1289  0120  00DA               	movwf	??_main
  1290  0121  085A               	movf	??_main,w
  1291  0122  07DF               	addwf	main@i,f
  1292  0123  3010               	movlw	16
  1293  0124  025F               	subwf	main@i,w
  1294  0125  1C03               	skipc
  1295  0126  28B8               	goto	l1772
  1296  0127                     l1800:	
  1297                           
  1298                           ;ver0.0_20140727.c: 161: }
  1299                           ;ver0.0_20140727.c: 162: }
  1300                           ;ver0.0_20140727.c: 163: if(i>16);
  1301  0127  3011               	movlw	17
  1302  0128  025F               	subwf	main@i,w
  1303  0129  1803               	btfsc	3,0
  1304  012A  28AF               	goto	l1764
  1305                           
  1306                           ;ver0.0_20140727.c: 164: else{
  1307                           ;ver0.0_20140727.c: 165: if(0x0D==getch()){
  1308  012B  3182  22E0  3180   	fcall	_getch
  1309  012E  3A0D               	xorlw	13
  1310  012F  1D03               	skipz
  1311  0130  28AF               	goto	l1764
  1312                           
  1313                           ;ver0.0_20140727.c: 166: if(0x0A==getch()){
  1314  0131  3182  22E0  3180   	fcall	_getch
  1315  0134  3A0A               	xorlw	10
  1316  0135  1D03               	skipz
  1317  0136  28AF               	goto	l1764
  1318                           
  1319                           ;ver0.0_20140727.c: 167: if(0xDD!=getch())
  1320  0137  3182  22E0  3180   	fcall	_getch
  1321  013A  3ADD               	xorlw	221
  1322  013B  1903               	skipnz
  1323  013C  28AF               	goto	l1764
  1324                           
  1325                           ;ver0.0_20140727.c: 168: setdata();
  1326  013D  3181  2141  3180   	fcall	_setdata
  1327  0140  28AF               	goto	l1764
  1328  0141                     __end_of_main:	
  1329                           
  1330                           	psect	swtext1
  1331  02B8                     __pswtext1:	
  1332  02B8                     S1848:	
  1333  02B8  3180  287C         	ljmp	l266
  1334  02BA  3180  287E         	ljmp	l268
  1335  02BC  3180  2880         	ljmp	l269
  1336  02BE  3180  2882         	ljmp	l270
  1337  02C0  3180  2884         	ljmp	l271
  1338  02C2  3180  2886         	ljmp	l272
  1339  02C4  3180  2888         	ljmp	l273
  1340  02C6  3180  288A         	ljmp	l274
  1341                           
  1342                           	psect	text1
  1343  0275                     __ptext1:	
  1344 ;; *************** function _waitstart *****************
  1345 ;; Defined at:
  1346 ;;		line 196 in file "ver0.0_20140727.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  ch              1    6[COMMON] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;		None               void
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;Total ram usage:        1 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    4
  1367 ;; This function calls:
  1368 ;;		_getch
  1369 ;; This function is called by:
  1370 ;;		_main
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           
  1375                           ;psect for function _waitstart
  1376  0275                     _waitstart:	
  1377                           
  1378                           ;ver0.0_20140727.c: 197: char ch=1;
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _waitstart: [wreg+status,2+status,0+pclath+cstack]
  1382  0275  01F6               	clrf	waitstart@ch
  1383  0276  0AF6               	incf	waitstart@ch,f
  1384  0277                     l1362:	
  1385                           ;ver0.0_20140727.c: 199: while(getch()==0xFF);
  1386                           
  1387                           ;ver0.0_20140727.c: 198: do{
  1388                           
  1389  0277  3182  22E0  3182   	fcall	_getch
  1390  027A  3AFF               	xorlw	255
  1391  027B  1903               	skipnz
  1392  027C  2A77               	goto	l1362
  1393                           
  1394                           ;ver0.0_20140727.c: 200: if(0x53==getch()){
  1395  027D  3182  22E0  3182   	fcall	_getch
  1396  0280  3A53               	xorlw	83
  1397  0281  1D03               	skipz
  1398  0282  2A8A               	goto	l1370
  1399                           
  1400                           ;ver0.0_20140727.c: 201: if(0x54==getch())
  1401  0283  3182  22E0  3182   	fcall	_getch
  1402  0286  3A54               	xorlw	84
  1403  0287  1D03               	skipz
  1404  0288  2A8A               	goto	l1370
  1405                           
  1406                           ;ver0.0_20140727.c: 202: ch=0;
  1407  0289  01F6               	clrf	waitstart@ch
  1408  028A                     l1370:	
  1409                           
  1410                           ;ver0.0_20140727.c: 203: }
  1411                           ;ver0.0_20140727.c: 204: }while(ch);
  1412  028A  08F6               	movf	waitstart@ch,f
  1413  028B  1903               	btfsc	3,2
  1414  028C  0008               	return
  1415  028D  2A77               	goto	l1362
  1416  028E                     __end_of_waitstart:	
  1417                           
  1418                           	psect	text2
  1419  02E0                     __ptext2:	
  1420 ;; *************** function _getch *****************
  1421 ;; Defined at:
  1422 ;;		line 9 in file "uart.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      unsigned char 
  1429 ;; Registers used:
  1430 ;;		wreg
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;;		_waitstart
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _getch
  1453  02E0                     _getch:	
  1454  02E0                     l340:	
  1455                           ;uart.c: 10: while(!RCIF){}
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _getch: [wreg]
  1459                           
  1460  02E0  0020               	movlb	0	; select bank0
  1461  02E1  1E91               	btfss	17,5	;volatile
  1462  02E2  2AE0               	goto	l340
  1463                           
  1464                           ;uart.c: 11: RCIF=0;
  1465  02E3  1291               	bcf	17,5	;volatile
  1466                           
  1467                           ;uart.c: 12: return RCREG;
  1468  02E4  0023               	movlb	3	; select bank3
  1469  02E5  0819               	movf	25,w	;volatile
  1470  02E6  0008               	return
  1471  02E7                     __end_of_getch:	
  1472                           
  1473                           	psect	text3
  1474  028E                     __ptext3:	
  1475 ;; *************** function _setpin *****************
  1476 ;; Defined at:
  1477 ;;		line 62 in file "sorce.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;		None               void
  1484 ;; Registers used:
  1485 ;;		wreg, status,2
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    3
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _setpin
  1507  028E                     _setpin:	
  1508                           
  1509                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _setpin: [wreg+status,2]
  1513  028E  3070               	movlw	112
  1514  028F  0021               	movlb	1	; select bank1
  1515  0290  0099               	movwf	25	;volatile
  1516                           
  1517                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1518  0291  0023               	movlb	3	; select bank3
  1519  0292  018C               	clrf	12	;volatile
  1520                           
  1521                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1522  0293  018D               	clrf	13	;volatile
  1523                           
  1524                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1525  0294  018F               	clrf	15	;volatile
  1526                           
  1527                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1528  0295  0190               	clrf	16	;volatile
  1529                           
  1530                           ;sorce.c: 68: TRISA = 0b00000000 ;
  1531  0296  0021               	movlb	1	; select bank1
  1532  0297  018C               	clrf	12	;volatile
  1533                           
  1534                           ;sorce.c: 69: TRISB = 0b00000000 ;
  1535  0298  018D               	clrf	13	;volatile
  1536                           
  1537                           ;sorce.c: 70: TRISC = 0b10110000 ;
  1538  0299  30B0               	movlw	176
  1539  029A  008E               	movwf	14	;volatile
  1540                           
  1541                           ;sorce.c: 71: TRISD = 0b00111100 ;
  1542  029B  303C               	movlw	60
  1543  029C  008F               	movwf	15	;volatile
  1544                           
  1545                           ;sorce.c: 72: TRISE = 0X00 ;
  1546  029D  0190               	clrf	16	;volatile
  1547                           
  1548                           ;sorce.c: 74: PORTA = 0b00000000 ;
  1549  029E  0020               	movlb	0	; select bank0
  1550  029F  018C               	clrf	12	;volatile
  1551                           
  1552                           ;sorce.c: 75: PORTB = 0b00000000 ;
  1553  02A0  018D               	clrf	13	;volatile
  1554                           
  1555                           ;sorce.c: 76: PORTC = 0b10000000 ;
  1556  02A1  3080               	movlw	128
  1557  02A2  008E               	movwf	14	;volatile
  1558                           
  1559                           ;sorce.c: 77: PORTD = 0b00000000 ;
  1560  02A3  018F               	clrf	15	;volatile
  1561                           
  1562                           ;sorce.c: 78: PORTE=0x00;
  1563  02A4  0190               	clrf	16	;volatile
  1564  02A5  0008               	return
  1565  02A6                     __end_of_setpin:	
  1566                           
  1567                           	psect	text4
  1568  0141                     __ptext4:	
  1569 ;; *************** function _setdata *****************
  1570 ;; Defined at:
  1571 ;;		line 189 in file "ver0.0_20140727.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  j               1    9[BANK0 ] unsigned char 
  1576 ;;  i               1    8[BANK0 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1588 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1590 ;;Total ram usage:        7 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		___bmul
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _setdata
  1602  0141                     _setdata:	
  1603                           
  1604                           ;ver0.0_20140727.c: 190: char i,j;
  1605                           ;ver0.0_20140727.c: 191: for(i=0;i<16;i++){
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _setdata: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1609  0141  0020               	movlb	0	; select bank0
  1610  0142  01D8               	clrf	setdata@i
  1611  0143                     L1:	
  1612  0143  3010               	movlw	16
  1613  0144  0258               	subwf	setdata@i,w
  1614  0145  1803               	btfsc	3,0
  1615  0146  0008               	return
  1616                           
  1617                           ;ver0.0_20140727.c: 192: for(j=0;j<3;j++)
  1618  0147  01D9               	clrf	setdata@j
  1619  0148  3003               	movlw	3
  1620  0149  0259               	subwf	setdata@j,w
  1621  014A  1803               	btfsc	3,0
  1622  014B  2976               	goto	l1656
  1623  014C                     l1650:	
  1624                           
  1625                           ;ver0.0_20140727.c: 193: led[i][j]=stoc[i][j];
  1626  014C  3003               	movlw	3
  1627  014D  00D3               	movwf	??_setdata
  1628  014E  0853               	movf	??_setdata,w
  1629  014F  00F6               	movwf	___bmul@multiplicand
  1630  0150  0858               	movf	setdata@i,w
  1631  0151  3182  22A6  3181   	fcall	___bmul
  1632  0154  3EA0               	addlw	_stoc& (0+255)
  1633  0155  0020               	movlb	0	; select bank0
  1634  0156  0759               	addwf	setdata@j,w
  1635  0157  00D4               	movwf	??_setdata+1
  1636  0158  0854               	movf	??_setdata+1,w
  1637  0159  0086               	movwf	6
  1638  015A  0187               	clrf	7
  1639  015B  0801               	movf	1,w
  1640  015C  00D5               	movwf	??_setdata+2
  1641  015D  3003               	movlw	3
  1642  015E  00D6               	movwf	??_setdata+3
  1643  015F  0856               	movf	??_setdata+3,w
  1644  0160  00F6               	movwf	___bmul@multiplicand
  1645  0161  0858               	movf	setdata@i,w
  1646  0162  3182  22A6  3181   	fcall	___bmul
  1647  0165  3E20               	addlw	_led& (0+255)
  1648  0166  0020               	movlb	0	; select bank0
  1649  0167  0759               	addwf	setdata@j,w
  1650  0168  00D7               	movwf	??_setdata+4
  1651  0169  0857               	movf	??_setdata+4,w
  1652  016A  0086               	movwf	6
  1653  016B  0187               	clrf	7
  1654  016C  0855               	movf	??_setdata+2,w
  1655  016D  0081               	movwf	1
  1656  016E  3001               	movlw	1
  1657  016F  00D3               	movwf	??_setdata
  1658  0170  0853               	movf	??_setdata,w
  1659  0171  07D9               	addwf	setdata@j,f
  1660  0172  3003               	movlw	3
  1661  0173  0259               	subwf	setdata@j,w
  1662  0174  1C03               	skipc
  1663  0175  294C               	goto	l1650
  1664  0176                     l1656:	
  1665  0176  3001               	movlw	1
  1666  0177  00D3               	movwf	??_setdata
  1667  0178  0853               	movf	??_setdata,w
  1668  0179  07D8               	addwf	setdata@i,f
  1669  017A  2943               	goto	L1
  1670  017B                     __end_of_setdata:	
  1671                           
  1672                           	psect	text5
  1673  02A6                     __ptext5:	
  1674 ;; *************** function ___bmul *****************
  1675 ;; Defined at:
  1676 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul8.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  multiplier      1    wreg     unsigned char 
  1679 ;;  multiplicand    1    6[COMMON] unsigned char 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1682 ;;  product         1    1[BANK0 ] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:        4 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    3
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;;		_setdata
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function ___bmul
  1709  02A6                     ___bmul:	
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1713                           ;___bmul@multiplier stored from wreg
  1714  02A6  0020               	movlb	0	; select bank0
  1715  02A7  00D2               	movwf	___bmul@multiplier
  1716  02A8  01D1               	clrf	___bmul@product
  1717  02A9                     l1604:	
  1718  02A9  1C52               	btfss	___bmul@multiplier,0
  1719  02AA  2AAF               	goto	l1608
  1720  02AB  0876               	movf	___bmul@multiplicand,w
  1721  02AC  00D0               	movwf	??___bmul
  1722  02AD  0850               	movf	??___bmul,w
  1723  02AE  07D1               	addwf	___bmul@product,f
  1724  02AF                     l1608:	
  1725  02AF  1003               	clrc
  1726  02B0  0DF6               	rlf	___bmul@multiplicand,f
  1727  02B1  1003               	clrc
  1728  02B2  0CD2               	rrf	___bmul@multiplier,f
  1729  02B3  08D2               	movf	___bmul@multiplier,f
  1730  02B4  1D03               	skipz
  1731  02B5  2AA9               	goto	l1604
  1732  02B6  0851               	movf	___bmul@product,w
  1733  02B7  0008               	return
  1734  02B8                     __end_of___bmul:	
  1735                           
  1736                           	psect	text6
  1737  0247                     __ptext6:	
  1738 ;; *************** function _countup *****************
  1739 ;; Defined at:
  1740 ;;		line 174 in file "ver0.0_20140727.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  i               1    wreg     PTR unsigned char 
  1743 ;;		 -> main@i(1), 
  1744 ;;  j               1    0[BANK0 ] PTR unsigned char 
  1745 ;;		 -> main@j(1), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  i               1    2[BANK0 ] PTR unsigned char 
  1748 ;;		 -> main@i(1), 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2    0[BANK0 ] int 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;Total ram usage:        4 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _countup
  1774  0247                     _countup:	
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _countup: [wreg+fsr1l+fsr1h+status,2+status,0]
  1778                           ;countup@i stored from wreg
  1779  0247  0020               	movlb	0	; select bank0
  1780  0248  00D2               	movwf	countup@i
  1781                           
  1782                           ;ver0.0_20140727.c: 175: if(*j<3-1)
  1783  0249  0850               	movf	countup@j,w
  1784  024A  0086               	movwf	6
  1785  024B  0187               	clrf	7
  1786  024C  3002               	movlw	2
  1787  024D  0201               	subwf	1,w
  1788  024E  1803               	skipnc
  1789  024F  2A55               	goto	l1622
  1790                           
  1791                           ;ver0.0_20140727.c: 176: *j++;
  1792  0250  3001               	movlw	1
  1793  0251  00F6               	movwf	??_countup
  1794  0252  0876               	movf	??_countup,w
  1795  0253  07D0               	addwf	countup@j,f
  1796  0254  2A72               	goto	l1634
  1797  0255                     l1622:	
  1798                           
  1799                           ;ver0.0_20140727.c: 177: else{
  1800                           ;ver0.0_20140727.c: 178: if(*i<16-1){
  1801  0255  0852               	movf	countup@i,w
  1802  0256  0086               	movwf	6
  1803  0257  0187               	clrf	7
  1804  0258  300F               	movlw	15
  1805  0259  0201               	subwf	1,w
  1806  025A  1803               	skipnc
  1807  025B  2A65               	goto	l1628
  1808                           
  1809                           ;ver0.0_20140727.c: 179: *j=0;
  1810  025C  0850               	movf	countup@j,w
  1811  025D  0086               	movwf	6
  1812  025E  0187               	clrf	7
  1813  025F  0181               	clrf	1
  1814                           
  1815                           ;ver0.0_20140727.c: 180: *i++;
  1816  0260  3001               	movlw	1
  1817  0261  00F6               	movwf	??_countup
  1818  0262  0876               	movf	??_countup,w
  1819  0263  07D2               	addwf	countup@i,f
  1820                           
  1821                           ;ver0.0_20140727.c: 181: }else{
  1822  0264  2A72               	goto	l1634
  1823  0265                     l1628:	
  1824                           
  1825                           ;ver0.0_20140727.c: 182: *j++;
  1826  0265  3001               	movlw	1
  1827  0266  00F6               	movwf	??_countup
  1828  0267  0876               	movf	??_countup,w
  1829  0268  07D0               	addwf	countup@j,f
  1830                           
  1831                           ;ver0.0_20140727.c: 183: *i++;
  1832  0269  3001               	movlw	1
  1833  026A  00F6               	movwf	??_countup
  1834  026B  0876               	movf	??_countup,w
  1835  026C  07D2               	addwf	countup@i,f
  1836                           
  1837                           ;ver0.0_20140727.c: 184: return 1;
  1838  026D  3001               	movlw	1
  1839  026E  00D0               	movwf	?_countup
  1840  026F  3000               	movlw	0
  1841  0270  00D1               	movwf	?_countup+1
  1842  0271  0008               	return
  1843  0272                     l1634:	
  1844                           
  1845                           ;ver0.0_20140727.c: 185: }
  1846                           ;ver0.0_20140727.c: 186: }
  1847                           ;ver0.0_20140727.c: 187: return 0;
  1848  0272  01D0               	clrf	?_countup
  1849  0273  01D1               	clrf	?_countup+1
  1850  0274  0008               	return
  1851  0275                     __end_of_countup:	
  1852                           
  1853                           	psect	intentry
  1854  0004                     __pintentry:	
  1855 ;; *************** function _InterTimer *****************
  1856 ;; Defined at:
  1857 ;;		line 39 in file "ver0.0_20140727.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;		None               void
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1875 ;;Total ram usage:        2 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    2
  1878 ;; This function calls:
  1879 ;;		_changeLED
  1880 ;;		_putch
  1881 ;; This function is called by:
  1882 ;;		Interrupt level 1
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886  0004                     _InterTimer:	
  1887                           
  1888                           ;incstack = 0
  1889                           ; Regs used in _InterTimer: [wreg+status,2+status,0+pclath+cstack]
  1890  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1891  0005  3180               	pagesel	$
  1892  0006  0020               	movlb	0	; select bank0
  1893  0007  087F               	movf	127,w
  1894  0008  00F5               	movwf	??_InterTimer+1
  1895                           
  1896                           ;ver0.0_20140727.c: 41: if (TMR0IF == 1) {
  1897  0009  1D0B               	btfss	11,2	;volatile
  1898  000A  2818               	goto	i1l258
  1899                           
  1900                           ;ver0.0_20140727.c: 42: TMR0 = 61 ;
  1901  000B  303D               	movlw	61
  1902  000C  0095               	movwf	21	;volatile
  1903                           
  1904                           ;ver0.0_20140727.c: 43: time++ ;
  1905  000D  3001               	movlw	1
  1906  000E  00F4               	movwf	??_InterTimer
  1907  000F  0874               	movf	??_InterTimer,w
  1908  0010  07F7               	addwf	_time,f
  1909                           
  1910                           ;ver0.0_20140727.c: 44: changeLED();
  1911  0011  3182  22C8  3180   	fcall	_changeLED
  1912                           
  1913                           ;ver0.0_20140727.c: 45: putch(0x09);
  1914  0014  3009               	movlw	9
  1915  0015  3182  22E7         	fcall	_putch
  1916                           
  1917                           ;ver0.0_20140727.c: 46: TMR0IF = 0 ;
  1918  0017  110B               	bcf	11,2	;volatile
  1919  0018                     i1l258:	
  1920  0018  0875               	movf	??_InterTimer+1,w
  1921  0019  0020               	movlb	0	; select bank0
  1922  001A  00FF               	movwf	127
  1923  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  1924  001C  0009               	retfie
  1925  001D                     __end_of_InterTimer:	
  1926                           
  1927                           	psect	text8
  1928  02E7                     __ptext8:	
  1929 ;; *************** function _putch *****************
  1930 ;; Defined at:
  1931 ;;		line 4 in file "uart.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  Data            1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  Data            1    0[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_InterTimer
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _putch
  1960  02E7                     _putch:	
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _putch: [wreg]
  1964                           ;putch@Data stored from wreg
  1965  02E7  00F0               	movwf	putch@Data
  1966  02E8                     i1l334:	
  1967                           ;uart.c: 5: while(!TRMT){}
  1968                           
  1969  02E8  0023               	movlb	3	; select bank3
  1970  02E9  1C9E               	btfss	30,1	;volatile
  1971  02EA  2AE8               	goto	i1l334
  1972                           
  1973                           ;uart.c: 6: TXREG = Data;
  1974  02EB  0870               	movf	putch@Data,w
  1975  02EC  009A               	movwf	26	;volatile
  1976  02ED  0008               	return
  1977  02EE                     __end_of_putch:	
  1978                           
  1979                           	psect	text9
  1980  02C8                     __ptext9:	
  1981 ;; *************** function _changeLED *****************
  1982 ;; Defined at:
  1983 ;;		line 23 in file "ver0.0_20140727.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;		None               void
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    1
  2004 ;; This function calls:
  2005 ;;		_no0
  2006 ;;		_no1
  2007 ;;		_no2
  2008 ;;		_no3
  2009 ;;		_noxinit
  2010 ;; This function is called by:
  2011 ;;		_InterTimer
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _changeLED
  2017  02C8                     _changeLED:	
  2018                           
  2019                           ;ver0.0_20140727.c: 24: if(time==0)
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _changeLED: [wreg+status,2+status,0+pclath+cstack]
  2023  02C8  08F7               	movf	_time,f
  2024  02C9  1D03               	skipz
  2025  02CA  2ACE               	goto	i1l1050
  2026                           
  2027                           ;ver0.0_20140727.c: 25: noxinit();
  2028  02CB  3182  22D8         	fcall	_noxinit
  2029  02CD  0008               	return
  2030  02CE                     i1l1050:	
  2031                           ;ver0.0_20140727.c: 26: else if(0==0)
  2032                           
  2033                           
  2034                           ;ver0.0_20140727.c: 27: no0(time);
  2035  02CE  0877               	movf	_time,w
  2036  02CF  00F2               	movwf	??_changeLED
  2037  02D0  01F3               	clrf	??_changeLED+1
  2038  02D1  0872               	movf	??_changeLED,w
  2039  02D2  00F0               	movwf	?_no0
  2040  02D3  0873               	movf	??_changeLED+1,w
  2041  02D4  00F1               	movwf	?_no0+1
  2042  02D5  3182  2214         	fcall	_no0
  2043                           
  2044                           ;ver0.0_20140727.c: 28: else if(0==1)
  2045  02D7  0008               	return
  2046  02D8                     __end_of_changeLED:	
  2047                           ;ver0.0_20140727.c: 33: no3(time);
  2048                           
  2049                           ;ver0.0_20140727.c: 32: else if(0==3)
  2050                           
  2051                           ;ver0.0_20140727.c: 31: no2(time);
  2052                           
  2053                           ;ver0.0_20140727.c: 30: else if(0==2)
  2054                           
  2055                           ;ver0.0_20140727.c: 29: no1(time);
  2056                           
  2057                           
  2058                           	psect	text10
  2059  02D8                     __ptext10:	
  2060 ;; *************** function _noxinit *****************
  2061 ;; Defined at:
  2062 ;;		line 55 in file "sorce.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		wreg
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_changeLED
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _noxinit
  2091  02D8                     _noxinit:	
  2092                           
  2093                           ;sorce.c: 56: PORTA=0xFF;
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in _noxinit: [wreg]
  2097  02D8  30FF               	movlw	255
  2098  02D9  0020               	movlb	0	; select bank0
  2099  02DA  008C               	movwf	12	;volatile
  2100                           
  2101                           ;sorce.c: 57: RC2=1;
  2102  02DB  150E               	bsf	14,2	;volatile
  2103                           
  2104                           ;sorce.c: 58: RC1=1;
  2105  02DC  148E               	bsf	14,1	;volatile
  2106                           
  2107                           ;sorce.c: 59: RC3=1;
  2108  02DD  158E               	bsf	14,3	;volatile
  2109                           
  2110                           ;sorce.c: 60: RC0=1;
  2111  02DE  140E               	bsf	14,0	;volatile
  2112  02DF  0008               	return
  2113  02E0                     __end_of_noxinit:	
  2114                           
  2115                           	psect	text11
  2116  017B                     __ptext11:	
  2117 ;; *************** function _no3 *****************
  2118 ;; Defined at:
  2119 ;;		line 42 in file "sorce.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;		None               void
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_changeLED
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _no3
  2148  017B                     _no3:	
  2149                           
  2150                           ;sorce.c: 43: if(led[12][0]<time) RA2=0;
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _no3: [wreg]
  2154  017B  0877               	movf	_time,w
  2155  017C  0020               	movlb	0	; select bank0
  2156  017D  0244               	subwf	_led+36,w
  2157  017E  1C03               	btfss	3,0
  2158  017F  110C               	bcf	12,2	;volatile
  2159                           
  2160                           ;sorce.c: 44: if(led[12][1]<time) RA0=0;
  2161  0180  0877               	movf	_time,w
  2162  0181  0245               	subwf	_led+37,w
  2163  0182  1C03               	btfss	3,0
  2164  0183  100C               	bcf	12,0	;volatile
  2165                           
  2166                           ;sorce.c: 45: if(led[12][2]<time) RA3=0;
  2167  0184  0877               	movf	_time,w
  2168  0185  0246               	subwf	_led+38,w
  2169  0186  1C03               	btfss	3,0
  2170  0187  118C               	bcf	12,3	;volatile
  2171                           
  2172                           ;sorce.c: 46: if(led[13][0]<time) RA1=0;
  2173  0188  0877               	movf	_time,w
  2174  0189  0247               	subwf	_led+39,w
  2175  018A  1C03               	btfss	3,0
  2176  018B  108C               	bcf	12,1	;volatile
  2177                           
  2178                           ;sorce.c: 47: if(led[13][1]<time) RA5=0;
  2179  018C  0877               	movf	_time,w
  2180  018D  0248               	subwf	_led+40,w
  2181  018E  1C03               	btfss	3,0
  2182  018F  128C               	bcf	12,5	;volatile
  2183                           
  2184                           ;sorce.c: 48: if(led[13][2]<time) RA4=0;
  2185  0190  0877               	movf	_time,w
  2186  0191  0249               	subwf	_led+41,w
  2187  0192  1C03               	btfss	3,0
  2188  0193  120C               	bcf	12,4	;volatile
  2189                           
  2190                           ;sorce.c: 49: if(led[14][0]<time) RC2=0;
  2191  0194  0877               	movf	_time,w
  2192  0195  024A               	subwf	_led+42,w
  2193  0196  1C03               	btfss	3,0
  2194  0197  110E               	bcf	14,2	;volatile
  2195                           
  2196                           ;sorce.c: 50: if(led[14][1]<time) RA7=0;
  2197  0198  0877               	movf	_time,w
  2198  0199  024B               	subwf	_led+43,w
  2199  019A  1C03               	btfss	3,0
  2200  019B  138C               	bcf	12,7	;volatile
  2201                           
  2202                           ;sorce.c: 51: if(led[14][2]<time) RA6=0;
  2203  019C  0877               	movf	_time,w
  2204  019D  024C               	subwf	_led+44,w
  2205  019E  1C03               	btfss	3,0
  2206  019F  130C               	bcf	12,6	;volatile
  2207                           
  2208                           ;sorce.c: 52: if(led[15][0]<time) RC1=0;
  2209  01A0  0877               	movf	_time,w
  2210  01A1  024D               	subwf	_led+45,w
  2211  01A2  1C03               	btfss	3,0
  2212  01A3  108E               	bcf	14,1	;volatile
  2213                           
  2214                           ;sorce.c: 53: if(led[15][1]<time) RC3=0;
  2215  01A4  0877               	movf	_time,w
  2216  01A5  024E               	subwf	_led+46,w
  2217  01A6  1C03               	btfss	3,0
  2218  01A7  118E               	bcf	14,3	;volatile
  2219                           
  2220                           ;sorce.c: 54: if(led[15][2]<time) RC0=0;
  2221  01A8  0877               	movf	_time,w
  2222  01A9  024F               	subwf	_led+47,w
  2223  01AA  1803               	skipnc
  2224  01AB  0008               	return
  2225  01AC  100E               	bcf	14,0	;volatile
  2226  01AD  0008               	return
  2227  01AE                     __end_of_no3:	
  2228                           
  2229                           	psect	text12
  2230  01AE                     __ptext12:	
  2231 ;; *************** function _no2 *****************
  2232 ;; Defined at:
  2233 ;;		line 29 in file "sorce.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_changeLED
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _no2
  2262  01AE                     _no2:	
  2263                           
  2264                           ;sorce.c: 30: if(led[8][0]<time) RA2=0;
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in _no2: [wreg]
  2268  01AE  0877               	movf	_time,w
  2269  01AF  0020               	movlb	0	; select bank0
  2270  01B0  0238               	subwf	_led+24,w
  2271  01B1  1C03               	btfss	3,0
  2272  01B2  110C               	bcf	12,2	;volatile
  2273                           
  2274                           ;sorce.c: 31: if(led[8][1]<time) RA0=0;
  2275  01B3  0877               	movf	_time,w
  2276  01B4  0239               	subwf	_led+25,w
  2277  01B5  1C03               	btfss	3,0
  2278  01B6  100C               	bcf	12,0	;volatile
  2279                           
  2280                           ;sorce.c: 32: if(led[8][2]<time) RA3=0;
  2281  01B7  0877               	movf	_time,w
  2282  01B8  023A               	subwf	_led+26,w
  2283  01B9  1C03               	btfss	3,0
  2284  01BA  118C               	bcf	12,3	;volatile
  2285                           
  2286                           ;sorce.c: 33: if(led[9][0]<time) RA1=0;
  2287  01BB  0877               	movf	_time,w
  2288  01BC  023B               	subwf	_led+27,w
  2289  01BD  1C03               	btfss	3,0
  2290  01BE  108C               	bcf	12,1	;volatile
  2291                           
  2292                           ;sorce.c: 34: if(led[9][1]<time) RA5=0;
  2293  01BF  0877               	movf	_time,w
  2294  01C0  023C               	subwf	_led+28,w
  2295  01C1  1C03               	btfss	3,0
  2296  01C2  128C               	bcf	12,5	;volatile
  2297                           
  2298                           ;sorce.c: 35: if(led[9][2]<time) RA4=0;
  2299  01C3  0877               	movf	_time,w
  2300  01C4  023D               	subwf	_led+29,w
  2301  01C5  1C03               	btfss	3,0
  2302  01C6  120C               	bcf	12,4	;volatile
  2303                           
  2304                           ;sorce.c: 36: if(led[10][0]<time) RC2=0;
  2305  01C7  0877               	movf	_time,w
  2306  01C8  023E               	subwf	_led+30,w
  2307  01C9  1C03               	btfss	3,0
  2308  01CA  110E               	bcf	14,2	;volatile
  2309                           
  2310                           ;sorce.c: 37: if(led[10][1]<time) RA7=0;
  2311  01CB  0877               	movf	_time,w
  2312  01CC  023F               	subwf	_led+31,w
  2313  01CD  1C03               	btfss	3,0
  2314  01CE  138C               	bcf	12,7	;volatile
  2315                           
  2316                           ;sorce.c: 38: if(led[10][2]<time) RA6=0;
  2317  01CF  0877               	movf	_time,w
  2318  01D0  0240               	subwf	_led+32,w
  2319  01D1  1C03               	btfss	3,0
  2320  01D2  130C               	bcf	12,6	;volatile
  2321                           
  2322                           ;sorce.c: 39: if(led[11][0]<time) RC1=0;
  2323  01D3  0877               	movf	_time,w
  2324  01D4  0241               	subwf	_led+33,w
  2325  01D5  1C03               	btfss	3,0
  2326  01D6  108E               	bcf	14,1	;volatile
  2327                           
  2328                           ;sorce.c: 40: if(led[11][1]<time) RC3=0;
  2329  01D7  0877               	movf	_time,w
  2330  01D8  0242               	subwf	_led+34,w
  2331  01D9  1C03               	btfss	3,0
  2332  01DA  118E               	bcf	14,3	;volatile
  2333                           
  2334                           ;sorce.c: 41: if(led[11][2]<time) RC0=0;
  2335  01DB  0877               	movf	_time,w
  2336  01DC  0243               	subwf	_led+35,w
  2337  01DD  1803               	skipnc
  2338  01DE  0008               	return
  2339  01DF  100E               	bcf	14,0	;volatile
  2340  01E0  0008               	return
  2341  01E1                     __end_of_no2:	
  2342                           
  2343                           	psect	text13
  2344  01E1                     __ptext13:	
  2345 ;; *************** function _no1 *****************
  2346 ;; Defined at:
  2347 ;;		line 16 in file "sorce.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_changeLED
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _no1
  2376  01E1                     _no1:	
  2377                           
  2378                           ;sorce.c: 17: if(led[4][0]<time) RA2=0;
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _no1: [wreg]
  2382  01E1  0877               	movf	_time,w
  2383  01E2  0020               	movlb	0	; select bank0
  2384  01E3  022C               	subwf	_led+12,w
  2385  01E4  1C03               	btfss	3,0
  2386  01E5  110C               	bcf	12,2	;volatile
  2387                           
  2388                           ;sorce.c: 18: if(led[4][1]<time) RA0=0;
  2389  01E6  0877               	movf	_time,w
  2390  01E7  022D               	subwf	_led+13,w
  2391  01E8  1C03               	btfss	3,0
  2392  01E9  100C               	bcf	12,0	;volatile
  2393                           
  2394                           ;sorce.c: 19: if(led[4][2]<time) RA3=0;
  2395  01EA  0877               	movf	_time,w
  2396  01EB  022E               	subwf	_led+14,w
  2397  01EC  1C03               	btfss	3,0
  2398  01ED  118C               	bcf	12,3	;volatile
  2399                           
  2400                           ;sorce.c: 20: if(led[5][0]<time) RA1=0;
  2401  01EE  0877               	movf	_time,w
  2402  01EF  022F               	subwf	_led+15,w
  2403  01F0  1C03               	btfss	3,0
  2404  01F1  108C               	bcf	12,1	;volatile
  2405                           
  2406                           ;sorce.c: 21: if(led[5][1]<time) RA5=0;
  2407  01F2  0877               	movf	_time,w
  2408  01F3  0230               	subwf	_led+16,w
  2409  01F4  1C03               	btfss	3,0
  2410  01F5  128C               	bcf	12,5	;volatile
  2411                           
  2412                           ;sorce.c: 22: if(led[5][2]<time) RA4=0;
  2413  01F6  0877               	movf	_time,w
  2414  01F7  0231               	subwf	_led+17,w
  2415  01F8  1C03               	btfss	3,0
  2416  01F9  120C               	bcf	12,4	;volatile
  2417                           
  2418                           ;sorce.c: 23: if(led[6][0]<time) RC2=0;
  2419  01FA  0877               	movf	_time,w
  2420  01FB  0232               	subwf	_led+18,w
  2421  01FC  1C03               	btfss	3,0
  2422  01FD  110E               	bcf	14,2	;volatile
  2423                           
  2424                           ;sorce.c: 24: if(led[6][1]<time) RA7=0;
  2425  01FE  0877               	movf	_time,w
  2426  01FF  0233               	subwf	_led+19,w
  2427  0200  1C03               	btfss	3,0
  2428  0201  138C               	bcf	12,7	;volatile
  2429                           
  2430                           ;sorce.c: 25: if(led[6][2]<time) RA6=0;
  2431  0202  0877               	movf	_time,w
  2432  0203  0234               	subwf	_led+20,w
  2433  0204  1C03               	btfss	3,0
  2434  0205  130C               	bcf	12,6	;volatile
  2435                           
  2436                           ;sorce.c: 26: if(led[7][0]<time) RC1=0;
  2437  0206  0877               	movf	_time,w
  2438  0207  0235               	subwf	_led+21,w
  2439  0208  1C03               	btfss	3,0
  2440  0209  108E               	bcf	14,1	;volatile
  2441                           
  2442                           ;sorce.c: 27: if(led[7][1]<time) RC3=0;
  2443  020A  0877               	movf	_time,w
  2444  020B  0236               	subwf	_led+22,w
  2445  020C  1C03               	btfss	3,0
  2446  020D  118E               	bcf	14,3	;volatile
  2447                           
  2448                           ;sorce.c: 28: if(led[7][2]<time) RC0=0;
  2449  020E  0877               	movf	_time,w
  2450  020F  0237               	subwf	_led+23,w
  2451  0210  1803               	skipnc
  2452  0211  0008               	return
  2453  0212  100E               	bcf	14,0	;volatile
  2454  0213  0008               	return
  2455  0214                     __end_of_no1:	
  2456                           
  2457                           	psect	text14
  2458  0214                     __ptext14:	
  2459 ;; *************** function _no0 *****************
  2460 ;; Defined at:
  2461 ;;		line 3 in file "sorce.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_changeLED
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _no0
  2490  0214                     _no0:	
  2491                           
  2492                           ;sorce.c: 4: if(led[0][0]<time)RA2=0;
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _no0: [wreg]
  2496  0214  0877               	movf	_time,w
  2497  0215  0020               	movlb	0	; select bank0
  2498  0216  0220               	subwf	_led,w
  2499  0217  1C03               	btfss	3,0
  2500  0218  110C               	bcf	12,2	;volatile
  2501                           
  2502                           ;sorce.c: 5: if(led[0][1]<time) RA0=0;
  2503  0219  0877               	movf	_time,w
  2504  021A  0221               	subwf	_led+1,w
  2505  021B  1C03               	btfss	3,0
  2506  021C  100C               	bcf	12,0	;volatile
  2507                           
  2508                           ;sorce.c: 6: if(led[0][2]<time) RA3=0;
  2509  021D  0877               	movf	_time,w
  2510  021E  0222               	subwf	_led+2,w
  2511  021F  1C03               	btfss	3,0
  2512  0220  118C               	bcf	12,3	;volatile
  2513                           
  2514                           ;sorce.c: 7: if(led[1][0]<time) RA1=0;
  2515  0221  0877               	movf	_time,w
  2516  0222  0223               	subwf	_led+3,w
  2517  0223  1C03               	btfss	3,0
  2518  0224  108C               	bcf	12,1	;volatile
  2519                           
  2520                           ;sorce.c: 8: if(led[1][1]<time) RA5=0;
  2521  0225  0877               	movf	_time,w
  2522  0226  0224               	subwf	_led+4,w
  2523  0227  1C03               	btfss	3,0
  2524  0228  128C               	bcf	12,5	;volatile
  2525                           
  2526                           ;sorce.c: 9: if(led[1][2]<time) RA4=0;
  2527  0229  0877               	movf	_time,w
  2528  022A  0225               	subwf	_led+5,w
  2529  022B  1C03               	btfss	3,0
  2530  022C  120C               	bcf	12,4	;volatile
  2531                           
  2532                           ;sorce.c: 10: if(led[2][0]<time) RC2=0;
  2533  022D  0877               	movf	_time,w
  2534  022E  0226               	subwf	_led+6,w
  2535  022F  1C03               	btfss	3,0
  2536  0230  110E               	bcf	14,2	;volatile
  2537                           
  2538                           ;sorce.c: 11: if(led[2][1]<time) RA7=0;
  2539  0231  0877               	movf	_time,w
  2540  0232  0227               	subwf	_led+7,w
  2541  0233  1C03               	btfss	3,0
  2542  0234  138C               	bcf	12,7	;volatile
  2543                           
  2544                           ;sorce.c: 12: if(led[2][2]<time) RA6=0;
  2545  0235  0877               	movf	_time,w
  2546  0236  0228               	subwf	_led+8,w
  2547  0237  1C03               	btfss	3,0
  2548  0238  130C               	bcf	12,6	;volatile
  2549                           
  2550                           ;sorce.c: 13: if(led[3][0]<time) RC1=0;
  2551  0239  0877               	movf	_time,w
  2552  023A  0229               	subwf	_led+9,w
  2553  023B  1C03               	btfss	3,0
  2554  023C  108E               	bcf	14,1	;volatile
  2555                           
  2556                           ;sorce.c: 14: if(led[3][1]<time) RC3=0;
  2557  023D  0877               	movf	_time,w
  2558  023E  022A               	subwf	_led+10,w
  2559  023F  1C03               	btfss	3,0
  2560  0240  118E               	bcf	14,3	;volatile
  2561                           
  2562                           ;sorce.c: 15: if(led[3][2]<time) RC0=0;
  2563  0241  0877               	movf	_time,w
  2564  0242  022B               	subwf	_led+11,w
  2565  0243  1803               	skipnc
  2566  0244  0008               	return
  2567  0245  100E               	bcf	14,0	;volatile
  2568  0246  0008               	return
  2569  0247                     __end_of_no0:	
  2570  007E                     btemp	set	126	;btemp
  2571  007E                     pic14e$flags	set	126
  2572  007E                     wtemp	set	126
  2573  007E                     wtemp0	set	126
  2574  0080                     wtemp1	set	128
  2575  0082                     wtemp2	set	130
  2576  0084                     wtemp3	set	132
  2577  0086                     wtemp4	set	134
  2578  0088                     wtemp5	set	136
  2579  007F                     wtemp6	set	127
  2580  007E                     ttemp	set	126
  2581  007E                     ttemp0	set	126
  2582  0081                     ttemp1	set	129
  2583  0084                     ttemp2	set	132
  2584  0087                     ttemp3	set	135
  2585  007F                     ttemp4	set	127
  2586  007E                     ltemp	set	126
  2587  007E                     ltemp0	set	126
  2588  0082                     ltemp1	set	130
  2589  0086                     ltemp2	set	134
  2590  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     16      64
    BANK1            80      0      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    countup@i	PTR unsigned char  size(1) Largest target is 1
		 -> main@i(BANK0[1]), 

    countup@j	PTR unsigned char  size(1) Largest target is 1
		 -> main@j(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->_countup
    _main->_waitstart
    _setdata->___bmul

Critical Paths under _InterTimer in COMMON

    _InterTimer->_changeLED
    _changeLED->_no0
    _changeLED->_no1
    _changeLED->_no2
    _changeLED->_no3

Critical Paths under _main in BANK0

    _main->_setdata
    _setdata->___bmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0    1487
                                             10 BANK0      6     6      0
                             ___bmul
                            _countup
                              _getch
                            _setdata
                             _setpin
                          _waitstart
 ---------------------------------------------------------------------------------
 (1) _waitstart                                            1     1      0      24
                                              6 COMMON     1     1      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setdata                                              7     7      0     536
                                              3 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     276
                                              6 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _countup                                              4     2      2     200
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0      15
                                              4 COMMON     2     2      0
                          _changeLED
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _changeLED                                            2     2      0       0
                                              2 COMMON     2     2      0
                                _no0
                                _no1
                                _no2
                                _no3
                            _noxinit
 ---------------------------------------------------------------------------------
 (5) _noxinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _no3                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no2                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no1                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no0                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _countup
   _getch
   _setdata
     ___bmul
   _setpin
   _waitstart
     _getch

 _InterTimer (ROOT)
   _changeLED
     _no0
     _no1
     _no2
     _no3
     _noxinit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Aug 25 16:57:59 2014

                      pc 0002           ___bmul@product 0051              __CFG_CP$OFF 0000  
            __CFG_LVP$ON 0000                      l340 02E0                      l270 0082  
                    l262 0079                      l271 0084                      l272 0086  
                    l273 0088                      l274 008A                      l266 007C  
                    l275 009A                      l268 007E                      l269 0080  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RC0 0070                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RD0 0078                      _RC2 0072  
                    _RB4 006C                      _RA6 0066                      _RD1 0079  
                    _RC3 0073                      _RB5 006D                      _RA7 0067  
                    _RE0 0080                      _RC4 0074                      _RB6 006E  
                    _RE1 0081                      _RB7 006F                      _RE2 0082  
                    _RD6 007E             __CFG_CPD$OFF 0000                      _no0 0214  
                    _no1 01E1                      _no2 01AE                      _no3 017B  
                    _led 0020             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     S1848 02B8                     ?_no0 0070  
                   ?_no1 0070                     ?_no2 0070                     ?_no3 0070  
                   l1370 028A                     l1362 0277                     l1604 02A9  
                   l1622 0255                     l1608 02AF                     l1800 0127  
                   l1634 0272                     l1650 014C                     l1628 0265  
                   l1656 0176                     l1772 00B8                     l1764 00AF  
                   l1790 0103                     l1758 008D                     l1792 0116  
                   l1778 00BD                     l1796 011F                     _RCIF 008D  
                   _TMR0 0015                     _TRMT 0CF1                     _WPUB 020D  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 0033  
                   _time 0077                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     _stoc 00A0                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 001D  
                   ttemp 007E                     wtemp 007E        ___bmul@multiplier 0052  
                  ??_no0 0072                    ??_no1 0072                    ??_no2 0072  
                  ??_no3 0072            __CFG_PLLEN$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l334 02E8                    i1l258 0018  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _PORTE 0010                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TRISD 008F  
                  _TRISE 0090                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000          __end_of_countup 0275                    _getch 02E0  
                  _putch 02E7                    main@i 005F                    main@j 005E  
        __end_of_setdata 017B                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080          __end_of_noxinit 02E0  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 001F             __end_of_main 0141  
                 ??_main 005A               _InterTimer 0004                   ?_getch 0070  
                 _ANSELA 018C                   ?_putch 0070                   _ANSELB 018D  
                 _ANSELD 018F                   _ANSELE 0190                   i1l1050 02CE  
                 _OSCCON 0099                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISC6 0476                   _TRISC7 0477                   _nWPUEN 04AF  
                 ___bmul 02A6           __CFG_STVREN$ON 0000                   _setpin 028E  
              ??_countup 0076                ??_setdata 0053                ??_noxinit 0070  
          main@stoclocal 005D  __end_of__initialization 002F      ___bmul@multiplicand 0076  
         __pcstackCOMMON 0070       __size_of_changeLED 0010            __end_of_getch 02E7  
          __end_of_putch 02EE              ?_InterTimer 0070                  ??_getch 0076  
                ??_putch 0070               __pbssBANK0 0020               __pbssBANK1 00A0  
        __CFG_VCAPEN$OFF 0000               __pmaintext 0033                  ?___bmul 0076  
             __pintentry 0004                  _BAUDCON 019F                  ?_setpin 0070  
     __size_of_waitstart 0019        __end_of_changeLED 02D8      __size_of_InterTimer 0019  
        __size_of___bmul 0012                  __ptext0 0000                  __ptext1 0275  
                __ptext2 02E0                  __ptext3 028E                  __ptext4 0141  
                __ptext5 02A6                  __ptext6 0247                  __ptext8 02E7  
                __ptext9 02C8          __size_of_setpin 0018                  _countup 0247  
           __size_of_no0 0033             __size_of_no1 0033             __size_of_no2 0033  
           __size_of_no3 0033                  _setdata 0141                  _noxinit 02D8  
                clrloop0 02EF     end_of_initialization 002F        __end_of_waitstart 028E  
       __CFG_FOSC$INTOSC 0000              waitstart@ch 0076           __end_of___bmul 02B8  
           ??_InterTimer 0074           __end_of_setpin 02A6      start_initialization 001F  
            __end_of_no0 0247              __end_of_no1 0214              __end_of_no2 01E1  
            __end_of_no3 01AE       __end_of_InterTimer 001D                 ??___bmul 0050  
               ??_setpin 0076              __pbssCOMMON 0077                ___latbits 0003  
          __pcstackBANK0 0050                _changeLED 02C8                __pswtext1 02B8  
               ?_countup 0050                 ?_setdata 0070                 ?_noxinit 0070  
         __size_of_getch 0007           __size_of_putch 0007               ?_changeLED 0070  
              clear_ram0 02EE                _waitstart 0275               ?_waitstart 0070  
       __size_of_countup 002E                 __ptext10 02D8                 __ptext11 017B  
               __ptext12 01AE                 __ptext13 01E1                 __ptext14 0214  
       __size_of_setdata 003A         __size_of_noxinit 0008            __size_of_main 010E  
            ??_changeLED 0072                putch@Data 0070                 countup@i 0052  
               countup@j 0050              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000                 setdata@i 0058                 setdata@j 0059  
            ??_waitstart 0076               _OPTION_REG 0095  
