

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep  2 19:54:17 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x620,48
    24                           	dabs	1,0x5C6,42
    25                           	dabs	1,0x2396,0,_putdata
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000D                     	;# 
    41  000E                     	;# 
    42  000F                     	;# 
    43  0010                     	;# 
    44  0011                     	;# 
    45  0012                     	;# 
    46  0013                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0095                     	;# 
    67  0096                     	;# 
    68  0097                     	;# 
    69  0098                     	;# 
    70  0099                     	;# 
    71  009A                     	;# 
    72  009B                     	;# 
    73  009B                     	;# 
    74  009C                     	;# 
    75  009D                     	;# 
    76  009E                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  0110                     	;# 
    82  0111                     	;# 
    83  0112                     	;# 
    84  0113                     	;# 
    85  0114                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0117                     	;# 
    89  0118                     	;# 
    90  0119                     	;# 
    91  011A                     	;# 
    92  011B                     	;# 
    93  011D                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018F                     	;# 
    97  0190                     	;# 
    98  0191                     	;# 
    99  0191                     	;# 
   100  0192                     	;# 
   101  0193                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0199                     	;# 
   108  019A                     	;# 
   109  019B                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019C                     	;# 
   114  019C                     	;# 
   115  019D                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  020D                     	;# 
   119  0210                     	;# 
   120  0211                     	;# 
   121  0212                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0217                     	;# 
   128  0291                     	;# 
   129  0291                     	;# 
   130  0292                     	;# 
   131  0293                     	;# 
   132  0294                     	;# 
   133  0295                     	;# 
   134  0295                     	;# 
   135  0296                     	;# 
   136  0298                     	;# 
   137  0298                     	;# 
   138  0299                     	;# 
   139  029A                     	;# 
   140  029B                     	;# 
   141  029C                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  029F                     	;# 
   146  0311                     	;# 
   147  0311                     	;# 
   148  0312                     	;# 
   149  0313                     	;# 
   150  0314                     	;# 
   151  0315                     	;# 
   152  0315                     	;# 
   153  0316                     	;# 
   154  0318                     	;# 
   155  0318                     	;# 
   156  0319                     	;# 
   157  031A                     	;# 
   158  031C                     	;# 
   159  031C                     	;# 
   160  031D                     	;# 
   161  031E                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  0415                     	;# 
   166  0416                     	;# 
   167  0417                     	;# 
   168  041C                     	;# 
   169  041D                     	;# 
   170  041E                     	;# 
   171  0791                     	;# 
   172  0792                     	;# 
   173  0793                     	;# 
   174  0794                     	;# 
   175  0795                     	;# 
   176  0798                     	;# 
   177  0799                     	;# 
   178  079A                     	;# 
   179  07A0                     	;# 
   180  07A1                     	;# 
   181  07A2                     	;# 
   182  07A3                     	;# 
   183  07A4                     	;# 
   184  07A5                     	;# 
   185  07A6                     	;# 
   186  07A7                     	;# 
   187  07A8                     	;# 
   188  07A9                     	;# 
   189  07AA                     	;# 
   190  07AB                     	;# 
   191  0FE4                     	;# 
   192  0FE5                     	;# 
   193  0FE6                     	;# 
   194  0FE7                     	;# 
   195  0FE8                     	;# 
   196  0FE9                     	;# 
   197  0FEA                     	;# 
   198  0FEB                     	;# 
   199  0FED                     	;# 
   200  0FEE                     	;# 
   201  0FEF                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0110                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  011A                     	;# 
   267  011B                     	;# 
   268  011D                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  018F                     	;# 
   272  0190                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0199                     	;# 
   283  019A                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020D                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  029F                     	;# 
   321  0311                     	;# 
   322  0311                     	;# 
   323  0312                     	;# 
   324  0313                     	;# 
   325  0314                     	;# 
   326  0315                     	;# 
   327  0315                     	;# 
   328  0316                     	;# 
   329  0318                     	;# 
   330  0318                     	;# 
   331  0319                     	;# 
   332  031A                     	;# 
   333  031C                     	;# 
   334  031C                     	;# 
   335  031D                     	;# 
   336  031E                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0415                     	;# 
   341  0416                     	;# 
   342  0417                     	;# 
   343  041C                     	;# 
   344  041D                     	;# 
   345  041E                     	;# 
   346  0791                     	;# 
   347  0792                     	;# 
   348  0793                     	;# 
   349  0794                     	;# 
   350  0795                     	;# 
   351  0798                     	;# 
   352  0799                     	;# 
   353  079A                     	;# 
   354  07A0                     	;# 
   355  07A1                     	;# 
   356  07A2                     	;# 
   357  07A3                     	;# 
   358  07A4                     	;# 
   359  07A5                     	;# 
   360  07A6                     	;# 
   361  07A7                     	;# 
   362  07A8                     	;# 
   363  07A9                     	;# 
   364  07AA                     	;# 
   365  07AB                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  010C                     	;# 
   428  010D                     	;# 
   429  010E                     	;# 
   430  010F                     	;# 
   431  0110                     	;# 
   432  0111                     	;# 
   433  0112                     	;# 
   434  0113                     	;# 
   435  0114                     	;# 
   436  0115                     	;# 
   437  0116                     	;# 
   438  0117                     	;# 
   439  0118                     	;# 
   440  0119                     	;# 
   441  011A                     	;# 
   442  011B                     	;# 
   443  011D                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  018F                     	;# 
   447  0190                     	;# 
   448  0191                     	;# 
   449  0191                     	;# 
   450  0192                     	;# 
   451  0193                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0194                     	;# 
   455  0195                     	;# 
   456  0196                     	;# 
   457  0199                     	;# 
   458  019A                     	;# 
   459  019B                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019C                     	;# 
   464  019C                     	;# 
   465  019D                     	;# 
   466  019E                     	;# 
   467  019F                     	;# 
   468  020D                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0212                     	;# 
   472  0213                     	;# 
   473  0214                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0216                     	;# 
   477  0217                     	;# 
   478  0291                     	;# 
   479  0291                     	;# 
   480  0292                     	;# 
   481  0293                     	;# 
   482  0294                     	;# 
   483  0295                     	;# 
   484  0295                     	;# 
   485  0296                     	;# 
   486  0298                     	;# 
   487  0298                     	;# 
   488  0299                     	;# 
   489  029A                     	;# 
   490  029B                     	;# 
   491  029C                     	;# 
   492  029C                     	;# 
   493  029D                     	;# 
   494  029E                     	;# 
   495  029F                     	;# 
   496  0311                     	;# 
   497  0311                     	;# 
   498  0312                     	;# 
   499  0313                     	;# 
   500  0314                     	;# 
   501  0315                     	;# 
   502  0315                     	;# 
   503  0316                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  031C                     	;# 
   509  031C                     	;# 
   510  031D                     	;# 
   511  031E                     	;# 
   512  0394                     	;# 
   513  0395                     	;# 
   514  0396                     	;# 
   515  0415                     	;# 
   516  0416                     	;# 
   517  0417                     	;# 
   518  041C                     	;# 
   519  041D                     	;# 
   520  041E                     	;# 
   521  0791                     	;# 
   522  0792                     	;# 
   523  0793                     	;# 
   524  0794                     	;# 
   525  0795                     	;# 
   526  0798                     	;# 
   527  0799                     	;# 
   528  079A                     	;# 
   529  07A0                     	;# 
   530  07A1                     	;# 
   531  07A2                     	;# 
   532  07A3                     	;# 
   533  07A4                     	;# 
   534  07A5                     	;# 
   535  07A6                     	;# 
   536  07A7                     	;# 
   537  07A8                     	;# 
   538  07A9                     	;# 
   539  07AA                     	;# 
   540  07AB                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;_putdata
   552                           
   553                           	psect	nvBANK0
   554  0061                     __pnvBANK0:	
   555  0061                     _gettingSuccess:	
   556  0061                     	ds	1
   557  001E                     _CPSCON0	set	30
   558  001F                     _CPSCON1	set	31
   559  000C                     _PORTA	set	12
   560  000D                     _PORTB	set	13
   561  000E                     _PORTC	set	14
   562  000F                     _PORTD	set	15
   563  0010                     _PORTE	set	16
   564  0015                     _TMR0	set	21
   565  005F                     _GIE	set	95
   566  008D                     _RCIF	set	141
   567  007C                     _RD4	set	124
   568  007D                     _RD5	set	125
   569  005D                     _TMR0IE	set	93
   570  005A                     _TMR0IF	set	90
   571  0095                     _OPTION_REG	set	149
   572  0099                     _OSCCON	set	153
   573  008C                     _TRISA	set	140
   574  008D                     _TRISB	set	141
   575  008E                     _TRISC	set	142
   576  008F                     _TRISD	set	143
   577  0090                     _TRISE	set	144
   578  0476                     _TRISC6	set	1142
   579  0477                     _TRISC7	set	1143
   580  04AF                     _nWPUEN	set	1199
   581  010F                     _LATD	set	271
   582  0191                     _EEADR	set	401
   583  018C                     _ANSELA	set	396
   584  018D                     _ANSELB	set	397
   585  018F                     _ANSELD	set	399
   586  0190                     _ANSELE	set	400
   587  019F                     _BAUDCON	set	415
   588  0193                     _EEDATA	set	403
   589  0199                     _RCREG	set	409
   590  019D                     _RCSTA	set	413
   591  019B                     _SPBRG	set	411
   592  019A                     _TXREG	set	410
   593  019E                     _TXSTA	set	414
   594  0CA8                     _RD	set	3240
   595  0CF1                     _TRMT	set	3313
   596  020D                     _WPUB	set	525
   597  0293                     _CCP1CON	set	659
   598  029A                     _CCP2CON	set	666
   599  0791                     _LCDCON	set	1937
   600  079A                     _LCDSE2	set	1946
   601                           
   602                           ; #config settings
   603  0000                     
   604                           	psect	cinit
   605  001C                     start_initialization:	
   606  001C                     __initialization:		;BIGRAM
   607                           
   608                           ; Clear objects allocated to BIGRAM
   609  001C  3096               	movlw	low (0+9110)
   610  001D  0084               	movwf	4
   611  001E  3023               	movlw	high (0+9110)
   612  001F  0085               	movwf	5
   613  0020  305A               	movlw	90
   614  0021  00FE               	movwf	btemp
   615  0022  3000               	movlw	0
   616  0023  00FF               	movwf	btemp+1
   617  0024  3184  2472  3180   	fcall	clear_ram0
   618                           
   619                           ; Clear objects allocated to COMMON
   620  0027  01F7               	clrf	__pbssCOMMON& (0+127)
   621  0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   622  0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   623  002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   624  002B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   625                           
   626                           ; Clear objects allocated to BANK0
   627  002C  3020               	movlw	low __pbssBANK0
   628  002D  0084               	movwf	4
   629  002E  3000               	movlw	high __pbssBANK0
   630  002F  0085               	movwf	5
   631  0030  3025               	movlw	37
   632  0031  00FE               	movwf	btemp
   633  0032  3000               	movlw	0
   634  0033  00FF               	movwf	btemp+1
   635  0034  3184  2472  3180   	fcall	clear_ram0
   636                           
   637                           ; Clear objects allocated to BANK1
   638  0037  30A0               	movlw	low __pbssBANK1
   639  0038  0084               	movwf	4
   640  0039  3000               	movlw	high __pbssBANK1
   641  003A  0085               	movwf	5
   642  003B  3050               	movlw	80
   643  003C  00FE               	movwf	btemp
   644  003D  3000               	movlw	0
   645  003E  00FF               	movwf	btemp+1
   646  003F  3184  2472  3180   	fcall	clear_ram0
   647                           
   648                           ; Clear objects allocated to BANK2
   649  0042  3020               	movlw	low __pbssBANK2
   650  0043  0084               	movwf	4
   651  0044  3001               	movlw	high __pbssBANK2
   652  0045  0085               	movwf	5
   653  0046  3046               	movlw	70
   654  0047  00FE               	movwf	btemp
   655  0048  3000               	movlw	0
   656  0049  00FF               	movwf	btemp+1
   657  004A  3184  2472  3180   	fcall	clear_ram0
   658                           
   659                           ; Clear objects allocated to BANK3
   660  004D  30A0               	movlw	low __pbssBANK3
   661  004E  0084               	movwf	4
   662  004F  3001               	movlw	high __pbssBANK3
   663  0050  0085               	movwf	5
   664  0051  3030               	movlw	48
   665  0052  00FE               	movwf	btemp
   666  0053  3000               	movlw	0
   667  0054  00FF               	movwf	btemp+1
   668  0055  3184  2472         	fcall	clear_ram0
   669  0057                     end_of_initialization:	
   670                           ;End of C runtime variable initialization code
   671                           
   672  0057                     __end_of__initialization:	
   673  0057  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   674  0058  0020               	movlb	0
   675  0059  3183  2BC7         	ljmp	_main	;jump to C main() function
   676                           
   677                           	psect	bssCOMMON
   678  0077                     __pbssCOMMON:	
   679  0077                     _fulg:	
   680  0077                     	ds	1
   681  0078                     _getNum:	
   682  0078                     	ds	1
   683  0079                     _onetime:	
   684  0079                     	ds	1
   685  007A                     _reservingNow:	
   686  007A                     	ds	1
   687  007B                     _resetFlug:	
   688  007B                     	ds	1
   689                           
   690                           	psect	bssBANK0
   691  0020                     __pbssBANK0:	
   692  0020                     _getKeeping:	
   693  0020                     	ds	32
   694  0040                     _i:	
   695  0040                     	ds	1
   696  0041                     _j:	
   697  0041                     	ds	1
   698  0042                     _ledcount:	
   699  0042                     	ds	1
   700  0043                     _n:	
   701  0043                     	ds	1
   702  0044                     _time:	
   703  0044                     	ds	1
   704                           
   705                           	psect	bssBANK1
   706  00A0                     __pbssBANK1:	
   707  00A0                     _stoc:	
   708  00A0                     	ds	48
   709  00D0                     _test:	
   710  00D0                     	ds	32
   711                           
   712                           	psect	bssBANK2
   713  0120                     __pbssBANK2:	
   714  0120                     _getdata:	
   715  0120                     	ds	70
   716                           
   717                           	psect	bssBANK3
   718  01A0                     __pbssBANK3:	
   719  01A0                     _led:	
   720  01A0                     	ds	48
   721                           
   722                           	psect	clrtext
   723  0472                     clear_ram0:	
   724                           ;	Called with FSR0 containing the base address, and
   725                           ;	btemp/btemp+1 has the size to clear
   726                           
   727  0472  0064               	clrwdt	;clear the watchdog before getting into this loop
   728  0473                     clrloop0:	
   729  0473  0180               	clrf	0	;clear RAM location pointed to by FSR
   730  0474  3101               	addfsr 0,1
   731  0475  3001               	movlw	1
   732  0476  02FE               	subwf	126,f
   733  0477  3000               	movlw	0
   734  0478  3BFF               	subwfb	127,f
   735  0479  087F               	movf	127,w
   736  047A  047E               	iorwf	126,w
   737  047B  1903               	btfsc	3,2
   738  047C  3400               	retlw	0	;all done for this memory range, return
   739  047D  2C73               	goto	clrloop0	;have we reached the end yet?
   740                           
   741                           	psect	cstackCOMMON
   742  0070                     __pcstackCOMMON:	
   743  0070                     ?_setpin:	
   744  0070                     ?_change:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?_uartget:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ?_InterTimer:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_main:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?i1_uartget:	
   757                           ; 0 bytes @ 0x0
   758                           
   759  0070                     ?_E2promRead:	
   760                           ; 0 bytes @ 0x0
   761                           
   762  0070                     ?i1___wmul:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     i1___wmul@multiplier:	
   766                           ; 2 bytes @ 0x0
   767                           
   768                           
   769                           ; 2 bytes @ 0x0
   770  0070                     	ds	2
   771  0072                     i1___wmul@multiplicand:	
   772                           
   773                           ; 2 bytes @ 0x2
   774  0072                     	ds	2
   775  0074                     ??i1___wmul:	
   776  0074                     i1___wmul@product:	
   777                           ; 0 bytes @ 0x4
   778                           
   779                           
   780                           ; 2 bytes @ 0x4
   781  0074                     	ds	2
   782  0076                     ??_InterTimer:	
   783                           
   784                           ; 0 bytes @ 0x6
   785  0076                     	ds	1
   786                           
   787                           	psect	cstackBANK0
   788  0045                     __pcstackBANK0:	
   789  0045                     ??i1_uartget:	
   790                           
   791                           ; 0 bytes @ 0x0
   792  0045                     	ds	10
   793  004F                     ??_E2promRead:	
   794  004F                     ??_setpin:	
   795                           ; 0 bytes @ 0xA
   796                           
   797  004F                     ?___wmul:	
   798                           ; 0 bytes @ 0xA
   799                           
   800  004F                     ___wmul@multiplier:	
   801                           ; 2 bytes @ 0xA
   802                           
   803                           
   804                           ; 2 bytes @ 0xA
   805  004F                     	ds	2
   806  0051                     E2promRead@adr:	
   807  0051                     ___wmul@multiplicand:	
   808                           ; 1 bytes @ 0xC
   809                           
   810                           
   811                           ; 2 bytes @ 0xC
   812  0051                     	ds	2
   813  0053                     ??___wmul:	
   814  0053                     ___wmul@product:	
   815                           ; 0 bytes @ 0xE
   816                           
   817                           
   818                           ; 2 bytes @ 0xE
   819  0053                     	ds	2
   820  0055                     ??_change:	
   821  0055                     ??_uartget:	
   822                           ; 0 bytes @ 0x10
   823                           
   824                           
   825                           ; 0 bytes @ 0x10
   826  0055                     	ds	10
   827  005F                     ??_main:	
   828                           
   829                           ; 0 bytes @ 0x1A
   830  005F                     	ds	1
   831  0060                     main@individual:	
   832                           
   833                           ; 1 bytes @ 0x1B
   834  0060                     	ds	1
   835                           
   836                           	psect	maintext
   837  03C7                     __pmaintext:	
   838 ;;
   839 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   840 ;;
   841 ;; *************** function _main *****************
   842 ;; Defined at:
   843 ;;		line 132 in file "ver0.0_20140727.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  individual      1   27[BANK0 ] unsigned char 
   848 ;; Return value:  Size  Location     Type
   849 ;;		None               void
   850 ;; Registers used:
   851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 17F/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels required when called:    5
   863 ;; This function calls:
   864 ;;		_E2promRead
   865 ;;		_change
   866 ;;		_setpin
   867 ;;		_uartget
   868 ;; This function is called by:
   869 ;;		Startup code after reset
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _main
   875  03C7                     _main:	
   876                           
   877                           ;ver0.0_20140727.c: 134: char individual=255;
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   881  03C7  30FF               	movlw	255
   882  03C8  0020               	movlb	0	; select bank0
   883  03C9  00DF               	movwf	??_main
   884  03CA  085F               	movf	??_main,w
   885  03CB  00E0               	movwf	main@individual
   886                           
   887                           ;ver0.0_20140727.c: 135: setpin();
   888  03CC  3184  2406  3183   	fcall	_setpin
   889                           
   890                           ;ver0.0_20140727.c: 136: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400
      +                          L)))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   891  03CF  0021               	movlb	1	; select bank1
   892  03D0  178E               	bsf	14,7	;volatile
   893  03D1  130E               	bcf	14,6	;volatile
   894  03D2  3033               	movlw	51
   895  03D3  0023               	movlb	3	; select bank3
   896  03D4  009B               	movwf	27	;volatile
   897  03D5  3090               	movlw	144
   898  03D6  009D               	movwf	29	;volatile
   899  03D7  3024               	movlw	36
   900  03D8  009E               	movwf	30	;volatile
   901  03D9  019F               	clrf	31	;volatile
   902                           
   903                           ;ver0.0_20140727.c: 137: individual=E2promRead(0x00);
   904  03DA  3000               	movlw	0
   905  03DB  3184  2463  3183   	fcall	_E2promRead
   906  03DE  0020               	movlb	0	; select bank0
   907  03DF  00DF               	movwf	??_main
   908  03E0  085F               	movf	??_main,w
   909  03E1  00E0               	movwf	main@individual
   910                           
   911                           ;ver0.0_20140727.c: 138: OPTION_REG = 0b0000010 ;
   912  03E2  3002               	movlw	2
   913  03E3  0021               	movlb	1	; select bank1
   914  03E4  0095               	movwf	21	;volatile
   915                           
   916                           ;ver0.0_20140727.c: 139: TMR0 = 61 ;
   917  03E5  303D               	movlw	61
   918  03E6  0020               	movlb	0	; select bank0
   919  03E7  0095               	movwf	21	;volatile
   920                           
   921                           ;ver0.0_20140727.c: 140: TMR0IF = 0 ;
   922  03E8  110B               	bcf	11,2	;volatile
   923                           
   924                           ;ver0.0_20140727.c: 141: time = 0 ;
   925  03E9  01C4               	clrf	_time
   926                           
   927                           ;ver0.0_20140727.c: 142: TMR0IE = 1 ;
   928  03EA  168B               	bsf	11,5	;volatile
   929                           
   930                           ;ver0.0_20140727.c: 143: WPUB = 0xC0;
   931  03EB  30C0               	movlw	192
   932  03EC  0024               	movlb	4	; select bank4
   933  03ED  008D               	movwf	13	;volatile
   934                           
   935                           ;ver0.0_20140727.c: 144: nWPUEN = 0;
   936  03EE  0021               	movlb	1	; select bank1
   937  03EF  1395               	bcf	21,7	;volatile
   938                           
   939                           ;ver0.0_20140727.c: 145: GIE = 0 ;
   940  03F0  138B               	bcf	11,7	;volatile
   941                           
   942                           ;ver0.0_20140727.c: 150: PORTB=0xff;
   943  03F1  30FF               	movlw	255
   944  03F2  0020               	movlb	0	; select bank0
   945  03F3  008D               	movwf	13	;volatile
   946                           
   947                           ;ver0.0_20140727.c: 151: uartget();
   948  03F4  3180  205B  3183   	fcall	_uartget
   949                           
   950                           ;ver0.0_20140727.c: 152: PORTB=0x00;
   951  03F7  0020               	movlb	0	; select bank0
   952  03F8  018D               	clrf	13	;volatile
   953  03F9                     l173:	
   954                           ;ver0.0_20140727.c: 154: while(RD4==0);
   955                           
   956                           ;ver0.0_20140727.c: 153: while(1) {
   957                           
   958  03F9  0020               	movlb	0	; select bank0
   959  03FA  1E0F               	btfss	15,4	;volatile
   960  03FB  2BF9               	goto	l173
   961                           
   962                           ;ver0.0_20140727.c: 155: change();
   963  03FC  3183  2317  3183   	fcall	_change
   964  03FF                     l176:	
   965                           ;ver0.0_20140727.c: 156: while(RD4==1);
   966                           
   967  03FF  0020               	movlb	0	; select bank0
   968  0400  1A0F               	btfsc	15,4	;volatile
   969  0401  2BFF               	goto	l176
   970                           
   971                           ;ver0.0_20140727.c: 157: change();
   972  0402  3183  2317  3183   	fcall	_change
   973  0405  2BF9               	goto	l173
   974  0406                     __end_of_main:	
   975                           
   976                           	psect	text1
   977  005B                     __ptext1:	
   978 ;; *************** function _uartget *****************
   979 ;; Defined at:
   980 ;;		line 42 in file "ver0.0_20140727.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;		None               void
   987 ;; Registers used:
   988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   996 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   997 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   998 ;;Total ram usage:       10 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    4
  1001 ;; This function calls:
  1002 ;;		___wmul
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _uartget
  1010  005B                     _uartget:	
  1011                           
  1012                           ;ver0.0_20140727.c: 78: gettingSuccess=2;
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _uartget: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1016  005B  3002               	movlw	2
  1017  005C  0020               	movlb	0	; select bank0
  1018  005D  00D5               	movwf	??_uartget
  1019  005E  0855               	movf	??_uartget,w
  1020  005F  00E1               	movwf	_gettingSuccess
  1021                           
  1022                           ;ver0.0_20140727.c: 79: for(i=0;i<64;i++)
  1023  0060  01C0               	clrf	_i
  1024  0061  3040               	movlw	64
  1025  0062  0240               	subwf	_i,w
  1026  0063  1803               	btfsc	3,0
  1027  0064  2876               	goto	l1258
  1028  0065                     l1252:	
  1029                           
  1030                           ;ver0.0_20140727.c: 80: getdata[i]=0xff;
  1031  0065  30FF               	movlw	255
  1032  0066  00D5               	movwf	??_uartget
  1033  0067  0840               	movf	_i,w
  1034  0068  3E20               	addlw	_getdata& (0+255)
  1035  0069  0086               	movwf	6
  1036  006A  3001               	movlw	1	; select bank2/3
  1037  006B  0087               	movwf	7
  1038  006C  0855               	movf	??_uartget,w
  1039  006D  0081               	movwf	1
  1040  006E  3001               	movlw	1
  1041  006F  00D5               	movwf	??_uartget
  1042  0070  0855               	movf	??_uartget,w
  1043  0071  07C0               	addwf	_i,f
  1044  0072  3040               	movlw	64
  1045  0073  0240               	subwf	_i,w
  1046  0074  1C03               	skipc
  1047  0075  2865               	goto	l1252
  1048  0076                     l1258:	
  1049                           
  1050                           ;ver0.0_20140727.c: 81: if(gettingSuccess==2){
  1051  0076  0861               	movf	_gettingSuccess,w
  1052  0077  3A02               	xorlw	2
  1053  0078  1D03               	skipz
  1054  0079  0008               	return
  1055                           
  1056                           ;ver0.0_20140727.c: 82: for(i=1;i<17;i++){
  1057  007A  01C0               	clrf	_i
  1058  007B  0AC0               	incf	_i,f
  1059  007C  3011               	movlw	17
  1060  007D  0240               	subwf	_i,w
  1061  007E  1803               	btfsc	3,0
  1062  007F  28BA               	goto	l152
  1063  0080                     l1266:	
  1064                           
  1065                           ;ver0.0_20140727.c: 83: for(j=0;j<2;j++){
  1066  0080  01C1               	clrf	_j
  1067  0081  3002               	movlw	2
  1068  0082  0241               	subwf	_j,w
  1069  0083  1803               	btfsc	3,0
  1070  0084  28B2               	goto	l1280
  1071  0085                     l1272:	
  1072                           
  1073                           ;ver0.0_20140727.c: 84: n=(i-1)*4+(j+2);
  1074  0085  0840               	movf	_i,w
  1075  0086  00D5               	movwf	??_uartget
  1076  0087  3001               	movlw	1
  1077  0088                     u925:	
  1078  0088  35D5               	lslf	??_uartget,f
  1079  0089  3EFF               	addlw	-1
  1080  008A  1D03               	skipz
  1081  008B  2888               	goto	u925
  1082  008C  3555               	lslf	??_uartget,w
  1083  008D  0741               	addwf	_j,w
  1084  008E  3EFE               	addlw	254
  1085  008F  00D6               	movwf	??_uartget+1
  1086  0090  0856               	movf	??_uartget+1,w
  1087  0091  00C3               	movwf	_n
  1088                           
  1089                           ;ver0.0_20140727.c: 85: getKeeping[i][j]=getdata[n];
  1090  0092  0843               	movf	_n,w
  1091  0093  3E20               	addlw	_getdata& (0+255)
  1092  0094  0086               	movwf	6
  1093  0095  3001               	movlw	1	; select bank2/3
  1094  0096  0087               	movwf	7
  1095  0097  0801               	movf	1,w
  1096  0098  00D5               	movwf	??_uartget
  1097  0099  0840               	movf	_i,w
  1098  009A  00D6               	movwf	??_uartget+1
  1099  009B  3001               	movlw	1
  1100  009C                     u935:	
  1101  009C  35D6               	lslf	??_uartget+1,f
  1102  009D  0B89               	decfsz	9,f
  1103  009E  289C               	goto	u935
  1104  009F  3020               	movlw	_getKeeping& (0+255)
  1105  00A0  0756               	addwf	??_uartget+1,w
  1106  00A1  00D7               	movwf	??_uartget+2
  1107  00A2  0841               	movf	_j,w
  1108  00A3  0757               	addwf	??_uartget+2,w
  1109  00A4  00D8               	movwf	??_uartget+3
  1110  00A5  0858               	movf	??_uartget+3,w
  1111  00A6  0086               	movwf	6
  1112  00A7  0187               	clrf	7
  1113  00A8  0855               	movf	??_uartget,w
  1114  00A9  0081               	movwf	1
  1115  00AA  3001               	movlw	1
  1116  00AB  00D5               	movwf	??_uartget
  1117  00AC  0855               	movf	??_uartget,w
  1118  00AD  07C1               	addwf	_j,f
  1119  00AE  3002               	movlw	2
  1120  00AF  0241               	subwf	_j,w
  1121  00B0  1C03               	skipc
  1122  00B1  2885               	goto	l1272
  1123  00B2                     l1280:	
  1124  00B2  3001               	movlw	1
  1125  00B3  00D5               	movwf	??_uartget
  1126  00B4  0855               	movf	??_uartget,w
  1127  00B5  07C0               	addwf	_i,f
  1128  00B6  3011               	movlw	17
  1129  00B7  0240               	subwf	_i,w
  1130  00B8  1C03               	skipc
  1131  00B9  2880               	goto	l1266
  1132  00BA                     l152:	
  1133                           
  1134                           ;ver0.0_20140727.c: 86: }
  1135                           ;ver0.0_20140727.c: 87: }
  1136                           ;ver0.0_20140727.c: 88: for(i=1;i<17;i++){
  1137  00BA  01C0               	clrf	_i
  1138  00BB  0AC0               	incf	_i,f
  1139  00BC  3011               	movlw	17
  1140  00BD  0240               	subwf	_i,w
  1141  00BE  1803               	btfsc	3,0
  1142  00BF  294E               	goto	l1294
  1143  00C0                     l1288:	
  1144                           
  1145                           ;ver0.0_20140727.c: 90: putdata[i][0]=(getKeeping[i][1]&0b00011111)<<1;
  1146  00C0  1403               	setc
  1147  00C1  0D40               	rlf	_i,w
  1148  00C2  3E20               	addlw	_getKeeping& (0+255)
  1149  00C3  0086               	movwf	6
  1150  00C4  0187               	clrf	7
  1151  00C5  0801               	movf	1,w
  1152  00C6  391F               	andlw	31
  1153  00C7  0709               	addwf	9,w
  1154  00C8  00D5               	movwf	??_uartget
  1155  00C9  0840               	movf	_i,w
  1156  00CA  00D6               	movwf	??_uartget+1
  1157  00CB  01D7               	clrf	??_uartget+2
  1158  00CC  0856               	movf	??_uartget+1,w
  1159  00CD  00CF               	movwf	___wmul@multiplier
  1160  00CE  0857               	movf	??_uartget+2,w
  1161  00CF  00D0               	movwf	___wmul@multiplier+1
  1162  00D0  3005               	movlw	5
  1163  00D1  00D1               	movwf	___wmul@multiplicand
  1164  00D2  3000               	movlw	0
  1165  00D3  00D2               	movwf	___wmul@multiplicand+1
  1166  00D4  3184  2428  3180   	fcall	___wmul
  1167  00D7  3096               	movlw	150
  1168  00D8  0020               	movlb	0	; select bank0
  1169  00D9  00D8               	movwf	??_uartget+3
  1170  00DA  3023               	movlw	35
  1171  00DB  00D9               	movwf	??_uartget+4
  1172  00DC  084F               	movf	?___wmul,w
  1173  00DD  0758               	addwf	??_uartget+3,w
  1174  00DE  00DA               	movwf	??_uartget+5
  1175  00DF  0850               	movf	?___wmul+1,w
  1176  00E0  3D59               	addwfc	??_uartget+4,w
  1177  00E1  00DB               	movwf	??_uartget+6
  1178  00E2  085A               	movf	??_uartget+5,w
  1179  00E3  0086               	movwf	6
  1180  00E4  085B               	movf	??_uartget+6,w
  1181  00E5  0087               	movwf	7
  1182  00E6  0855               	movf	??_uartget,w
  1183  00E7  0081               	movwf	1
  1184                           
  1185                           ;ver0.0_20140727.c: 92: putdata[i][1]=getKeeping[i][0];
  1186  00E8  3540               	lslf	_i,w
  1187  00E9  3E20               	addlw	_getKeeping& (0+255)
  1188  00EA  0086               	movwf	6
  1189  00EB  0187               	clrf	7
  1190  00EC  0801               	movf	1,w
  1191  00ED  00D5               	movwf	??_uartget
  1192  00EE  0840               	movf	_i,w
  1193  00EF  00D6               	movwf	??_uartget+1
  1194  00F0  01D7               	clrf	??_uartget+2
  1195  00F1  0856               	movf	??_uartget+1,w
  1196  00F2  00CF               	movwf	___wmul@multiplier
  1197  00F3  0857               	movf	??_uartget+2,w
  1198  00F4  00D0               	movwf	___wmul@multiplier+1
  1199  00F5  3005               	movlw	5
  1200  00F6  00D1               	movwf	___wmul@multiplicand
  1201  00F7  3000               	movlw	0
  1202  00F8  00D2               	movwf	___wmul@multiplicand+1
  1203  00F9  3184  2428  3180   	fcall	___wmul
  1204  00FC  0020               	movlb	0	; select bank0
  1205  00FD  084F               	movf	?___wmul,w
  1206  00FE  3E01               	addlw	1
  1207  00FF  00D8               	movwf	??_uartget+3
  1208  0100  3000               	movlw	0
  1209  0101  3D50               	addwfc	?___wmul+1,w
  1210  0102  00D9               	movwf	??_uartget+4
  1211  0103  3096               	movlw	150
  1212  0104  00DA               	movwf	??_uartget+5
  1213  0105  3023               	movlw	35
  1214  0106  00DB               	movwf	??_uartget+6
  1215  0107  0858               	movf	??_uartget+3,w
  1216  0108  075A               	addwf	??_uartget+5,w
  1217  0109  00DC               	movwf	??_uartget+7
  1218  010A  0859               	movf	??_uartget+4,w
  1219  010B  3D5B               	addwfc	??_uartget+6,w
  1220  010C  00DD               	movwf	??_uartget+8
  1221  010D  085C               	movf	??_uartget+7,w
  1222  010E  0086               	movwf	6
  1223  010F  085D               	movf	??_uartget+8,w
  1224  0110  0087               	movwf	7
  1225  0111  0855               	movf	??_uartget,w
  1226  0112  0081               	movwf	1
  1227                           
  1228                           ;ver0.0_20140727.c: 94: putdata[i][1]=(getKeeping[i][1]&0b11100000)>>5;
  1229  0113  1403               	setc
  1230  0114  0D40               	rlf	_i,w
  1231  0115  3E20               	addlw	_getKeeping& (0+255)
  1232  0116  0086               	movwf	6
  1233  0117  0187               	clrf	7
  1234  0118  0801               	movf	1,w
  1235  0119  00D5               	movwf	??_uartget
  1236  011A  3005               	movlw	5
  1237  011B                     u975:	
  1238  011B  36D5               	lsrf	??_uartget,f
  1239  011C  0B89               	decfsz	9,f
  1240  011D  291B               	goto	u975
  1241  011E  0855               	movf	??_uartget,w
  1242  011F  3907               	andlw	7
  1243  0120  00D6               	movwf	??_uartget+1
  1244  0121  0840               	movf	_i,w
  1245  0122  00D7               	movwf	??_uartget+2
  1246  0123  01D8               	clrf	??_uartget+3
  1247  0124  0857               	movf	??_uartget+2,w
  1248  0125  00CF               	movwf	___wmul@multiplier
  1249  0126  0858               	movf	??_uartget+3,w
  1250  0127  00D0               	movwf	___wmul@multiplier+1
  1251  0128  3005               	movlw	5
  1252  0129  00D1               	movwf	___wmul@multiplicand
  1253  012A  3000               	movlw	0
  1254  012B  00D2               	movwf	___wmul@multiplicand+1
  1255  012C  3184  2428  3180   	fcall	___wmul
  1256  012F  0020               	movlb	0	; select bank0
  1257  0130  084F               	movf	?___wmul,w
  1258  0131  3E01               	addlw	1
  1259  0132  00D9               	movwf	??_uartget+4
  1260  0133  3000               	movlw	0
  1261  0134  3D50               	addwfc	?___wmul+1,w
  1262  0135  00DA               	movwf	??_uartget+5
  1263  0136  3096               	movlw	150
  1264  0137  00DB               	movwf	??_uartget+6
  1265  0138  3023               	movlw	35
  1266  0139  00DC               	movwf	??_uartget+7
  1267  013A  0859               	movf	??_uartget+4,w
  1268  013B  075B               	addwf	??_uartget+6,w
  1269  013C  00DD               	movwf	??_uartget+8
  1270  013D  085A               	movf	??_uartget+5,w
  1271  013E  3D5C               	addwfc	??_uartget+7,w
  1272  013F  00DE               	movwf	??_uartget+9
  1273  0140  085D               	movf	??_uartget+8,w
  1274  0141  0086               	movwf	6
  1275  0142  085E               	movf	??_uartget+9,w
  1276  0143  0087               	movwf	7
  1277  0144  0856               	movf	??_uartget+1,w
  1278  0145  0081               	movwf	1
  1279  0146  3001               	movlw	1
  1280  0147  00D5               	movwf	??_uartget
  1281  0148  0855               	movf	??_uartget,w
  1282  0149  07C0               	addwf	_i,f
  1283  014A  3011               	movlw	17
  1284  014B  0240               	subwf	_i,w
  1285  014C  1C03               	skipc
  1286  014D  28C0               	goto	l1288
  1287  014E                     l1294:	
  1288                           
  1289                           ;ver0.0_20140727.c: 95: }
  1290                           ;ver0.0_20140727.c: 96: putdata[2][0]=putdata[2][0]|0x40;
  1291  014E  3096               	movlw	150
  1292  014F  0086               	movwf	6
  1293  0150  3023               	movlw	35
  1294  0151  0087               	movwf	7
  1295  0152  314A               	addfsr 1,10
  1296  0153  0801               	movf	1,w
  1297  0154  3840               	iorlw	64
  1298  0155  00D5               	movwf	??_uartget
  1299  0156  30A0               	movlw	160
  1300  0157  0086               	movwf	6
  1301  0158  3023               	movlw	35
  1302  0159  0087               	movwf	7
  1303  015A  0855               	movf	??_uartget,w
  1304  015B  0081               	movwf	1
  1305                           
  1306                           ;ver0.0_20140727.c: 97: putdata[4][0]=putdata[4][0]|0x20;
  1307  015C  3096               	movlw	150
  1308  015D  0086               	movwf	6
  1309  015E  3023               	movlw	35
  1310  015F  0087               	movwf	7
  1311  0160  3154               	addfsr 1,20
  1312  0161  0801               	movf	1,w
  1313  0162  3820               	iorlw	32
  1314  0163  00D5               	movwf	??_uartget
  1315  0164  30AA               	movlw	170
  1316  0165  0086               	movwf	6
  1317  0166  3023               	movlw	35
  1318  0167  0087               	movwf	7
  1319  0168  0855               	movf	??_uartget,w
  1320  0169  0081               	movwf	1
  1321                           
  1322                           ;ver0.0_20140727.c: 98: putdata[6][2]=putdata[6][2]|0x01;
  1323  016A  30B6               	movlw	182
  1324  016B  0086               	movwf	6
  1325  016C  3023               	movlw	35
  1326  016D  0087               	movwf	7
  1327  016E  0801               	movf	1,w
  1328  016F  3801               	iorlw	1
  1329  0170  00D5               	movwf	??_uartget
  1330  0171  30B6               	movlw	182
  1331  0172  0086               	movwf	6
  1332  0173  3023               	movlw	35
  1333  0174  0087               	movwf	7
  1334  0175  0855               	movf	??_uartget,w
  1335  0176  0081               	movwf	1
  1336                           
  1337                           ;ver0.0_20140727.c: 99: putdata[8][2]=putdata[8][2]|0x02;
  1338  0177  30C0               	movlw	192
  1339  0178  0086               	movwf	6
  1340  0179  3023               	movlw	35
  1341  017A  0087               	movwf	7
  1342  017B  0801               	movf	1,w
  1343  017C  3802               	iorlw	2
  1344  017D  00D5               	movwf	??_uartget
  1345  017E  30C0               	movlw	192
  1346  017F  0086               	movwf	6
  1347  0180  3023               	movlw	35
  1348  0181  0087               	movwf	7
  1349  0182  0855               	movf	??_uartget,w
  1350  0183  0081               	movwf	1
  1351                           
  1352                           ;ver0.0_20140727.c: 100: putdata[10][2]=putdata[10][2]|0x04;
  1353  0184  30CA               	movlw	202
  1354  0185  0086               	movwf	6
  1355  0186  3023               	movlw	35
  1356  0187  0087               	movwf	7
  1357  0188  0801               	movf	1,w
  1358  0189  3804               	iorlw	4
  1359  018A  00D5               	movwf	??_uartget
  1360  018B  30CA               	movlw	202
  1361  018C  0086               	movwf	6
  1362  018D  3023               	movlw	35
  1363  018E  0087               	movwf	7
  1364  018F  0855               	movf	??_uartget,w
  1365  0190  0081               	movwf	1
  1366                           
  1367                           ;ver0.0_20140727.c: 101: putdata[12][2]=putdata[12][2]|0x08;
  1368  0191  30D4               	movlw	212
  1369  0192  0086               	movwf	6
  1370  0193  3023               	movlw	35
  1371  0194  0087               	movwf	7
  1372  0195  0801               	movf	1,w
  1373  0196  3808               	iorlw	8
  1374  0197  00D5               	movwf	??_uartget
  1375  0198  30D4               	movlw	212
  1376  0199  0086               	movwf	6
  1377  019A  3023               	movlw	35
  1378  019B  0087               	movwf	7
  1379  019C  0855               	movf	??_uartget,w
  1380  019D  0081               	movwf	1
  1381                           
  1382                           ;ver0.0_20140727.c: 102: putdata[14][3]=putdata[14][3]|0x01;
  1383  019E  30DF               	movlw	223
  1384  019F  0086               	movwf	6
  1385  01A0  3023               	movlw	35
  1386  01A1  0087               	movwf	7
  1387  01A2  0801               	movf	1,w
  1388  01A3  3801               	iorlw	1
  1389  01A4  00D5               	movwf	??_uartget
  1390  01A5  30DF               	movlw	223
  1391  01A6  0086               	movwf	6
  1392  01A7  3023               	movlw	35
  1393  01A8  0087               	movwf	7
  1394  01A9  0855               	movf	??_uartget,w
  1395  01AA  0081               	movwf	1
  1396                           
  1397                           ;ver0.0_20140727.c: 103: putdata[16][3]=putdata[16][3]|0x02;
  1398  01AB  30E9               	movlw	233
  1399  01AC  0086               	movwf	6
  1400  01AD  3023               	movlw	35
  1401  01AE  0087               	movwf	7
  1402  01AF  0801               	movf	1,w
  1403  01B0  3802               	iorlw	2
  1404  01B1  00D5               	movwf	??_uartget
  1405  01B2  30E9               	movlw	233
  1406  01B3  0086               	movwf	6
  1407  01B4  3023               	movlw	35
  1408  01B5  0087               	movwf	7
  1409  01B6  0855               	movf	??_uartget,w
  1410  01B7  0081               	movwf	1
  1411  01B8  0008               	return
  1412  01B9                     __end_of_uartget:	
  1413                           
  1414                           	psect	text2
  1415  0406                     __ptext2:	
  1416 ;; *************** function _setpin *****************
  1417 ;; Defined at:
  1418 ;;		line 9 in file "sorce.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;		None               void
  1425 ;; Registers used:
  1426 ;;		wreg, status,2
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _setpin
  1448  0406                     _setpin:	
  1449                           
  1450                           ;sorce.c: 10: OSCCON = 0b01110000 ;
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _setpin: [wreg+status,2]
  1454  0406  3070               	movlw	112
  1455  0407  0021               	movlb	1	; select bank1
  1456  0408  0099               	movwf	25	;volatile
  1457                           
  1458                           ;sorce.c: 11: ANSELA = 0b00000000 ;
  1459  0409  0023               	movlb	3	; select bank3
  1460  040A  018C               	clrf	12	;volatile
  1461                           
  1462                           ;sorce.c: 12: ANSELB = 0b00000000 ;
  1463  040B  018D               	clrf	13	;volatile
  1464                           
  1465                           ;sorce.c: 13: ANSELD = 0x00 ;
  1466  040C  018F               	clrf	15	;volatile
  1467                           
  1468                           ;sorce.c: 14: ANSELE = 0b00000000 ;
  1469  040D  0190               	clrf	16	;volatile
  1470                           
  1471                           ;sorce.c: 16: TRISA = 0b00000000 ;
  1472  040E  0021               	movlb	1	; select bank1
  1473  040F  018C               	clrf	12	;volatile
  1474                           
  1475                           ;sorce.c: 17: TRISB = 0b00000000 ;
  1476  0410  018D               	clrf	13	;volatile
  1477                           
  1478                           ;sorce.c: 18: TRISC = 0b10110000 ;
  1479  0411  30B0               	movlw	176
  1480  0412  008E               	movwf	14	;volatile
  1481                           
  1482                           ;sorce.c: 19: TRISD = 0b00111100 ;
  1483  0413  303C               	movlw	60
  1484  0414  008F               	movwf	15	;volatile
  1485                           
  1486                           ;sorce.c: 20: TRISE = 0X00 ;
  1487  0415  0190               	clrf	16	;volatile
  1488                           
  1489                           ;sorce.c: 22: PORTA = 0b00000000 ;
  1490  0416  0020               	movlb	0	; select bank0
  1491  0417  018C               	clrf	12	;volatile
  1492                           
  1493                           ;sorce.c: 23: PORTB = 0b00000000 ;
  1494  0418  018D               	clrf	13	;volatile
  1495                           
  1496                           ;sorce.c: 24: PORTC = 0b10000000 ;
  1497  0419  3080               	movlw	128
  1498  041A  008E               	movwf	14	;volatile
  1499                           
  1500                           ;sorce.c: 25: PORTD = 0b00000000 ;
  1501  041B  018F               	clrf	15	;volatile
  1502                           
  1503                           ;sorce.c: 27: CCP2CON=0x00;
  1504  041C  0025               	movlb	5	; select bank5
  1505  041D  019A               	clrf	26	;volatile
  1506                           
  1507                           ;sorce.c: 28: CCP1CON=0x00;
  1508  041E  0193               	clrf	19	;volatile
  1509                           
  1510                           ;sorce.c: 30: CPSCON0 =0x00;
  1511  041F  0020               	movlb	0	; select bank0
  1512  0420  019E               	clrf	30	;volatile
  1513                           
  1514                           ;sorce.c: 31: CPSCON1 =0x00;
  1515  0421  019F               	clrf	31	;volatile
  1516                           
  1517                           ;sorce.c: 32: LATD =0x00;
  1518  0422  0022               	movlb	2	; select bank2
  1519  0423  018F               	clrf	15	;volatile
  1520                           
  1521                           ;sorce.c: 33: LCDCON =0x00;
  1522  0424  002F               	movlb	15	; select bank15
  1523  0425  0191               	clrf	17	;volatile
  1524                           
  1525                           ;sorce.c: 34: LCDSE2 =0x00;
  1526  0426  019A               	clrf	26	;volatile
  1527  0427  0008               	return
  1528  0428                     __end_of_setpin:	
  1529                           
  1530                           	psect	text3
  1531  0317                     __ptext3:	
  1532 ;; *************** function _change *****************
  1533 ;; Defined at:
  1534 ;;		line 28 in file "ver0.0_20140727.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;Total ram usage:        6 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    4
  1555 ;; This function calls:
  1556 ;;		___wmul
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _change
  1564  0317                     _change:	
  1565                           
  1566                           ;ver0.0_20140727.c: 29: ledcount++;
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1570  0317  3001               	movlw	1
  1571  0318  0020               	movlb	0	; select bank0
  1572  0319  00D5               	movwf	??_change
  1573  031A  0855               	movf	??_change,w
  1574  031B  07C2               	addwf	_ledcount,f
  1575                           
  1576                           ;ver0.0_20140727.c: 30: if(RD5==1)
  1577  031C  1E8F               	btfss	15,5	;volatile
  1578  031D  2B22               	goto	l1230
  1579                           
  1580                           ;ver0.0_20140727.c: 31: ledcount=16;
  1581  031E  3010               	movlw	16
  1582  031F  00D5               	movwf	??_change
  1583  0320  0855               	movf	??_change,w
  1584  0321  00C2               	movwf	_ledcount
  1585  0322                     l1230:	
  1586                           
  1587                           ;ver0.0_20140727.c: 33: PORTA=putdata[ledcount][0];
  1588  0322  0842               	movf	_ledcount,w
  1589  0323  00D5               	movwf	??_change
  1590  0324  01D6               	clrf	??_change+1
  1591  0325  0855               	movf	??_change,w
  1592  0326  00CF               	movwf	___wmul@multiplier
  1593  0327  0856               	movf	??_change+1,w
  1594  0328  00D0               	movwf	___wmul@multiplier+1
  1595  0329  3005               	movlw	5
  1596  032A  00D1               	movwf	___wmul@multiplicand
  1597  032B  3000               	movlw	0
  1598  032C  00D2               	movwf	___wmul@multiplicand+1
  1599  032D  3184  2428  3183   	fcall	___wmul
  1600  0330  3096               	movlw	150
  1601  0331  0020               	movlb	0	; select bank0
  1602  0332  00D7               	movwf	??_change+2
  1603  0333  3023               	movlw	35
  1604  0334  00D8               	movwf	??_change+3
  1605  0335  084F               	movf	?___wmul,w
  1606  0336  0757               	addwf	??_change+2,w
  1607  0337  0086               	movwf	6
  1608  0338  0850               	movf	?___wmul+1,w
  1609  0339  3D58               	addwfc	??_change+3,w
  1610  033A  0087               	movwf	7
  1611  033B  0801               	movf	1,w
  1612  033C  008C               	movwf	12	;volatile
  1613                           
  1614                           ;ver0.0_20140727.c: 34: PORTB=putdata[ledcount][1];
  1615  033D  0842               	movf	_ledcount,w
  1616  033E  00D5               	movwf	??_change
  1617  033F  01D6               	clrf	??_change+1
  1618  0340  0855               	movf	??_change,w
  1619  0341  00CF               	movwf	___wmul@multiplier
  1620  0342  0856               	movf	??_change+1,w
  1621  0343  00D0               	movwf	___wmul@multiplier+1
  1622  0344  3005               	movlw	5
  1623  0345  00D1               	movwf	___wmul@multiplicand
  1624  0346  3000               	movlw	0
  1625  0347  00D2               	movwf	___wmul@multiplicand+1
  1626  0348  3184  2428  3183   	fcall	___wmul
  1627  034B  0020               	movlb	0	; select bank0
  1628  034C  084F               	movf	?___wmul,w
  1629  034D  3E01               	addlw	1
  1630  034E  00D7               	movwf	??_change+2
  1631  034F  3000               	movlw	0
  1632  0350  3D50               	addwfc	?___wmul+1,w
  1633  0351  00D8               	movwf	??_change+3
  1634  0352  3096               	movlw	150
  1635  0353  00D9               	movwf	??_change+4
  1636  0354  3023               	movlw	35
  1637  0355  00DA               	movwf	??_change+5
  1638  0356  0857               	movf	??_change+2,w
  1639  0357  0759               	addwf	??_change+4,w
  1640  0358  0086               	movwf	6
  1641  0359  0858               	movf	??_change+3,w
  1642  035A  3D5A               	addwfc	??_change+5,w
  1643  035B  0087               	movwf	7
  1644  035C  0801               	movf	1,w
  1645  035D  008D               	movwf	13	;volatile
  1646                           
  1647                           ;ver0.0_20140727.c: 35: PORTC=putdata[ledcount][2];
  1648  035E  0842               	movf	_ledcount,w
  1649  035F  00D5               	movwf	??_change
  1650  0360  01D6               	clrf	??_change+1
  1651  0361  0855               	movf	??_change,w
  1652  0362  00CF               	movwf	___wmul@multiplier
  1653  0363  0856               	movf	??_change+1,w
  1654  0364  00D0               	movwf	___wmul@multiplier+1
  1655  0365  3005               	movlw	5
  1656  0366  00D1               	movwf	___wmul@multiplicand
  1657  0367  3000               	movlw	0
  1658  0368  00D2               	movwf	___wmul@multiplicand+1
  1659  0369  3184  2428  3183   	fcall	___wmul
  1660  036C  0020               	movlb	0	; select bank0
  1661  036D  084F               	movf	?___wmul,w
  1662  036E  3E02               	addlw	2
  1663  036F  00D7               	movwf	??_change+2
  1664  0370  3000               	movlw	0
  1665  0371  3D50               	addwfc	?___wmul+1,w
  1666  0372  00D8               	movwf	??_change+3
  1667  0373  3096               	movlw	150
  1668  0374  00D9               	movwf	??_change+4
  1669  0375  3023               	movlw	35
  1670  0376  00DA               	movwf	??_change+5
  1671  0377  0857               	movf	??_change+2,w
  1672  0378  0759               	addwf	??_change+4,w
  1673  0379  0086               	movwf	6
  1674  037A  0858               	movf	??_change+3,w
  1675  037B  3D5A               	addwfc	??_change+5,w
  1676  037C  0087               	movwf	7
  1677  037D  0801               	movf	1,w
  1678  037E  008E               	movwf	14	;volatile
  1679                           
  1680                           ;ver0.0_20140727.c: 36: PORTD=putdata[ledcount][3];
  1681  037F  0842               	movf	_ledcount,w
  1682  0380  00D5               	movwf	??_change
  1683  0381  01D6               	clrf	??_change+1
  1684  0382  0855               	movf	??_change,w
  1685  0383  00CF               	movwf	___wmul@multiplier
  1686  0384  0856               	movf	??_change+1,w
  1687  0385  00D0               	movwf	___wmul@multiplier+1
  1688  0386  3005               	movlw	5
  1689  0387  00D1               	movwf	___wmul@multiplicand
  1690  0388  3000               	movlw	0
  1691  0389  00D2               	movwf	___wmul@multiplicand+1
  1692  038A  3184  2428  3183   	fcall	___wmul
  1693  038D  0020               	movlb	0	; select bank0
  1694  038E  084F               	movf	?___wmul,w
  1695  038F  3E03               	addlw	3
  1696  0390  00D7               	movwf	??_change+2
  1697  0391  3000               	movlw	0
  1698  0392  3D50               	addwfc	?___wmul+1,w
  1699  0393  00D8               	movwf	??_change+3
  1700  0394  3096               	movlw	150
  1701  0395  00D9               	movwf	??_change+4
  1702  0396  3023               	movlw	35
  1703  0397  00DA               	movwf	??_change+5
  1704  0398  0857               	movf	??_change+2,w
  1705  0399  0759               	addwf	??_change+4,w
  1706  039A  0086               	movwf	6
  1707  039B  0858               	movf	??_change+3,w
  1708  039C  3D5A               	addwfc	??_change+5,w
  1709  039D  0087               	movwf	7
  1710  039E  0801               	movf	1,w
  1711  039F  008F               	movwf	15	;volatile
  1712                           
  1713                           ;ver0.0_20140727.c: 37: PORTE=putdata[ledcount][4];
  1714  03A0  0842               	movf	_ledcount,w
  1715  03A1  00D5               	movwf	??_change
  1716  03A2  01D6               	clrf	??_change+1
  1717  03A3  0855               	movf	??_change,w
  1718  03A4  00CF               	movwf	___wmul@multiplier
  1719  03A5  0856               	movf	??_change+1,w
  1720  03A6  00D0               	movwf	___wmul@multiplier+1
  1721  03A7  3005               	movlw	5
  1722  03A8  00D1               	movwf	___wmul@multiplicand
  1723  03A9  3000               	movlw	0
  1724  03AA  00D2               	movwf	___wmul@multiplicand+1
  1725  03AB  3184  2428  3183   	fcall	___wmul
  1726  03AE  0020               	movlb	0	; select bank0
  1727  03AF  084F               	movf	?___wmul,w
  1728  03B0  3E04               	addlw	4
  1729  03B1  00D7               	movwf	??_change+2
  1730  03B2  3000               	movlw	0
  1731  03B3  3D50               	addwfc	?___wmul+1,w
  1732  03B4  00D8               	movwf	??_change+3
  1733  03B5  3096               	movlw	150
  1734  03B6  00D9               	movwf	??_change+4
  1735  03B7  3023               	movlw	35
  1736  03B8  00DA               	movwf	??_change+5
  1737  03B9  0857               	movf	??_change+2,w
  1738  03BA  0759               	addwf	??_change+4,w
  1739  03BB  0086               	movwf	6
  1740  03BC  0858               	movf	??_change+3,w
  1741  03BD  3D5A               	addwfc	??_change+5,w
  1742  03BE  0087               	movwf	7
  1743  03BF  0801               	movf	1,w
  1744  03C0  0090               	movwf	16	;volatile
  1745                           
  1746                           ;ver0.0_20140727.c: 39: if(ledcount==16)
  1747  03C1  0842               	movf	_ledcount,w
  1748  03C2  3A10               	xorlw	16
  1749  03C3  1D03               	skipz
  1750  03C4  0008               	return
  1751                           
  1752                           ;ver0.0_20140727.c: 40: ledcount=0;
  1753  03C5  01C2               	clrf	_ledcount
  1754  03C6  0008               	return
  1755  03C7                     __end_of_change:	
  1756                           
  1757                           	psect	text4
  1758  0428                     __ptext4:	
  1759 ;; *************** function ___wmul *****************
  1760 ;; Defined at:
  1761 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  multiplier      2   10[BANK0 ] unsigned int 
  1764 ;;  multiplicand    2   12[BANK0 ] unsigned int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  product         2   14[BANK0 ] unsigned int 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  2   10[BANK0 ] unsigned int 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;Total ram usage:        6 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_change
  1787 ;;		_uartget
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           
  1792                           ;psect for function ___wmul
  1793  0428                     ___wmul:	
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1797  0428  0020               	movlb	0	; select bank0
  1798  0429  01D3               	clrf	___wmul@product
  1799  042A  01D4               	clrf	___wmul@product+1
  1800  042B                     l1192:	
  1801  042B  1C4F               	btfss	___wmul@multiplier,0
  1802  042C  2C31               	goto	l285
  1803  042D  0851               	movf	___wmul@multiplicand,w
  1804  042E  07D3               	addwf	___wmul@product,f
  1805  042F  0852               	movf	___wmul@multiplicand+1,w
  1806  0430  3DD4               	addwfc	___wmul@product+1,f
  1807  0431                     l285:	
  1808  0431  3001               	movlw	1
  1809  0432                     u825:	
  1810  0432  35D1               	lslf	___wmul@multiplicand,f
  1811  0433  0DD2               	rlf	___wmul@multiplicand+1,f
  1812  0434  0B89               	decfsz	9,f
  1813  0435  2C32               	goto	u825
  1814  0436  3001               	movlw	1
  1815  0437                     u835:	
  1816  0437  36D0               	lsrf	___wmul@multiplier+1,f
  1817  0438  0CCF               	rrf	___wmul@multiplier,f
  1818  0439  0B89               	decfsz	9,f
  1819  043A  2C37               	goto	u835
  1820  043B  0850               	movf	___wmul@multiplier+1,w
  1821  043C  044F               	iorwf	___wmul@multiplier,w
  1822  043D  1D03               	skipz
  1823  043E  2C2B               	goto	l1192
  1824  043F  0854               	movf	___wmul@product+1,w
  1825  0440  01D0               	clrf	?___wmul+1
  1826  0441  07D0               	addwf	?___wmul+1,f
  1827  0442  0853               	movf	___wmul@product,w
  1828  0443  01CF               	clrf	?___wmul
  1829  0444  07CF               	addwf	?___wmul,f
  1830  0445  0008               	return
  1831  0446                     __end_of___wmul:	
  1832                           
  1833                           	psect	text5
  1834  0463                     __ptext5:	
  1835 ;; *************** function _E2promRead *****************
  1836 ;; Defined at:
  1837 ;;		line 3 in file "sorce.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  adr             1    wreg     unsigned char 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  adr             1   12[BANK0 ] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      unsigned char 
  1844 ;; Registers used:
  1845 ;;		wreg
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;Total ram usage:        3 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    3
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_main
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           
  1866                           ;psect for function _E2promRead
  1867  0463                     _E2promRead:	
  1868                           
  1869                           ;incstack = 0
  1870                           ; Regs used in _E2promRead: [wreg]
  1871                           ;E2promRead@adr stored from wreg
  1872  0463  0020               	movlb	0	; select bank0
  1873  0464  00D1               	movwf	E2promRead@adr
  1874                           
  1875                           ;sorce.c: 5: EEADR = adr;
  1876  0465  0851               	movf	E2promRead@adr,w
  1877  0466  00CF               	movwf	??_E2promRead
  1878  0467  01D0               	clrf	??_E2promRead+1
  1879  0468  084F               	movf	??_E2promRead,w
  1880  0469  0023               	movlb	3	; select bank3
  1881  046A  0091               	movwf	17	;volatile
  1882  046B  0020               	movlb	0	; select bank0
  1883  046C  0850               	movf	??_E2promRead+1,w
  1884  046D  0023               	movlb	3	; select bank3
  1885  046E  0092               	movwf	18	;volatile
  1886                           
  1887                           ;sorce.c: 6: RD = 1;
  1888  046F  1415               	bsf	21,0	;volsfr
  1889                           
  1890                           ;sorce.c: 7: return( EEDATA );
  1891  0470  0813               	movf	19,w	;volatile
  1892  0471  0008               	return
  1893  0472                     __end_of_E2promRead:	
  1894                           
  1895                           	psect	intentry
  1896  0004                     __pintentry:	
  1897 ;; *************** function _InterTimer *****************
  1898 ;; Defined at:
  1899 ;;		line 109 in file "ver0.0_20140727.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    2
  1920 ;; This function calls:
  1921 ;;		i1_uartget
  1922 ;; This function is called by:
  1923 ;;		Interrupt level 1
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927  0004                     _InterTimer:	
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1931  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1932  0005  3180               	pagesel	$
  1933  0006  0020               	movlb	0	; select bank0
  1934  0007  087F               	movf	127,w
  1935  0008  00F6               	movwf	??_InterTimer
  1936                           
  1937                           ;ver0.0_20140727.c: 111: if (TMR0IF == 1) {
  1938  0009  1D0B               	btfss	11,2	;volatile
  1939  000A  2816               	goto	i1l162
  1940                           
  1941                           ;ver0.0_20140727.c: 112: TMR0 = 61 ;
  1942  000B  303D               	movlw	61
  1943  000C  0095               	movwf	21	;volatile
  1944                           
  1945                           ;ver0.0_20140727.c: 113: uartget();
  1946  000D  3181  21B9  3180   	fcall	i1_uartget
  1947                           
  1948                           ;ver0.0_20140727.c: 114: if(RCIF)
  1949  0010  0020               	movlb	0	; select bank0
  1950  0011  1E91               	btfss	17,5	;volatile
  1951  0012  2815               	goto	i1l161
  1952                           
  1953                           ;ver0.0_20140727.c: 115: reservingNow=1;
  1954  0013  01FA               	clrf	_reservingNow
  1955  0014  0AFA               	incf	_reservingNow,f
  1956  0015                     i1l161:	
  1957                           
  1958                           ;ver0.0_20140727.c: 117: TMR0IF = 0 ;
  1959  0015  110B               	bcf	11,2	;volatile
  1960  0016                     i1l162:	
  1961  0016  0876               	movf	??_InterTimer,w
  1962  0017  00FF               	movwf	127
  1963  0018  107E               	bcf	126,0	;clear compiler interrupt flag
  1964  0019  0009               	retfie
  1965  001A                     __end_of_InterTimer:	
  1966                           
  1967                           	psect	text7
  1968  01B9                     __ptext7:	
  1969 ;; *************** function i1_uartget *****************
  1970 ;; Defined at:
  1971 ;;		line 42 in file "ver0.0_20140727.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;		None               void
  1978 ;; Registers used:
  1979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;Total ram usage:       10 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    1
  1992 ;; This function calls:
  1993 ;;		i1___wmul
  1994 ;; This function is called by:
  1995 ;;		_InterTimer
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function i1_uartget
  2001  01B9                     i1_uartget:	
  2002                           
  2003                           ;ver0.0_20140727.c: 78: gettingSuccess=2;
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in i1_uartget: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2007  01B9  3002               	movlw	2
  2008  01BA  0020               	movlb	0	; select bank0
  2009  01BB  00C5               	movwf	??i1_uartget
  2010  01BC  0845               	movf	??i1_uartget,w
  2011  01BD  00E1               	movwf	_gettingSuccess
  2012                           
  2013                           ;ver0.0_20140727.c: 79: for(i=0;i<64;i++)
  2014  01BE  01C0               	clrf	_i
  2015  01BF  3040               	movlw	64
  2016  01C0  0240               	subwf	_i,w
  2017  01C1  1803               	btfsc	3,0
  2018  01C2  29D4               	goto	i1l1086
  2019  01C3                     i1l1080:	
  2020                           
  2021                           ;ver0.0_20140727.c: 80: getdata[i]=0xff;
  2022  01C3  30FF               	movlw	255
  2023  01C4  00C5               	movwf	??i1_uartget
  2024  01C5  0840               	movf	_i,w
  2025  01C6  3E20               	addlw	_getdata& (0+255)
  2026  01C7  0086               	movwf	6
  2027  01C8  3001               	movlw	1	; select bank2/3
  2028  01C9  0087               	movwf	7
  2029  01CA  0845               	movf	??i1_uartget,w
  2030  01CB  0081               	movwf	1
  2031  01CC  3001               	movlw	1
  2032  01CD  00C5               	movwf	??i1_uartget
  2033  01CE  0845               	movf	??i1_uartget,w
  2034  01CF  07C0               	addwf	_i,f
  2035  01D0  3040               	movlw	64
  2036  01D1  0240               	subwf	_i,w
  2037  01D2  1C03               	skipc
  2038  01D3  29C3               	goto	i1l1080
  2039  01D4                     i1l1086:	
  2040                           
  2041                           ;ver0.0_20140727.c: 81: if(gettingSuccess==2){
  2042  01D4  0861               	movf	_gettingSuccess,w
  2043  01D5  3A02               	xorlw	2
  2044  01D6  1D03               	skipz
  2045  01D7  0008               	return
  2046                           
  2047                           ;ver0.0_20140727.c: 82: for(i=1;i<17;i++){
  2048  01D8  01C0               	clrf	_i
  2049  01D9  0AC0               	incf	_i,f
  2050  01DA  3011               	movlw	17
  2051  01DB  0240               	subwf	_i,w
  2052  01DC  1803               	btfsc	3,0
  2053  01DD  2A18               	goto	i1l152
  2054  01DE                     i1l1094:	
  2055                           
  2056                           ;ver0.0_20140727.c: 83: for(j=0;j<2;j++){
  2057  01DE  01C1               	clrf	_j
  2058  01DF  3002               	movlw	2
  2059  01E0  0241               	subwf	_j,w
  2060  01E1  1803               	btfsc	3,0
  2061  01E2  2A10               	goto	i1l1108
  2062  01E3                     i1l1100:	
  2063                           
  2064                           ;ver0.0_20140727.c: 84: n=(i-1)*4+(j+2);
  2065  01E3  0840               	movf	_i,w
  2066  01E4  00C5               	movwf	??i1_uartget
  2067  01E5  3001               	movlw	1
  2068  01E6                     u70_25:	
  2069  01E6  35C5               	lslf	??i1_uartget,f
  2070  01E7  3EFF               	addlw	-1
  2071  01E8  1D03               	skipz
  2072  01E9  29E6               	goto	u70_25
  2073  01EA  3545               	lslf	??i1_uartget,w
  2074  01EB  0741               	addwf	_j,w
  2075  01EC  3EFE               	addlw	254
  2076  01ED  00C6               	movwf	??i1_uartget+1
  2077  01EE  0846               	movf	??i1_uartget+1,w
  2078  01EF  00C3               	movwf	_n
  2079                           
  2080                           ;ver0.0_20140727.c: 85: getKeeping[i][j]=getdata[n];
  2081  01F0  0843               	movf	_n,w
  2082  01F1  3E20               	addlw	_getdata& (0+255)
  2083  01F2  0086               	movwf	6
  2084  01F3  3001               	movlw	1	; select bank2/3
  2085  01F4  0087               	movwf	7
  2086  01F5  0801               	movf	1,w
  2087  01F6  00C5               	movwf	??i1_uartget
  2088  01F7  0840               	movf	_i,w
  2089  01F8  00C6               	movwf	??i1_uartget+1
  2090  01F9  3001               	movlw	1
  2091  01FA                     u71_25:	
  2092  01FA  35C6               	lslf	??i1_uartget+1,f
  2093  01FB  0B89               	decfsz	9,f
  2094  01FC  29FA               	goto	u71_25
  2095  01FD  3020               	movlw	_getKeeping& (0+255)
  2096  01FE  0746               	addwf	??i1_uartget+1,w
  2097  01FF  00C7               	movwf	??i1_uartget+2
  2098  0200  0841               	movf	_j,w
  2099  0201  0747               	addwf	??i1_uartget+2,w
  2100  0202  00C8               	movwf	??i1_uartget+3
  2101  0203  0848               	movf	??i1_uartget+3,w
  2102  0204  0086               	movwf	6
  2103  0205  0187               	clrf	7
  2104  0206  0845               	movf	??i1_uartget,w
  2105  0207  0081               	movwf	1
  2106  0208  3001               	movlw	1
  2107  0209  00C5               	movwf	??i1_uartget
  2108  020A  0845               	movf	??i1_uartget,w
  2109  020B  07C1               	addwf	_j,f
  2110  020C  3002               	movlw	2
  2111  020D  0241               	subwf	_j,w
  2112  020E  1C03               	skipc
  2113  020F  29E3               	goto	i1l1100
  2114  0210                     i1l1108:	
  2115  0210  3001               	movlw	1
  2116  0211  00C5               	movwf	??i1_uartget
  2117  0212  0845               	movf	??i1_uartget,w
  2118  0213  07C0               	addwf	_i,f
  2119  0214  3011               	movlw	17
  2120  0215  0240               	subwf	_i,w
  2121  0216  1C03               	skipc
  2122  0217  29DE               	goto	i1l1094
  2123  0218                     i1l152:	
  2124                           
  2125                           ;ver0.0_20140727.c: 86: }
  2126                           ;ver0.0_20140727.c: 87: }
  2127                           ;ver0.0_20140727.c: 88: for(i=1;i<17;i++){
  2128  0218  01C0               	clrf	_i
  2129  0219  0AC0               	incf	_i,f
  2130  021A  3011               	movlw	17
  2131  021B  0240               	subwf	_i,w
  2132  021C  1803               	btfsc	3,0
  2133  021D  2AAC               	goto	i1l1122
  2134  021E                     i1l1116:	
  2135                           
  2136                           ;ver0.0_20140727.c: 90: putdata[i][0]=(getKeeping[i][1]&0b00011111)<<1;
  2137  021E  1403               	setc
  2138  021F  0D40               	rlf	_i,w
  2139  0220  3E20               	addlw	_getKeeping& (0+255)
  2140  0221  0086               	movwf	6
  2141  0222  0187               	clrf	7
  2142  0223  0801               	movf	1,w
  2143  0224  391F               	andlw	31
  2144  0225  0709               	addwf	9,w
  2145  0226  00C5               	movwf	??i1_uartget
  2146  0227  0840               	movf	_i,w
  2147  0228  00C6               	movwf	??i1_uartget+1
  2148  0229  01C7               	clrf	??i1_uartget+2
  2149  022A  0846               	movf	??i1_uartget+1,w
  2150  022B  00F0               	movwf	i1___wmul@multiplier
  2151  022C  0847               	movf	??i1_uartget+2,w
  2152  022D  00F1               	movwf	i1___wmul@multiplier+1
  2153  022E  3005               	movlw	5
  2154  022F  00F2               	movwf	i1___wmul@multiplicand
  2155  0230  3000               	movlw	0
  2156  0231  00F3               	movwf	i1___wmul@multiplicand+1
  2157  0232  3184  2446  3181   	fcall	i1___wmul
  2158  0235  3096               	movlw	150
  2159  0236  0020               	movlb	0	; select bank0
  2160  0237  00C8               	movwf	??i1_uartget+3
  2161  0238  3023               	movlw	35
  2162  0239  00C9               	movwf	??i1_uartget+4
  2163  023A  0870               	movf	?i1___wmul,w
  2164  023B  0748               	addwf	??i1_uartget+3,w
  2165  023C  00CA               	movwf	??i1_uartget+5
  2166  023D  0871               	movf	?i1___wmul+1,w
  2167  023E  3D49               	addwfc	??i1_uartget+4,w
  2168  023F  00CB               	movwf	??i1_uartget+6
  2169  0240  084A               	movf	??i1_uartget+5,w
  2170  0241  0086               	movwf	6
  2171  0242  084B               	movf	??i1_uartget+6,w
  2172  0243  0087               	movwf	7
  2173  0244  0845               	movf	??i1_uartget,w
  2174  0245  0081               	movwf	1
  2175                           
  2176                           ;ver0.0_20140727.c: 92: putdata[i][1]=getKeeping[i][0];
  2177  0246  3540               	lslf	_i,w
  2178  0247  3E20               	addlw	_getKeeping& (0+255)
  2179  0248  0086               	movwf	6
  2180  0249  0187               	clrf	7
  2181  024A  0801               	movf	1,w
  2182  024B  00C5               	movwf	??i1_uartget
  2183  024C  0840               	movf	_i,w
  2184  024D  00C6               	movwf	??i1_uartget+1
  2185  024E  01C7               	clrf	??i1_uartget+2
  2186  024F  0846               	movf	??i1_uartget+1,w
  2187  0250  00F0               	movwf	i1___wmul@multiplier
  2188  0251  0847               	movf	??i1_uartget+2,w
  2189  0252  00F1               	movwf	i1___wmul@multiplier+1
  2190  0253  3005               	movlw	5
  2191  0254  00F2               	movwf	i1___wmul@multiplicand
  2192  0255  3000               	movlw	0
  2193  0256  00F3               	movwf	i1___wmul@multiplicand+1
  2194  0257  3184  2446  3181   	fcall	i1___wmul
  2195  025A  0870               	movf	?i1___wmul,w
  2196  025B  3E01               	addlw	1
  2197  025C  0020               	movlb	0	; select bank0
  2198  025D  00C8               	movwf	??i1_uartget+3
  2199  025E  3000               	movlw	0
  2200  025F  3D71               	addwfc	?i1___wmul+1,w
  2201  0260  00C9               	movwf	??i1_uartget+4
  2202  0261  3096               	movlw	150
  2203  0262  00CA               	movwf	??i1_uartget+5
  2204  0263  3023               	movlw	35
  2205  0264  00CB               	movwf	??i1_uartget+6
  2206  0265  0848               	movf	??i1_uartget+3,w
  2207  0266  074A               	addwf	??i1_uartget+5,w
  2208  0267  00CC               	movwf	??i1_uartget+7
  2209  0268  0849               	movf	??i1_uartget+4,w
  2210  0269  3D4B               	addwfc	??i1_uartget+6,w
  2211  026A  00CD               	movwf	??i1_uartget+8
  2212  026B  084C               	movf	??i1_uartget+7,w
  2213  026C  0086               	movwf	6
  2214  026D  084D               	movf	??i1_uartget+8,w
  2215  026E  0087               	movwf	7
  2216  026F  0845               	movf	??i1_uartget,w
  2217  0270  0081               	movwf	1
  2218                           
  2219                           ;ver0.0_20140727.c: 94: putdata[i][1]=(getKeeping[i][1]&0b11100000)>>5;
  2220  0271  1403               	setc
  2221  0272  0D40               	rlf	_i,w
  2222  0273  3E20               	addlw	_getKeeping& (0+255)
  2223  0274  0086               	movwf	6
  2224  0275  0187               	clrf	7
  2225  0276  0801               	movf	1,w
  2226  0277  00C5               	movwf	??i1_uartget
  2227  0278  3005               	movlw	5
  2228  0279                     u75_25:	
  2229  0279  36C5               	lsrf	??i1_uartget,f
  2230  027A  0B89               	decfsz	9,f
  2231  027B  2A79               	goto	u75_25
  2232  027C  0845               	movf	??i1_uartget,w
  2233  027D  3907               	andlw	7
  2234  027E  00C6               	movwf	??i1_uartget+1
  2235  027F  0840               	movf	_i,w
  2236  0280  00C7               	movwf	??i1_uartget+2
  2237  0281  01C8               	clrf	??i1_uartget+3
  2238  0282  0847               	movf	??i1_uartget+2,w
  2239  0283  00F0               	movwf	i1___wmul@multiplier
  2240  0284  0848               	movf	??i1_uartget+3,w
  2241  0285  00F1               	movwf	i1___wmul@multiplier+1
  2242  0286  3005               	movlw	5
  2243  0287  00F2               	movwf	i1___wmul@multiplicand
  2244  0288  3000               	movlw	0
  2245  0289  00F3               	movwf	i1___wmul@multiplicand+1
  2246  028A  3184  2446  3181   	fcall	i1___wmul
  2247  028D  0870               	movf	?i1___wmul,w
  2248  028E  3E01               	addlw	1
  2249  028F  0020               	movlb	0	; select bank0
  2250  0290  00C9               	movwf	??i1_uartget+4
  2251  0291  3000               	movlw	0
  2252  0292  3D71               	addwfc	?i1___wmul+1,w
  2253  0293  00CA               	movwf	??i1_uartget+5
  2254  0294  3096               	movlw	150
  2255  0295  00CB               	movwf	??i1_uartget+6
  2256  0296  3023               	movlw	35
  2257  0297  00CC               	movwf	??i1_uartget+7
  2258  0298  0849               	movf	??i1_uartget+4,w
  2259  0299  074B               	addwf	??i1_uartget+6,w
  2260  029A  00CD               	movwf	??i1_uartget+8
  2261  029B  084A               	movf	??i1_uartget+5,w
  2262  029C  3D4C               	addwfc	??i1_uartget+7,w
  2263  029D  00CE               	movwf	??i1_uartget+9
  2264  029E  084D               	movf	??i1_uartget+8,w
  2265  029F  0086               	movwf	6
  2266  02A0  084E               	movf	??i1_uartget+9,w
  2267  02A1  0087               	movwf	7
  2268  02A2  0846               	movf	??i1_uartget+1,w
  2269  02A3  0081               	movwf	1
  2270  02A4  3001               	movlw	1
  2271  02A5  00C5               	movwf	??i1_uartget
  2272  02A6  0845               	movf	??i1_uartget,w
  2273  02A7  07C0               	addwf	_i,f
  2274  02A8  3011               	movlw	17
  2275  02A9  0240               	subwf	_i,w
  2276  02AA  1C03               	skipc
  2277  02AB  2A1E               	goto	i1l1116
  2278  02AC                     i1l1122:	
  2279                           
  2280                           ;ver0.0_20140727.c: 95: }
  2281                           ;ver0.0_20140727.c: 96: putdata[2][0]=putdata[2][0]|0x40;
  2282  02AC  3096               	movlw	150
  2283  02AD  0086               	movwf	6
  2284  02AE  3023               	movlw	35
  2285  02AF  0087               	movwf	7
  2286  02B0  314A               	addfsr 1,10
  2287  02B1  0801               	movf	1,w
  2288  02B2  3840               	iorlw	64
  2289  02B3  00C5               	movwf	??i1_uartget
  2290  02B4  30A0               	movlw	160
  2291  02B5  0086               	movwf	6
  2292  02B6  3023               	movlw	35
  2293  02B7  0087               	movwf	7
  2294  02B8  0845               	movf	??i1_uartget,w
  2295  02B9  0081               	movwf	1
  2296                           
  2297                           ;ver0.0_20140727.c: 97: putdata[4][0]=putdata[4][0]|0x20;
  2298  02BA  3096               	movlw	150
  2299  02BB  0086               	movwf	6
  2300  02BC  3023               	movlw	35
  2301  02BD  0087               	movwf	7
  2302  02BE  3154               	addfsr 1,20
  2303  02BF  0801               	movf	1,w
  2304  02C0  3820               	iorlw	32
  2305  02C1  00C5               	movwf	??i1_uartget
  2306  02C2  30AA               	movlw	170
  2307  02C3  0086               	movwf	6
  2308  02C4  3023               	movlw	35
  2309  02C5  0087               	movwf	7
  2310  02C6  0845               	movf	??i1_uartget,w
  2311  02C7  0081               	movwf	1
  2312                           
  2313                           ;ver0.0_20140727.c: 98: putdata[6][2]=putdata[6][2]|0x01;
  2314  02C8  30B6               	movlw	182
  2315  02C9  0086               	movwf	6
  2316  02CA  3023               	movlw	35
  2317  02CB  0087               	movwf	7
  2318  02CC  0801               	movf	1,w
  2319  02CD  3801               	iorlw	1
  2320  02CE  00C5               	movwf	??i1_uartget
  2321  02CF  30B6               	movlw	182
  2322  02D0  0086               	movwf	6
  2323  02D1  3023               	movlw	35
  2324  02D2  0087               	movwf	7
  2325  02D3  0845               	movf	??i1_uartget,w
  2326  02D4  0081               	movwf	1
  2327                           
  2328                           ;ver0.0_20140727.c: 99: putdata[8][2]=putdata[8][2]|0x02;
  2329  02D5  30C0               	movlw	192
  2330  02D6  0086               	movwf	6
  2331  02D7  3023               	movlw	35
  2332  02D8  0087               	movwf	7
  2333  02D9  0801               	movf	1,w
  2334  02DA  3802               	iorlw	2
  2335  02DB  00C5               	movwf	??i1_uartget
  2336  02DC  30C0               	movlw	192
  2337  02DD  0086               	movwf	6
  2338  02DE  3023               	movlw	35
  2339  02DF  0087               	movwf	7
  2340  02E0  0845               	movf	??i1_uartget,w
  2341  02E1  0081               	movwf	1
  2342                           
  2343                           ;ver0.0_20140727.c: 100: putdata[10][2]=putdata[10][2]|0x04;
  2344  02E2  30CA               	movlw	202
  2345  02E3  0086               	movwf	6
  2346  02E4  3023               	movlw	35
  2347  02E5  0087               	movwf	7
  2348  02E6  0801               	movf	1,w
  2349  02E7  3804               	iorlw	4
  2350  02E8  00C5               	movwf	??i1_uartget
  2351  02E9  30CA               	movlw	202
  2352  02EA  0086               	movwf	6
  2353  02EB  3023               	movlw	35
  2354  02EC  0087               	movwf	7
  2355  02ED  0845               	movf	??i1_uartget,w
  2356  02EE  0081               	movwf	1
  2357                           
  2358                           ;ver0.0_20140727.c: 101: putdata[12][2]=putdata[12][2]|0x08;
  2359  02EF  30D4               	movlw	212
  2360  02F0  0086               	movwf	6
  2361  02F1  3023               	movlw	35
  2362  02F2  0087               	movwf	7
  2363  02F3  0801               	movf	1,w
  2364  02F4  3808               	iorlw	8
  2365  02F5  00C5               	movwf	??i1_uartget
  2366  02F6  30D4               	movlw	212
  2367  02F7  0086               	movwf	6
  2368  02F8  3023               	movlw	35
  2369  02F9  0087               	movwf	7
  2370  02FA  0845               	movf	??i1_uartget,w
  2371  02FB  0081               	movwf	1
  2372                           
  2373                           ;ver0.0_20140727.c: 102: putdata[14][3]=putdata[14][3]|0x01;
  2374  02FC  30DF               	movlw	223
  2375  02FD  0086               	movwf	6
  2376  02FE  3023               	movlw	35
  2377  02FF  0087               	movwf	7
  2378  0300  0801               	movf	1,w
  2379  0301  3801               	iorlw	1
  2380  0302  00C5               	movwf	??i1_uartget
  2381  0303  30DF               	movlw	223
  2382  0304  0086               	movwf	6
  2383  0305  3023               	movlw	35
  2384  0306  0087               	movwf	7
  2385  0307  0845               	movf	??i1_uartget,w
  2386  0308  0081               	movwf	1
  2387                           
  2388                           ;ver0.0_20140727.c: 103: putdata[16][3]=putdata[16][3]|0x02;
  2389  0309  30E9               	movlw	233
  2390  030A  0086               	movwf	6
  2391  030B  3023               	movlw	35
  2392  030C  0087               	movwf	7
  2393  030D  0801               	movf	1,w
  2394  030E  3802               	iorlw	2
  2395  030F  00C5               	movwf	??i1_uartget
  2396  0310  30E9               	movlw	233
  2397  0311  0086               	movwf	6
  2398  0312  3023               	movlw	35
  2399  0313  0087               	movwf	7
  2400  0314  0845               	movf	??i1_uartget,w
  2401  0315  0081               	movwf	1
  2402  0316  0008               	return
  2403  0317                     __end_ofi1_uartget:	
  2404                           
  2405                           	psect	text8
  2406  0446                     __ptext8:	
  2407 ;; *************** function i1___wmul *****************
  2408 ;; Defined at:
  2409 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  multiplier      2    0[COMMON] unsigned int 
  2412 ;;  multiplicand    2    2[COMMON] unsigned int 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  __wmul          2    4[COMMON] unsigned int 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  2    0[COMMON] unsigned int 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2427 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2428 ;;Total ram usage:        6 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		i1_uartget
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function i1___wmul
  2439  0446                     i1___wmul:	
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2443  0446  01F4               	clrf	i1___wmul@product
  2444  0447  01F5               	clrf	i1___wmul@product+1
  2445  0448                     i1l950:	
  2446  0448  1C70               	btfss	i1___wmul@multiplier,0
  2447  0449  2C4E               	goto	i1l285
  2448  044A  0872               	movf	i1___wmul@multiplicand,w
  2449  044B  07F4               	addwf	i1___wmul@product,f
  2450  044C  0873               	movf	i1___wmul@multiplicand+1,w
  2451  044D  3DF5               	addwfc	i1___wmul@product+1,f
  2452  044E                     i1l285:	
  2453  044E  3001               	movlw	1
  2454  044F                     u48_25:	
  2455  044F  35F2               	lslf	i1___wmul@multiplicand,f
  2456  0450  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2457  0451  0B89               	decfsz	9,f
  2458  0452  2C4F               	goto	u48_25
  2459  0453  3001               	movlw	1
  2460  0454                     u49_25:	
  2461  0454  36F1               	lsrf	i1___wmul@multiplier+1,f
  2462  0455  0CF0               	rrf	i1___wmul@multiplier,f
  2463  0456  0B89               	decfsz	9,f
  2464  0457  2C54               	goto	u49_25
  2465  0458  0871               	movf	i1___wmul@multiplier+1,w
  2466  0459  0470               	iorwf	i1___wmul@multiplier,w
  2467  045A  1D03               	skipz
  2468  045B  2C48               	goto	i1l950
  2469  045C  0875               	movf	i1___wmul@product+1,w
  2470  045D  01F1               	clrf	?i1___wmul+1
  2471  045E  07F1               	addwf	?i1___wmul+1,f
  2472  045F  0874               	movf	i1___wmul@product,w
  2473  0460  01F0               	clrf	?i1___wmul
  2474  0461  07F0               	addwf	?i1___wmul,f
  2475  0462  0008               	return
  2476  0463                     __end_ofi1___wmul:	
  2477  007E                     btemp	set	126	;btemp
  2478  007E                     pic14e$flags	set	126
  2479  007E                     wtemp	set	126
  2480  007E                     wtemp0	set	126
  2481  0080                     wtemp1	set	128
  2482  0082                     wtemp2	set	130
  2483  0084                     wtemp3	set	132
  2484  0086                     wtemp4	set	134
  2485  0088                     wtemp5	set	136
  2486  007F                     wtemp6	set	127
  2487  007E                     ttemp	set	126
  2488  007E                     ttemp0	set	126
  2489  0081                     ttemp1	set	129
  2490  0084                     ttemp2	set	132
  2491  0087                     ttemp3	set	135
  2492  007F                     ttemp4	set	127
  2493  007E                     ltemp	set	126
  2494  007E                     ltemp0	set	126
  2495  0082                     ltemp1	set	130
  2496  0086                     ltemp2	set	134
  2497  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         240
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     28      66
    BANK1            80      0      80
    BANK2            80      0      70
    BANK3            80      0      48
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    i1_uartget->i1___wmul

Critical Paths under _main in BANK0

    _main->_uartget
    _uartget->___wmul
    _change->___wmul

Critical Paths under _InterTimer in BANK0

    _InterTimer->i1_uartget

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2380
                                             26 BANK0      2     2      0
                         _E2promRead
                             _change
                             _setpin
                            _uartget
 ---------------------------------------------------------------------------------
 (1) _uartget                                             10    10      0    1176
                                             16 BANK0     10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _change                                               6     6      0    1176
                                             16 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1176
                                             10 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           1     1      0     248
                                              6 COMMON     1     1      0
                          i1_uartget
 ---------------------------------------------------------------------------------
 (4) i1_uartget                                           10    10      0     248
                                              0 BANK0     10    10      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     248
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   _change
     ___wmul
   _setpin
   _uartget
     ___wmul

 _InterTimer (ROOT)
   i1_uartget
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      46       9       87.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     114      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     114      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep  2 19:54:17 2014

            ?_E2promRead 0070                        _i 0040                        _j 0041  
                      _n 0043              __CFG_CP$OFF 0000                       _RD 0CA8  
    ___wmul@multiplicand 0051         i1___wmul@product 0074              __CFG_LVP$ON 0000  
                    l152 00BA                      l173 03F9                      l176 03FF  
                    l285 0431                      _GIE 005F                      _RD4 007C  
                    _RD5 007D             __CFG_CPD$OFF 0000                      u825 0432  
                    u835 0437                      u925 0088                      u935 009C  
                    u975 011B                      _led 01A0             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     l1230 0322  
                   l1252 0065                     l1192 042B                     l1280 00B2  
                   l1272 0085                     l1266 0080                     l1258 0076  
                   l1294 014E                     l1288 00C0                     _LATD 010F  
                   _RCIF 008D                     _TMR0 0015                     _TRMT 0CF1  
                   _WPUB 020D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 03C7                     _fulg 0077                     _time 0044  
                   _test 00D0                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     _stoc 00A0                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 001A  
                   ttemp 007E                     wtemp 007E            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    _EEADR 0191            __CFG_WDTE$OFF 0000  
                  i1l152 0218                    i1l161 0015                    i1l162 0016  
                  i1l285 044E                    i1l950 0448                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _PORTE 0010                    u70_25 01E6                    u71_25 01FA  
                  u48_25 044F                    _TRISA 008C                    _TRISB 008D  
                  u49_25 0454                    _TRISC 008E                    _TRISD 008F  
                  _TRISE 0090                    u75_25 0279                    _TXREG 019A  
                  _TXSTA 019E            __CFG_PWRTE$ON 0000      __size_of_E2promRead 000F  
       __end_ofi1___wmul 0463                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080          __end_of_uartget 01B9  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F      i1___wmul@multiplier 0070  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 001C  
           __end_of_main 0406       __size_ofi1_uartget 015E                   ??_main 005F  
             _InterTimer 0004                   _EEDATA 0193                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELD 018F                   _ANSELE 0190  
                 _LCDCON 0791                   _LCDSE2 079A                   i1l1100 01E3  
                 i1l1122 02AC                   i1l1116 021E                   i1l1108 0210  
                 i1l1080 01C3                   i1l1094 01DE                   i1l1086 01D4  
         _gettingSuccess 0061                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TRISC6 0476                   _TRISC7 0477  
                 _nWPUEN 04AF                   ___wmul 0428           __CFG_STVREN$ON 0000  
                 _change 0317                   _getNum 0078                   _setpin 0406  
          E2promRead@adr 0051                ??_uartget 0055  __end_of__initialization 0057  
      __end_ofi1_uartget 0317           __pcstackCOMMON 0070             ??_E2promRead 004F  
            ?_InterTimer 0070                ?i1___wmul 0070               __pbssBANK0 0020  
             __pbssBANK1 00A0               __pbssBANK2 0120               __pbssBANK3 01A0  
     __end_of_E2promRead 0472          __CFG_VCAPEN$OFF 0000               __pmaintext 03C7  
                ?___wmul 004F                  ?_change 0070               _getKeeping 0020  
             __pintentry 0004                  _CCP1CON 0293                  _CCP2CON 029A  
                _BAUDCON 019F                  ?_setpin 0070               ??i1___wmul 0074  
                _CPSCON0 001E                  _CPSCON1 001F           main@individual 0060  
    __size_of_InterTimer 0016          __size_of___wmul 001E          __size_of_change 00B0  
                __ptext1 005B                  __ptext2 0406                  __ptext3 0317  
                __ptext4 0428                  __ptext5 0463                  __ptext7 01B9  
                __ptext8 0446          __size_of_setpin 0022                  _getdata 0120  
                _onetime 0079                  _uartget 005B                  _putdata 2396  
                clrloop0 0473     end_of_initialization 0057    i1___wmul@multiplicand 0072  
       __CFG_FOSC$INTOSC 0000                i1_uartget 01B9           __end_of___wmul 0446  
         __end_of_change 03C7             ??_InterTimer 0076           __end_of_setpin 0428  
    start_initialization 001C        __size_ofi1___wmul 001D       __end_of_InterTimer 001A  
             ?i1_uartget 0070                 ??___wmul 0053                 ??_change 0055  
               ??_setpin 004F              __pbssBIGRAM 2396              __pbssCOMMON 0077  
              ___latbits 0003            __pcstackBANK0 0045                __pnvBANK0 0061  
               ?_uartget 0070           ___wmul@product 0053                clear_ram0 0472  
              _resetFlug 007B              ??i1_uartget 0045        ___wmul@multiplier 004F  
               i1___wmul 0446         __size_of_uartget 015E                 _ledcount 0042  
          __size_of_main 003F               _E2promRead 0463             _reservingNow 007A  
            pic14e$flags 007E                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095  
