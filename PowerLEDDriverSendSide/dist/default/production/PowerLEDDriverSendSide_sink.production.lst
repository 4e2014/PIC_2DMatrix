

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Aug 25 03:22:55 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x620,48
    28                           	dabs	1,0x5CB,37
    29                           	dabs	1,0x239B,0,_putdata
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000D                     	;# 
    45  000E                     	;# 
    46  000F                     	;# 
    47  0010                     	;# 
    48  0011                     	;# 
    49  0012                     	;# 
    50  0013                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0016                     	;# 
    54  0017                     	;# 
    55  0018                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001E                     	;# 
    61  001F                     	;# 
    62  008C                     	;# 
    63  008D                     	;# 
    64  008E                     	;# 
    65  008F                     	;# 
    66  0090                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  010C                     	;# 
    82  010D                     	;# 
    83  010E                     	;# 
    84  010F                     	;# 
    85  0110                     	;# 
    86  0111                     	;# 
    87  0112                     	;# 
    88  0113                     	;# 
    89  0114                     	;# 
    90  0115                     	;# 
    91  0116                     	;# 
    92  0117                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  018F                     	;# 
   101  0190                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0193                     	;# 
   108  0194                     	;# 
   109  0195                     	;# 
   110  0196                     	;# 
   111  0199                     	;# 
   112  019A                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019B                     	;# 
   116  019B                     	;# 
   117  019C                     	;# 
   118  019C                     	;# 
   119  019D                     	;# 
   120  019E                     	;# 
   121  019F                     	;# 
   122  020D                     	;# 
   123  0210                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0215                     	;# 
   129  0215                     	;# 
   130  0216                     	;# 
   131  0217                     	;# 
   132  0291                     	;# 
   133  0291                     	;# 
   134  0292                     	;# 
   135  0293                     	;# 
   136  0294                     	;# 
   137  0295                     	;# 
   138  0295                     	;# 
   139  0296                     	;# 
   140  0298                     	;# 
   141  0298                     	;# 
   142  0299                     	;# 
   143  029A                     	;# 
   144  029B                     	;# 
   145  029C                     	;# 
   146  029C                     	;# 
   147  029D                     	;# 
   148  029E                     	;# 
   149  029F                     	;# 
   150  0311                     	;# 
   151  0311                     	;# 
   152  0312                     	;# 
   153  0313                     	;# 
   154  0314                     	;# 
   155  0315                     	;# 
   156  0315                     	;# 
   157  0316                     	;# 
   158  0318                     	;# 
   159  0318                     	;# 
   160  0319                     	;# 
   161  031A                     	;# 
   162  031C                     	;# 
   163  031C                     	;# 
   164  031D                     	;# 
   165  031E                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  0415                     	;# 
   170  0416                     	;# 
   171  0417                     	;# 
   172  041C                     	;# 
   173  041D                     	;# 
   174  041E                     	;# 
   175  0791                     	;# 
   176  0792                     	;# 
   177  0793                     	;# 
   178  0794                     	;# 
   179  0795                     	;# 
   180  0798                     	;# 
   181  0799                     	;# 
   182  079A                     	;# 
   183  07A0                     	;# 
   184  07A1                     	;# 
   185  07A2                     	;# 
   186  07A3                     	;# 
   187  07A4                     	;# 
   188  07A5                     	;# 
   189  07A6                     	;# 
   190  07A7                     	;# 
   191  07A8                     	;# 
   192  07A9                     	;# 
   193  07AA                     	;# 
   194  07AB                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE9                     	;# 
   201  0FEA                     	;# 
   202  0FEB                     	;# 
   203  0FED                     	;# 
   204  0FEE                     	;# 
   205  0FEF                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  008F                     	;# 
   241  0090                     	;# 
   242  0091                     	;# 
   243  0092                     	;# 
   244  0093                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  0110                     	;# 
   261  0111                     	;# 
   262  0112                     	;# 
   263  0113                     	;# 
   264  0114                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0117                     	;# 
   268  0118                     	;# 
   269  0119                     	;# 
   270  011A                     	;# 
   271  011B                     	;# 
   272  011D                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  018F                     	;# 
   276  0190                     	;# 
   277  0191                     	;# 
   278  0191                     	;# 
   279  0192                     	;# 
   280  0193                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0194                     	;# 
   284  0195                     	;# 
   285  0196                     	;# 
   286  0199                     	;# 
   287  019A                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019C                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020D                     	;# 
   298  0210                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0291                     	;# 
   308  0291                     	;# 
   309  0292                     	;# 
   310  0293                     	;# 
   311  0294                     	;# 
   312  0295                     	;# 
   313  0295                     	;# 
   314  0296                     	;# 
   315  0298                     	;# 
   316  0298                     	;# 
   317  0299                     	;# 
   318  029A                     	;# 
   319  029B                     	;# 
   320  029C                     	;# 
   321  029C                     	;# 
   322  029D                     	;# 
   323  029E                     	;# 
   324  029F                     	;# 
   325  0311                     	;# 
   326  0311                     	;# 
   327  0312                     	;# 
   328  0313                     	;# 
   329  0314                     	;# 
   330  0315                     	;# 
   331  0315                     	;# 
   332  0316                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  031C                     	;# 
   338  031C                     	;# 
   339  031D                     	;# 
   340  031E                     	;# 
   341  0394                     	;# 
   342  0395                     	;# 
   343  0396                     	;# 
   344  0415                     	;# 
   345  0416                     	;# 
   346  0417                     	;# 
   347  041C                     	;# 
   348  041D                     	;# 
   349  041E                     	;# 
   350  0791                     	;# 
   351  0792                     	;# 
   352  0793                     	;# 
   353  0794                     	;# 
   354  0795                     	;# 
   355  0798                     	;# 
   356  0799                     	;# 
   357  079A                     	;# 
   358  07A0                     	;# 
   359  07A1                     	;# 
   360  07A2                     	;# 
   361  07A3                     	;# 
   362  07A4                     	;# 
   363  07A5                     	;# 
   364  07A6                     	;# 
   365  07A7                     	;# 
   366  07A8                     	;# 
   367  07A9                     	;# 
   368  07AA                     	;# 
   369  07AB                     	;# 
   370  0FE4                     	;# 
   371  0FE5                     	;# 
   372  0FE6                     	;# 
   373  0FE7                     	;# 
   374  0FE8                     	;# 
   375  0FE9                     	;# 
   376  0FEA                     	;# 
   377  0FEB                     	;# 
   378  0FED                     	;# 
   379  0FEE                     	;# 
   380  0FEF                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000F                     	;# 
   397  0010                     	;# 
   398  0011                     	;# 
   399  0012                     	;# 
   400  0013                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  010E                     	;# 
   434  010F                     	;# 
   435  0110                     	;# 
   436  0111                     	;# 
   437  0112                     	;# 
   438  0113                     	;# 
   439  0114                     	;# 
   440  0115                     	;# 
   441  0116                     	;# 
   442  0117                     	;# 
   443  0118                     	;# 
   444  0119                     	;# 
   445  011A                     	;# 
   446  011B                     	;# 
   447  011D                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  018F                     	;# 
   451  0190                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0199                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020D                     	;# 
   473  0210                     	;# 
   474  0211                     	;# 
   475  0212                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0215                     	;# 
   479  0215                     	;# 
   480  0216                     	;# 
   481  0217                     	;# 
   482  0291                     	;# 
   483  0291                     	;# 
   484  0292                     	;# 
   485  0293                     	;# 
   486  0294                     	;# 
   487  0295                     	;# 
   488  0295                     	;# 
   489  0296                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  029A                     	;# 
   494  029B                     	;# 
   495  029C                     	;# 
   496  029C                     	;# 
   497  029D                     	;# 
   498  029E                     	;# 
   499  029F                     	;# 
   500  0311                     	;# 
   501  0311                     	;# 
   502  0312                     	;# 
   503  0313                     	;# 
   504  0314                     	;# 
   505  0315                     	;# 
   506  0315                     	;# 
   507  0316                     	;# 
   508  0318                     	;# 
   509  0318                     	;# 
   510  0319                     	;# 
   511  031A                     	;# 
   512  031C                     	;# 
   513  031C                     	;# 
   514  031D                     	;# 
   515  031E                     	;# 
   516  0394                     	;# 
   517  0395                     	;# 
   518  0396                     	;# 
   519  0415                     	;# 
   520  0416                     	;# 
   521  0417                     	;# 
   522  041C                     	;# 
   523  041D                     	;# 
   524  041E                     	;# 
   525  0791                     	;# 
   526  0792                     	;# 
   527  0793                     	;# 
   528  0794                     	;# 
   529  0795                     	;# 
   530  0798                     	;# 
   531  0799                     	;# 
   532  079A                     	;# 
   533  07A0                     	;# 
   534  07A1                     	;# 
   535  07A2                     	;# 
   536  07A3                     	;# 
   537  07A4                     	;# 
   538  07A5                     	;# 
   539  07A6                     	;# 
   540  07A7                     	;# 
   541  07A8                     	;# 
   542  07A9                     	;# 
   543  07AA                     	;# 
   544  07AB                     	;# 
   545  0FE4                     	;# 
   546  0FE5                     	;# 
   547  0FE6                     	;# 
   548  0FE7                     	;# 
   549  0FE8                     	;# 
   550  0FE9                     	;# 
   551  0FEA                     	;# 
   552  0FEB                     	;# 
   553  0FED                     	;# 
   554  0FEE                     	;# 
   555  0FEF                     	;_putdata
   556  000C                     _PORTA	set	12
   557  000D                     _PORTB	set	13
   558  000E                     _PORTC	set	14
   559  000F                     _PORTD	set	15
   560  0010                     _PORTE	set	16
   561  0015                     _TMR0	set	21
   562  005F                     _GIE	set	95
   563  008D                     _RCIF	set	141
   564  007C                     _RD4	set	124
   565  007D                     _RD5	set	125
   566  005D                     _TMR0IE	set	93
   567  005A                     _TMR0IF	set	90
   568  0095                     _OPTION_REG	set	149
   569  0099                     _OSCCON	set	153
   570  008C                     _TRISA	set	140
   571  008D                     _TRISB	set	141
   572  008E                     _TRISC	set	142
   573  008F                     _TRISD	set	143
   574  0090                     _TRISE	set	144
   575  0476                     _TRISC6	set	1142
   576  0477                     _TRISC7	set	1143
   577  04AF                     _nWPUEN	set	1199
   578  0191                     _EEADR	set	401
   579  018C                     _ANSELA	set	396
   580  018D                     _ANSELB	set	397
   581  018F                     _ANSELD	set	399
   582  0190                     _ANSELE	set	400
   583  019F                     _BAUDCON	set	415
   584  0193                     _EEDATA	set	403
   585  0199                     _RCREG	set	409
   586  019D                     _RCSTA	set	413
   587  019B                     _SPBRG	set	411
   588  019A                     _TXREG	set	410
   589  019E                     _TXSTA	set	414
   590  0CA8                     _RD	set	3240
   591  0CF1                     _TRMT	set	3313
   592  020D                     _WPUB	set	525
   593                           
   594                           	psect	text0
   595  0000                     __ptext0:	
   596                           ; #config settings
   597                           
   598                           
   599                           ;psect for function i1___wmul
   600  0000                     
   601                           	psect	cinit
   602  0021                     start_initialization:	
   603  0021                     __initialization:		;BIGRAM
   604                           
   605                           ; Clear objects allocated to BIGRAM
   606  0021  309B               	movlw	low (0+9115)
   607  0022  0084               	movwf	4
   608  0023  3023               	movlw	high (0+9115)
   609  0024  0085               	movwf	5
   610  0025  3055               	movlw	85
   611  0026  00FE               	movwf	btemp
   612  0027  3000               	movlw	0
   613  0028  00FF               	movwf	btemp+1
   614  0029  3183  239B  3180   	fcall	clear_ram0
   615                           
   616                           ; Clear objects allocated to COMMON
   617  002C  01FD               	clrf	__pbssCOMMON& (0+127)
   618                           
   619                           ; Clear objects allocated to BANK0
   620  002D  3020               	movlw	low __pbssBANK0
   621  002E  0084               	movwf	4
   622  002F  3000               	movlw	high __pbssBANK0
   623  0030  0085               	movwf	5
   624  0031  3030               	movlw	48
   625  0032  00FE               	movwf	btemp
   626  0033  3000               	movlw	0
   627  0034  00FF               	movwf	btemp+1
   628  0035  3183  239B  3180   	fcall	clear_ram0
   629                           
   630                           ; Clear objects allocated to BANK1
   631  0038  0021               	movlb	1	; select bank1
   632  0039  01E8               	clrf	__pbssBANK1& (0+127)
   633  003A  01E9               	clrf	(__pbssBANK1+1)& (0+127)
   634                           
   635                           ; Clear objects allocated to BANK2
   636  003B  3020               	movlw	low __pbssBANK2
   637  003C  0084               	movwf	4
   638  003D  3001               	movlw	high __pbssBANK2
   639  003E  0085               	movwf	5
   640  003F  3030               	movlw	48
   641  0040  00FE               	movwf	btemp
   642  0041  3000               	movlw	0
   643  0042  00FF               	movwf	btemp+1
   644  0043  3183  239B  3180   	fcall	clear_ram0
   645                           
   646                           ; Clear objects allocated to BANK3
   647  0046  30A0               	movlw	low __pbssBANK3
   648  0047  0084               	movwf	4
   649  0048  3001               	movlw	high __pbssBANK3
   650  0049  0085               	movwf	5
   651  004A  3046               	movlw	70
   652  004B  00FE               	movwf	btemp
   653  004C  3000               	movlw	0
   654  004D  00FF               	movwf	btemp+1
   655  004E  3183  239B         	fcall	clear_ram0
   656  0050                     end_of_initialization:	
   657                           ;End of C runtime variable initialization code
   658                           
   659  0050                     __end_of__initialization:	
   660  0050  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   661  0051  0020               	movlb	0
   662  0052  3180  2854         	ljmp	_main	;jump to C main() function
   663                           
   664                           	psect	bssCOMMON
   665  007D                     __pbssCOMMON:	
   666  007D                     _ledcount:	
   667  007D                     	ds	1
   668                           
   669                           	psect	bssBANK0
   670  0020                     __pbssBANK0:	
   671  0020                     _stoc:	
   672  0020                     	ds	48
   673                           
   674                           	psect	bssBANK1
   675  00E8                     __pbssBANK1:	
   676  00E8                     _reservingNow:	
   677  00E8                     	ds	1
   678  00E9                     _time:	
   679  00E9                     	ds	1
   680                           
   681                           	psect	bssBANK2
   682  0120                     __pbssBANK2:	
   683  0120                     _led:	
   684  0120                     	ds	48
   685                           
   686                           	psect	bssBANK3
   687  01A0                     __pbssBANK3:	
   688  01A0                     main@F3516:	
   689  01A0                     	ds	70
   690                           
   691                           	psect	clrtext
   692  039B                     clear_ram0:	
   693                           ;	Called with FSR0 containing the base address, and
   694                           ;	btemp/btemp+1 has the size to clear
   695                           
   696  039B  0064               	clrwdt	;clear the watchdog before getting into this loop
   697  039C                     clrloop0:	
   698  039C  0180               	clrf	0	;clear RAM location pointed to by FSR
   699  039D  3101               	addfsr 0,1
   700  039E  3001               	movlw	1
   701  039F  02FE               	subwf	126,f
   702  03A0  3000               	movlw	0
   703  03A1  3BFF               	subwfb	127,f
   704  03A2  087F               	movf	127,w
   705  03A3  047E               	iorwf	126,w
   706  03A4  1903               	btfsc	3,2
   707  03A5  3400               	retlw	0	;all done for this memory range, return
   708  03A6  2B9C               	goto	clrloop0	;have we reached the end yet?
   709                           
   710                           	psect	cstackBANK2
   711  0150                     __pcstackBANK2:	
   712  0150                     main@getKeeping:	
   713                           
   714                           ; 32 bytes @ 0x0
   715  0150                     	ds	32
   716                           
   717                           	psect	cstackBANK1
   718  00A0                     __pcstackBANK1:	
   719  00A0                     main@getdata:	
   720                           
   721                           ; 70 bytes @ 0x0
   722  00A0                     	ds	70
   723  00E6                     main@onetime:	
   724                           
   725                           ; 1 bytes @ 0x46
   726  00E6                     	ds	1
   727  00E7                     main@i:	
   728                           
   729                           ; 1 bytes @ 0x47
   730  00E7                     	ds	1
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:	
   734  0070                     ?_putch:	
   735  0070                     ?_setpin:	
   736                           ; 0 bytes @ 0x0
   737                           
   738  0070                     ?_change:	
   739                           ; 0 bytes @ 0x0
   740                           
   741  0070                     ?_InterTimer:	
   742                           ; 0 bytes @ 0x0
   743                           
   744  0070                     ?_main:	
   745                           ; 0 bytes @ 0x0
   746                           
   747  0070                     ?i1_putch:	
   748                           ; 0 bytes @ 0x0
   749                           
   750  0070                     ??i1_putch:	
   751                           ; 0 bytes @ 0x0
   752                           
   753  0070                     ?_getch:	
   754                           ; 0 bytes @ 0x0
   755                           
   756  0070                     ?_E2promRead:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_x2:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?i1___wmul:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     i1putch@Data:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     i1___wmul@multiplier:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 2 bytes @ 0x0
   773  0070                     	ds	2
   774  0072                     i1___wmul@multiplicand:	
   775                           
   776                           ; 2 bytes @ 0x2
   777  0072                     	ds	2
   778  0074                     ??i1___wmul:	
   779  0074                     i1___wmul@product:	
   780                           ; 0 bytes @ 0x4
   781                           
   782                           
   783                           ; 2 bytes @ 0x4
   784  0074                     	ds	2
   785  0076                     ??_change:	
   786                           
   787                           ; 0 bytes @ 0x6
   788  0076                     	ds	6
   789  007C                     ??_InterTimer:	
   790                           
   791                           ; 0 bytes @ 0xC
   792  007C                     	ds	1
   793                           
   794                           	psect	cstackBANK0
   795  0050                     __pcstackBANK0:	
   796  0050                     ??_putch:	
   797  0050                     ??_getch:	
   798                           ; 0 bytes @ 0x0
   799                           
   800  0050                     ??_E2promRead:	
   801                           ; 0 bytes @ 0x0
   802                           
   803  0050                     ??_setpin:	
   804                           ; 0 bytes @ 0x0
   805                           
   806  0050                     ??_x2:	
   807                           ; 0 bytes @ 0x0
   808                           
   809  0050                     ?___wmul:	
   810                           ; 0 bytes @ 0x0
   811                           
   812  0050                     putch@Data:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0050                     ___wmul@multiplier:	
   816                           ; 1 bytes @ 0x0
   817                           
   818                           
   819                           ; 2 bytes @ 0x0
   820  0050                     	ds	1
   821  0051                     x2@i:	
   822                           
   823                           ; 1 bytes @ 0x1
   824  0051                     	ds	1
   825  0052                     E2promRead@adr:	
   826  0052                     x2@ret:	
   827                           ; 1 bytes @ 0x2
   828                           
   829  0052                     ___wmul@multiplicand:	
   830                           ; 1 bytes @ 0x2
   831                           
   832                           
   833                           ; 2 bytes @ 0x2
   834  0052                     	ds	1
   835  0053                     x2@num:	
   836                           
   837                           ; 1 bytes @ 0x3
   838  0053                     	ds	1
   839  0054                     ??___wmul:	
   840  0054                     ___wmul@product:	
   841                           ; 0 bytes @ 0x4
   842                           
   843                           
   844                           ; 2 bytes @ 0x4
   845  0054                     	ds	2
   846  0056                     ??_main:	
   847                           
   848                           ; 0 bytes @ 0x6
   849  0056                     	ds	10
   850  0060                     main@n:	
   851                           
   852                           ; 1 bytes @ 0x10
   853  0060                     	ds	1
   854  0061                     main@individual:	
   855                           
   856                           ; 1 bytes @ 0x11
   857  0061                     	ds	1
   858  0062                     main@gettingSuccess:	
   859                           
   860                           ; 1 bytes @ 0x12
   861  0062                     	ds	1
   862  0063                     main@getNum:	
   863                           
   864                           ; 1 bytes @ 0x13
   865  0063                     	ds	1
   866  0064                     main@resetFlug:	
   867                           
   868                           ; 1 bytes @ 0x14
   869  0064                     	ds	1
   870  0065                     main@j:	
   871                           
   872                           ; 1 bytes @ 0x15
   873  0065                     	ds	1
   874                           
   875                           	psect	maintext
   876  0054                     __pmaintext:	
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 66 in file "ver0.0_20140727.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  getdata        70    0[BANK1 ] unsigned char [70]
   887 ;;  getKeeping     32    0[BANK2 ] unsigned char [2][16]
   888 ;;  test           32    0        unsigned char [4][8]
   889 ;;  i               1   71[BANK1 ] unsigned char 
   890 ;;  onetime         1   70[BANK1 ] unsigned char 
   891 ;;  j               1   21[BANK0 ] unsigned char 
   892 ;;  resetFlug       1   20[BANK0 ] unsigned char 
   893 ;;  getNum          1   19[BANK0 ] unsigned char 
   894 ;;  gettingSucce    1   18[BANK0 ] unsigned char 
   895 ;;  individual      1   17[BANK0 ] unsigned char 
   896 ;;  n               1   16[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 17F/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0       6      72      32       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         0      16      72      32       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:      120 bytes
   911 ;; Hardware stack levels required when called:    4
   912 ;; This function calls:
   913 ;;		_E2promRead
   914 ;;		___wmul
   915 ;;		_getch
   916 ;;		_putch
   917 ;;		_setpin
   918 ;;		_x2
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _main
   926  0054                     _main:	
   927                           
   928                           ;ver0.0_20140727.c: 68: char i,j,n,test[8][4],individual=255;
   929                           
   930                           ;incstack = 0
   931                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   932  0054  30FF               	movlw	255
   933  0055  0020               	movlb	0	; select bank0
   934  0056  00D6               	movwf	??_main
   935  0057  0856               	movf	??_main,w
   936  0058  00E1               	movwf	main@individual
   937                           
   938                           ;ver0.0_20140727.c: 69: char getdata[70]={0},getKeeping[16][2],getNum=0,onetime=0,resetF
      +                          lug=0,gettingSuccess=0;
   939  0059  30A0               	movlw	low main@F3516
   940  005A  0086               	movwf	6
   941  005B  3001               	movlw	high main@F3516
   942  005C  0087               	movwf	7
   943  005D  30A0               	movlw	low main@getdata
   944  005E  0084               	movwf	4
   945  005F  3000               	movlw	high main@getdata
   946  0060  0085               	movwf	5
   947  0061  3046               	movlw	70
   948  0062  00D6               	movwf	??_main
   949  0063                     u590:	
   950  0063  0016               	moviw fsr1++
   951  0064  001A               	movwi fsr0++
   952  0065  0BD6               	decfsz	??_main,f
   953  0066  2863               	goto	u590
   954  0067  01E3               	clrf	main@getNum
   955  0068  0021               	movlb	1	; select bank1
   956  0069  01E6               	clrf	main@onetime^(0+128)
   957  006A  0020               	movlb	0	; select bank0
   958  006B  01E4               	clrf	main@resetFlug
   959  006C  01E2               	clrf	main@gettingSuccess
   960                           
   961                           ;ver0.0_20140727.c: 70: setpin();
   962  006D  3183  2362  3180   	fcall	_setpin
   963                           
   964                           ;ver0.0_20140727.c: 71: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   965  0070  0021               	movlb	1	; select bank1
   966  0071  178E               	bsf	14,7	;volatile
   967  0072  130E               	bcf	14,6	;volatile
   968  0073  3033               	movlw	51
   969  0074  0023               	movlb	3	; select bank3
   970  0075  009B               	movwf	27	;volatile
   971  0076  3090               	movlw	144
   972  0077  009D               	movwf	29	;volatile
   973  0078  3024               	movlw	36
   974  0079  009E               	movwf	30	;volatile
   975  007A  019F               	clrf	31	;volatile
   976                           
   977                           ;ver0.0_20140727.c: 72: individual=E2promRead(0x00);
   978  007B  3000               	movlw	0
   979  007C  3183  238C  3180   	fcall	_E2promRead
   980  007F  0020               	movlb	0	; select bank0
   981  0080  00D6               	movwf	??_main
   982  0081  0856               	movf	??_main,w
   983  0082  00E1               	movwf	main@individual
   984                           
   985                           ;ver0.0_20140727.c: 73: for(i=0;i<16;i++)
   986  0083  0021               	movlb	1	; select bank1
   987  0084  01E7               	clrf	main@i^(0+128)
   988  0085  3010               	movlw	16
   989  0086  0267               	subwf	main@i^(0+128),w
   990  0087  1803               	btfsc	3,0
   991  0088  28BF               	goto	l1066
   992  0089                     l1060:	
   993                           
   994                           ;ver0.0_20140727.c: 74: putdata[i][1]=x2(i);
   995  0089  0867               	movf	main@i^(0+128),w
   996  008A  3183  2379  3180   	fcall	_x2
   997  008D  0020               	movlb	0	; select bank0
   998  008E  00D6               	movwf	??_main
   999  008F  0021               	movlb	1	; select bank1
  1000  0090  0867               	movf	main@i^(0+128),w
  1001  0091  0020               	movlb	0	; select bank0
  1002  0092  00D7               	movwf	??_main+1
  1003  0093  01D8               	clrf	??_main+2
  1004  0094  0857               	movf	??_main+1,w
  1005  0095  00D0               	movwf	___wmul@multiplier
  1006  0096  0858               	movf	??_main+2,w
  1007  0097  00D1               	movwf	___wmul@multiplier+1
  1008  0098  3005               	movlw	5
  1009  0099  00D2               	movwf	___wmul@multiplicand
  1010  009A  3000               	movlw	0
  1011  009B  00D3               	movwf	___wmul@multiplicand+1
  1012  009C  3183  2327  3180   	fcall	___wmul
  1013  009F  0020               	movlb	0	; select bank0
  1014  00A0  0850               	movf	?___wmul,w
  1015  00A1  3E01               	addlw	1
  1016  00A2  00D9               	movwf	??_main+3
  1017  00A3  3000               	movlw	0
  1018  00A4  3D51               	addwfc	?___wmul+1,w
  1019  00A5  00DA               	movwf	??_main+4
  1020  00A6  309B               	movlw	155
  1021  00A7  00DB               	movwf	??_main+5
  1022  00A8  3023               	movlw	35
  1023  00A9  00DC               	movwf	??_main+6
  1024  00AA  0859               	movf	??_main+3,w
  1025  00AB  075B               	addwf	??_main+5,w
  1026  00AC  00DD               	movwf	??_main+7
  1027  00AD  085A               	movf	??_main+4,w
  1028  00AE  3D5C               	addwfc	??_main+6,w
  1029  00AF  00DE               	movwf	??_main+8
  1030  00B0  085D               	movf	??_main+7,w
  1031  00B1  0086               	movwf	6
  1032  00B2  085E               	movf	??_main+8,w
  1033  00B3  0087               	movwf	7
  1034  00B4  0856               	movf	??_main,w
  1035  00B5  0081               	movwf	1
  1036  00B6  3001               	movlw	1
  1037  00B7  00D6               	movwf	??_main
  1038  00B8  0856               	movf	??_main,w
  1039  00B9  0021               	movlb	1	; select bank1
  1040  00BA  07E7               	addwf	main@i^(0+128),f
  1041  00BB  3010               	movlw	16
  1042  00BC  0267               	subwf	main@i^(0+128),w
  1043  00BD  1C03               	skipc
  1044  00BE  2889               	goto	l1060
  1045  00BF                     l1066:	
  1046                           
  1047                           ;ver0.0_20140727.c: 75: OPTION_REG = 0b00000110 ;
  1048  00BF  3006               	movlw	6
  1049  00C0  0095               	movwf	21	;volatile
  1050                           
  1051                           ;ver0.0_20140727.c: 76: TMR0 = 61 ;
  1052  00C1  303D               	movlw	61
  1053  00C2  0020               	movlb	0	; select bank0
  1054  00C3  0095               	movwf	21	;volatile
  1055                           
  1056                           ;ver0.0_20140727.c: 77: TMR0IF = 0 ;
  1057  00C4  110B               	bcf	11,2	;volatile
  1058                           
  1059                           ;ver0.0_20140727.c: 78: time = 0 ;
  1060  00C5  0021               	movlb	1	; select bank1
  1061  00C6  01E9               	clrf	_time^(0+128)
  1062                           
  1063                           ;ver0.0_20140727.c: 79: TMR0IE = 1 ;
  1064  00C7  168B               	bsf	11,5	;volatile
  1065                           
  1066                           ;ver0.0_20140727.c: 80: WPUB = 0xC0;
  1067  00C8  30C0               	movlw	192
  1068  00C9  0024               	movlb	4	; select bank4
  1069  00CA  008D               	movwf	13	;volatile
  1070                           
  1071                           ;ver0.0_20140727.c: 81: nWPUEN = 0;
  1072  00CB  0021               	movlb	1	; select bank1
  1073  00CC  1395               	bcf	21,7	;volatile
  1074                           
  1075                           ;ver0.0_20140727.c: 82: GIE = 0 ;
  1076  00CD  138B               	bcf	11,7	;volatile
  1077  00CE                     l1084:	
  1078                           ;ver0.0_20140727.c: 83: while(individual==getch()){
  1079                           
  1080  00CE  3183  23B1  3180   	fcall	_getch
  1081  00D1  0020               	movlb	0	; select bank0
  1082  00D2  0661               	xorwf	main@individual,w
  1083  00D3  1D03               	btfss	3,2
  1084  00D4  28E8               	goto	l1086
  1085                           
  1086                           ;ver0.0_20140727.c: 84: putch(individual);
  1087  00D5  0020               	movlb	0	; select bank0
  1088  00D6  0861               	movf	main@individual,w
  1089  00D7  3183  23A7  3180   	fcall	_putch
  1090                           
  1091                           ;ver0.0_20140727.c: 85: _delay((unsigned long)((100)*(32000000/4000.0)));
  1092  00DA  3005               	movlw	5
  1093  00DB  0020               	movlb	0	; select bank0
  1094  00DC  00D8               	movwf	??_main+2
  1095  00DD  300F               	movlw	15
  1096  00DE  00D7               	movwf	??_main+1
  1097  00DF  30F4               	movlw	244
  1098  00E0  00D6               	movwf	??_main
  1099  00E1                     u857:	
  1100  00E1  0BD6               	decfsz	??_main,f
  1101  00E2  28E1               	goto	u857
  1102  00E3  0BD7               	decfsz	??_main+1,f
  1103  00E4  28E1               	goto	u857
  1104  00E5  0BD8               	decfsz	??_main+2,f
  1105  00E6  28E1               	goto	u857
  1106  00E7  28CE               	goto	l1084
  1107  00E8                     l1086:	
  1108                           ;ver0.0_20140727.c: 86: }
  1109                           ;ver0.0_20140727.c: 87: while(1) {
  1110                           
  1111                           
  1112                           ;ver0.0_20140727.c: 89: if(getNum>69)
  1113  00E8  3046               	movlw	70
  1114  00E9  0020               	movlb	0	; select bank0
  1115  00EA  0263               	subwf	main@getNum,w
  1116  00EB  1C03               	skipc
  1117  00EC  28EF               	goto	l1090
  1118                           
  1119                           ;ver0.0_20140727.c: 90: getNum=0;
  1120  00ED  01E3               	clrf	main@getNum
  1121  00EE  290A               	goto	l1100
  1122  00EF                     l1090:	
  1123                           
  1124                           ;ver0.0_20140727.c: 91: else if(reservingNow){
  1125  00EF  0021               	movlb	1	; select bank1
  1126  00F0  0868               	movf	_reservingNow^(0+128),w
  1127  00F1  1903               	btfsc	3,2
  1128  00F2  290A               	goto	l1100
  1129                           
  1130                           ;ver0.0_20140727.c: 92: onetime=getch();
  1131  00F3  3183  23B1  3180   	fcall	_getch
  1132  00F6  0020               	movlb	0	; select bank0
  1133  00F7  00D6               	movwf	??_main
  1134  00F8  0856               	movf	??_main,w
  1135  00F9  0021               	movlb	1	; select bank1
  1136  00FA  00E6               	movwf	main@onetime^(0+128)
  1137                           
  1138                           ;ver0.0_20140727.c: 93: getdata[getNum]=onetime;
  1139  00FB  0866               	movf	main@onetime^(0+128),w
  1140  00FC  0020               	movlb	0	; select bank0
  1141  00FD  00D6               	movwf	??_main
  1142  00FE  0863               	movf	main@getNum,w
  1143  00FF  3EA0               	addlw	main@getdata& (0+255)
  1144  0100  0086               	movwf	6
  1145  0101  0187               	clrf	7
  1146  0102  0856               	movf	??_main,w
  1147  0103  0081               	movwf	1
  1148                           
  1149                           ;ver0.0_20140727.c: 94: getNum++;
  1150  0104  3001               	movlw	1
  1151  0105  00D6               	movwf	??_main
  1152  0106  0856               	movf	??_main,w
  1153  0107  07E3               	addwf	main@getNum,f
  1154                           
  1155                           ;ver0.0_20140727.c: 95: reservingNow=0;
  1156  0108  0021               	movlb	1	; select bank1
  1157  0109  01E8               	clrf	_reservingNow^(0+128)
  1158  010A                     l1100:	
  1159                           
  1160                           ;ver0.0_20140727.c: 96: }
  1161                           ;ver0.0_20140727.c: 97: if(onetime==0x47)
  1162  010A  0021               	movlb	1	; select bank1
  1163  010B  0866               	movf	main@onetime^(0+128),w
  1164  010C  3A47               	xorlw	71
  1165  010D  1D03               	skipz
  1166  010E  2913               	goto	l1104
  1167                           
  1168                           ;ver0.0_20140727.c: 98: resetFlug=1;
  1169  010F  0020               	movlb	0	; select bank0
  1170  0110  01E4               	clrf	main@resetFlug
  1171  0111  0AE4               	incf	main@resetFlug,f
  1172  0112  2931               	goto	l1122
  1173  0113                     l1104:	
  1174                           
  1175                           ;ver0.0_20140727.c: 99: else if(resetFlug){
  1176  0113  0020               	movlb	0	; select bank0
  1177  0114  0864               	movf	main@resetFlug,w
  1178  0115  1903               	btfsc	3,2
  1179  0116  2931               	goto	l1122
  1180                           
  1181                           ;ver0.0_20140727.c: 100: if(resetFlug==1){
  1182  0117  0864               	movf	main@resetFlug,w
  1183  0118  3A01               	xorlw	1
  1184  0119  1D03               	skipz
  1185  011A  2924               	goto	l1114
  1186                           
  1187                           ;ver0.0_20140727.c: 101: if(onetime==0x65)
  1188  011B  0021               	movlb	1	; select bank1
  1189  011C  0866               	movf	main@onetime^(0+128),w
  1190  011D  3A65               	xorlw	101
  1191  011E  1D03               	skipz
  1192  011F  2922               	goto	l1112
  1193  0120  0020               	movlb	0	; select bank0
  1194  0121  2931               	goto	l1122
  1195  0122                     l1112:	
  1196                           
  1197                           ;ver0.0_20140727.c: 103: else
  1198                           ;ver0.0_20140727.c: 104: resetFlug=0;
  1199  0122  0020               	movlb	0	; select bank0
  1200  0123  2930               	goto	l1120
  1201  0124                     l1114:	
  1202                           ;ver0.0_20140727.c: 105: }
  1203                           
  1204                           
  1205                           ;ver0.0_20140727.c: 106: else if(resetFlug==2){
  1206  0124  0864               	movf	main@resetFlug,w
  1207  0125  3A02               	xorlw	2
  1208  0126  1D03               	skipz
  1209  0127  2931               	goto	l1122
  1210                           
  1211                           ;ver0.0_20140727.c: 107: if(onetime=0x74)
  1212  0128  3074               	movlw	116
  1213  0129  00D6               	movwf	??_main
  1214  012A  0856               	movf	??_main,w
  1215  012B  0021               	movlb	1	; select bank1
  1216  012C  00E6               	movwf	main@onetime^(0+128)
  1217                           
  1218                           ;ver0.0_20140727.c: 108: getNum=0;
  1219  012D  0020               	movlb	0	; select bank0
  1220  012E  01E3               	clrf	main@getNum
  1221  012F  2931               	goto	l1122
  1222  0130                     l1120:	
  1223                           
  1224                           ;ver0.0_20140727.c: 109: else
  1225                           ;ver0.0_20140727.c: 110: resetFlug=0;
  1226  0130  01E4               	clrf	main@resetFlug
  1227  0131                     l1122:	
  1228                           
  1229                           ;ver0.0_20140727.c: 111: }
  1230                           ;ver0.0_20140727.c: 112: }
  1231                           ;ver0.0_20140727.c: 113: if(getNum==65){
  1232  0131  0020               	movlb	0	; select bank0
  1233  0132  0863               	movf	main@getNum,w
  1234  0133  3A41               	xorlw	65
  1235  0134  1D03               	skipz
  1236  0135  293F               	goto	l1128
  1237                           
  1238                           ;ver0.0_20140727.c: 114: if(onetime==0x0A)
  1239  0136  0021               	movlb	1	; select bank1
  1240  0137  0866               	movf	main@onetime^(0+128),w
  1241  0138  3A0A               	xorlw	10
  1242  0139  1D03               	skipz
  1243  013A  2950               	goto	l1136
  1244                           
  1245                           ;ver0.0_20140727.c: 115: gettingSuccess=1;
  1246  013B  0020               	movlb	0	; select bank0
  1247  013C  01E2               	clrf	main@gettingSuccess
  1248  013D  0AE2               	incf	main@gettingSuccess,f
  1249                           
  1250                           ;ver0.0_20140727.c: 116: }
  1251  013E  2950               	goto	l1136
  1252  013F                     l1128:	
  1253                           
  1254                           ;ver0.0_20140727.c: 117: else if(gettingSuccess==1){
  1255  013F  0862               	movf	main@gettingSuccess,w
  1256  0140  3A01               	xorlw	1
  1257  0141  1D03               	skipz
  1258  0142  2950               	goto	l1136
  1259                           
  1260                           ;ver0.0_20140727.c: 118: if(onetime==0x0B)
  1261  0143  0021               	movlb	1	; select bank1
  1262  0144  0866               	movf	main@onetime^(0+128),w
  1263  0145  3A0B               	xorlw	11
  1264  0146  1D03               	skipz
  1265  0147  294E               	goto	l1134
  1266                           
  1267                           ;ver0.0_20140727.c: 119: gettingSuccess=2;
  1268  0148  3002               	movlw	2
  1269  0149  0020               	movlb	0	; select bank0
  1270  014A  00D6               	movwf	??_main
  1271  014B  0856               	movf	??_main,w
  1272  014C  00E2               	movwf	main@gettingSuccess
  1273  014D  2950               	goto	l1136
  1274  014E                     l1134:	
  1275                           
  1276                           ;ver0.0_20140727.c: 120: else
  1277                           ;ver0.0_20140727.c: 121: gettingSuccess=0;
  1278  014E  0020               	movlb	0	; select bank0
  1279  014F  01E2               	clrf	main@gettingSuccess
  1280  0150                     l1136:	
  1281                           
  1282                           ;ver0.0_20140727.c: 122: }
  1283                           ;ver0.0_20140727.c: 123: if(gettingSuccess==2){
  1284  0150  0020               	movlb	0	; select bank0
  1285  0151  0862               	movf	main@gettingSuccess,w
  1286  0152  3A02               	xorlw	2
  1287  0153  1D03               	skipz
  1288  0154  28E8               	goto	l1086
  1289                           
  1290                           ;ver0.0_20140727.c: 124: for(i=0;i<16;i++){
  1291  0155  0021               	movlb	1	; select bank1
  1292  0156  01E7               	clrf	main@i^(0+128)
  1293  0157  3010               	movlw	16
  1294  0158  0267               	subwf	main@i^(0+128),w
  1295  0159  1803               	btfsc	3,0
  1296  015A  299A               	goto	l1162
  1297  015B                     l1144:	
  1298                           
  1299                           ;ver0.0_20140727.c: 125: for(j=0;j<2;j++){
  1300  015B  0020               	movlb	0	; select bank0
  1301  015C  01E5               	clrf	main@j
  1302  015D  3002               	movlw	2
  1303  015E  0265               	subwf	main@j,w
  1304  015F  1803               	btfsc	3,0
  1305  0160  2991               	goto	l1158
  1306  0161                     l1150:	
  1307                           
  1308                           ;ver0.0_20140727.c: 126: n=i*4+j;
  1309  0161  0021               	movlb	1	; select bank1
  1310  0162  0867               	movf	main@i^(0+128),w
  1311  0163  0020               	movlb	0	; select bank0
  1312  0164  00D6               	movwf	??_main
  1313  0165  3001               	movlw	1
  1314  0166                     u775:	
  1315  0166  35D6               	lslf	??_main,f
  1316  0167  3EFF               	addlw	-1
  1317  0168  1D03               	skipz
  1318  0169  2966               	goto	u775
  1319  016A  3556               	lslf	??_main,w
  1320  016B  0765               	addwf	main@j,w
  1321  016C  00D7               	movwf	??_main+1
  1322  016D  0857               	movf	??_main+1,w
  1323  016E  00E0               	movwf	main@n
  1324                           
  1325                           ;ver0.0_20140727.c: 127: getKeeping[i][j]=getdata[n];
  1326  016F  0860               	movf	main@n,w
  1327  0170  3EA0               	addlw	main@getdata& (0+255)
  1328  0171  0086               	movwf	6
  1329  0172  0187               	clrf	7
  1330  0173  0801               	movf	1,w
  1331  0174  00D6               	movwf	??_main
  1332  0175  0021               	movlb	1	; select bank1
  1333  0176  0867               	movf	main@i^(0+128),w
  1334  0177  0020               	movlb	0	; select bank0
  1335  0178  00D7               	movwf	??_main+1
  1336  0179  3001               	movlw	1
  1337  017A                     u785:	
  1338  017A  35D7               	lslf	??_main+1,f
  1339  017B  0B89               	decfsz	9,f
  1340  017C  297A               	goto	u785
  1341  017D  3050               	movlw	main@getKeeping& (0+255)
  1342  017E  0757               	addwf	??_main+1,w
  1343  017F  00D8               	movwf	??_main+2
  1344  0180  0865               	movf	main@j,w
  1345  0181  0758               	addwf	??_main+2,w
  1346  0182  00D9               	movwf	??_main+3
  1347  0183  0859               	movf	??_main+3,w
  1348  0184  0086               	movwf	6
  1349  0185  3001               	movlw	1	; select bank2/3
  1350  0186  0087               	movwf	7
  1351  0187  0856               	movf	??_main,w
  1352  0188  0081               	movwf	1
  1353  0189  3001               	movlw	1
  1354  018A  00D6               	movwf	??_main
  1355  018B  0856               	movf	??_main,w
  1356  018C  07E5               	addwf	main@j,f
  1357  018D  3002               	movlw	2
  1358  018E  0265               	subwf	main@j,w
  1359  018F  1C03               	skipc
  1360  0190  2961               	goto	l1150
  1361  0191                     l1158:	
  1362  0191  3001               	movlw	1
  1363  0192  00D6               	movwf	??_main
  1364  0193  0856               	movf	??_main,w
  1365  0194  0021               	movlb	1	; select bank1
  1366  0195  07E7               	addwf	main@i^(0+128),f
  1367  0196  3010               	movlw	16
  1368  0197  0267               	subwf	main@i^(0+128),w
  1369  0198  1C03               	skipc
  1370  0199  295B               	goto	l1144
  1371  019A                     l1162:	
  1372                           
  1373                           ;ver0.0_20140727.c: 128: }
  1374                           ;ver0.0_20140727.c: 129: }
  1375                           ;ver0.0_20140727.c: 130: for(i=0;i<16;i++){
  1376  019A  01E7               	clrf	main@i^(0+128)
  1377  019B                     L1:	
  1378  019B  3010               	movlw	16
  1379  019C  0267               	subwf	main@i^(0+128),w
  1380  019D  1803               	btfsc	3,0
  1381  019E  28E8               	goto	l1086
  1382                           
  1383                           ;ver0.0_20140727.c: 131: putdata[i][0]=getKeeping[i][0]&0b11111110;
  1384  019F  3567               	lslf	main@i^(0+128),w
  1385  01A0  3E50               	addlw	main@getKeeping& (0+255)
  1386  01A1  0086               	movwf	6
  1387  01A2  3001               	movlw	1	; select bank2/3
  1388  01A3  0087               	movwf	7
  1389  01A4  0801               	movf	1,w
  1390  01A5  39FE               	andlw	254
  1391  01A6  0020               	movlb	0	; select bank0
  1392  01A7  00D6               	movwf	??_main
  1393  01A8  0021               	movlb	1	; select bank1
  1394  01A9  0867               	movf	main@i^(0+128),w
  1395  01AA  0020               	movlb	0	; select bank0
  1396  01AB  00D7               	movwf	??_main+1
  1397  01AC  01D8               	clrf	??_main+2
  1398  01AD  0857               	movf	??_main+1,w
  1399  01AE  00D0               	movwf	___wmul@multiplier
  1400  01AF  0858               	movf	??_main+2,w
  1401  01B0  00D1               	movwf	___wmul@multiplier+1
  1402  01B1  3005               	movlw	5
  1403  01B2  00D2               	movwf	___wmul@multiplicand
  1404  01B3  3000               	movlw	0
  1405  01B4  00D3               	movwf	___wmul@multiplicand+1
  1406  01B5  3183  2327  3180   	fcall	___wmul
  1407  01B8  309B               	movlw	155
  1408  01B9  0020               	movlb	0	; select bank0
  1409  01BA  00D9               	movwf	??_main+3
  1410  01BB  3023               	movlw	35
  1411  01BC  00DA               	movwf	??_main+4
  1412  01BD  0850               	movf	?___wmul,w
  1413  01BE  0759               	addwf	??_main+3,w
  1414  01BF  00DB               	movwf	??_main+5
  1415  01C0  0851               	movf	?___wmul+1,w
  1416  01C1  3D5A               	addwfc	??_main+4,w
  1417  01C2  00DC               	movwf	??_main+6
  1418  01C3  085B               	movf	??_main+5,w
  1419  01C4  0086               	movwf	6
  1420  01C5  085C               	movf	??_main+6,w
  1421  01C6  0087               	movwf	7
  1422  01C7  0856               	movf	??_main,w
  1423  01C8  0081               	movwf	1
  1424                           
  1425                           ;ver0.0_20140727.c: 132: putdata[i][2]=getKeeping[i][1]&0b00001111;
  1426  01C9  1403               	setc
  1427  01CA  0021               	movlb	1	; select bank1
  1428  01CB  0D67               	rlf	main@i^(0+128),w
  1429  01CC  3E50               	addlw	main@getKeeping& (0+255)
  1430  01CD  0086               	movwf	6
  1431  01CE  3001               	movlw	1	; select bank2/3
  1432  01CF  0087               	movwf	7
  1433  01D0  0801               	movf	1,w
  1434  01D1  390F               	andlw	15
  1435  01D2  0020               	movlb	0	; select bank0
  1436  01D3  00D6               	movwf	??_main
  1437  01D4  0021               	movlb	1	; select bank1
  1438  01D5  0867               	movf	main@i^(0+128),w
  1439  01D6  0020               	movlb	0	; select bank0
  1440  01D7  00D7               	movwf	??_main+1
  1441  01D8  01D8               	clrf	??_main+2
  1442  01D9  0857               	movf	??_main+1,w
  1443  01DA  00D0               	movwf	___wmul@multiplier
  1444  01DB  0858               	movf	??_main+2,w
  1445  01DC  00D1               	movwf	___wmul@multiplier+1
  1446  01DD  3005               	movlw	5
  1447  01DE  00D2               	movwf	___wmul@multiplicand
  1448  01DF  3000               	movlw	0
  1449  01E0  00D3               	movwf	___wmul@multiplicand+1
  1450  01E1  3183  2327  3180   	fcall	___wmul
  1451  01E4  0020               	movlb	0	; select bank0
  1452  01E5  0850               	movf	?___wmul,w
  1453  01E6  3E02               	addlw	2
  1454  01E7  00D9               	movwf	??_main+3
  1455  01E8  3000               	movlw	0
  1456  01E9  3D51               	addwfc	?___wmul+1,w
  1457  01EA  00DA               	movwf	??_main+4
  1458  01EB  309B               	movlw	155
  1459  01EC  00DB               	movwf	??_main+5
  1460  01ED  3023               	movlw	35
  1461  01EE  00DC               	movwf	??_main+6
  1462  01EF  0859               	movf	??_main+3,w
  1463  01F0  075B               	addwf	??_main+5,w
  1464  01F1  00DD               	movwf	??_main+7
  1465  01F2  085A               	movf	??_main+4,w
  1466  01F3  3D5C               	addwfc	??_main+6,w
  1467  01F4  00DE               	movwf	??_main+8
  1468  01F5  085D               	movf	??_main+7,w
  1469  01F6  0086               	movwf	6
  1470  01F7  085E               	movf	??_main+8,w
  1471  01F8  0087               	movwf	7
  1472  01F9  0856               	movf	??_main,w
  1473  01FA  0081               	movwf	1
  1474                           
  1475                           ;ver0.0_20140727.c: 133: putdata[i][3]=(getKeeping[i][1]&0b01110000)>>4;
  1476  01FB  1403               	setc
  1477  01FC  0021               	movlb	1	; select bank1
  1478  01FD  0D67               	rlf	main@i^(0+128),w
  1479  01FE  3E50               	addlw	main@getKeeping& (0+255)
  1480  01FF  0086               	movwf	6
  1481  0200  3001               	movlw	1	; select bank2/3
  1482  0201  0087               	movwf	7
  1483  0202  0801               	movf	1,w
  1484  0203  0020               	movlb	0	; select bank0
  1485  0204  00D6               	movwf	??_main
  1486  0205  3004               	movlw	4
  1487  0206                     u825:	
  1488  0206  36D6               	lsrf	??_main,f
  1489  0207  0B89               	decfsz	9,f
  1490  0208  2A06               	goto	u825
  1491  0209  0856               	movf	??_main,w
  1492  020A  3907               	andlw	7
  1493  020B  00D7               	movwf	??_main+1
  1494  020C  0021               	movlb	1	; select bank1
  1495  020D  0867               	movf	main@i^(0+128),w
  1496  020E  0020               	movlb	0	; select bank0
  1497  020F  00D8               	movwf	??_main+2
  1498  0210  01D9               	clrf	??_main+3
  1499  0211  0858               	movf	??_main+2,w
  1500  0212  00D0               	movwf	___wmul@multiplier
  1501  0213  0859               	movf	??_main+3,w
  1502  0214  00D1               	movwf	___wmul@multiplier+1
  1503  0215  3005               	movlw	5
  1504  0216  00D2               	movwf	___wmul@multiplicand
  1505  0217  3000               	movlw	0
  1506  0218  00D3               	movwf	___wmul@multiplicand+1
  1507  0219  3183  2327  3180   	fcall	___wmul
  1508  021C  0020               	movlb	0	; select bank0
  1509  021D  0850               	movf	?___wmul,w
  1510  021E  3E03               	addlw	3
  1511  021F  00DA               	movwf	??_main+4
  1512  0220  3000               	movlw	0
  1513  0221  3D51               	addwfc	?___wmul+1,w
  1514  0222  00DB               	movwf	??_main+5
  1515  0223  309B               	movlw	155
  1516  0224  00DC               	movwf	??_main+6
  1517  0225  3023               	movlw	35
  1518  0226  00DD               	movwf	??_main+7
  1519  0227  085A               	movf	??_main+4,w
  1520  0228  075C               	addwf	??_main+6,w
  1521  0229  00DE               	movwf	??_main+8
  1522  022A  085B               	movf	??_main+5,w
  1523  022B  3D5D               	addwfc	??_main+7,w
  1524  022C  00DF               	movwf	??_main+9
  1525  022D  085E               	movf	??_main+8,w
  1526  022E  0086               	movwf	6
  1527  022F  085F               	movf	??_main+9,w
  1528  0230  0087               	movwf	7
  1529  0231  0857               	movf	??_main+1,w
  1530  0232  0081               	movwf	1
  1531                           
  1532                           ;ver0.0_20140727.c: 134: putdata[i][4]=(getKeeping[i][0]&0b00000001)|(getKeeping[i][1]>>
      +                          6);
  1533  0233  1403               	setc
  1534  0234  0021               	movlb	1	; select bank1
  1535  0235  0D67               	rlf	main@i^(0+128),w
  1536  0236  3E50               	addlw	main@getKeeping& (0+255)
  1537  0237  0086               	movwf	6
  1538  0238  3001               	movlw	1	; select bank2/3
  1539  0239  0087               	movwf	7
  1540  023A  0801               	movf	1,w
  1541  023B  0020               	movlb	0	; select bank0
  1542  023C  00D6               	movwf	??_main
  1543  023D  3006               	movlw	6
  1544  023E                     u835:	
  1545  023E  36D6               	lsrf	??_main,f
  1546  023F  0B89               	decfsz	9,f
  1547  0240  2A3E               	goto	u835
  1548  0241  0021               	movlb	1	; select bank1
  1549  0242  3567               	lslf	main@i^(0+128),w
  1550  0243  3E50               	addlw	main@getKeeping& (0+255)
  1551  0244  0086               	movwf	6
  1552  0245  3001               	movlw	1	; select bank2/3
  1553  0246  0087               	movwf	7
  1554  0247  0801               	movf	1,w
  1555  0248  3901               	andlw	1
  1556  0249  0020               	movlb	0	; select bank0
  1557  024A  0456               	iorwf	??_main,w
  1558  024B  00D7               	movwf	??_main+1
  1559  024C  0021               	movlb	1	; select bank1
  1560  024D  0867               	movf	main@i^(0+128),w
  1561  024E  0020               	movlb	0	; select bank0
  1562  024F  00D8               	movwf	??_main+2
  1563  0250  01D9               	clrf	??_main+3
  1564  0251  0858               	movf	??_main+2,w
  1565  0252  00D0               	movwf	___wmul@multiplier
  1566  0253  0859               	movf	??_main+3,w
  1567  0254  00D1               	movwf	___wmul@multiplier+1
  1568  0255  3005               	movlw	5
  1569  0256  00D2               	movwf	___wmul@multiplicand
  1570  0257  3000               	movlw	0
  1571  0258  00D3               	movwf	___wmul@multiplicand+1
  1572  0259  3183  2327  3180   	fcall	___wmul
  1573  025C  0020               	movlb	0	; select bank0
  1574  025D  0850               	movf	?___wmul,w
  1575  025E  3E04               	addlw	4
  1576  025F  00DA               	movwf	??_main+4
  1577  0260  3000               	movlw	0
  1578  0261  3D51               	addwfc	?___wmul+1,w
  1579  0262  00DB               	movwf	??_main+5
  1580  0263  309B               	movlw	155
  1581  0264  00DC               	movwf	??_main+6
  1582  0265  3023               	movlw	35
  1583  0266  00DD               	movwf	??_main+7
  1584  0267  085A               	movf	??_main+4,w
  1585  0268  075C               	addwf	??_main+6,w
  1586  0269  00DE               	movwf	??_main+8
  1587  026A  085B               	movf	??_main+5,w
  1588  026B  3D5D               	addwfc	??_main+7,w
  1589  026C  00DF               	movwf	??_main+9
  1590  026D  085E               	movf	??_main+8,w
  1591  026E  0086               	movwf	6
  1592  026F  085F               	movf	??_main+9,w
  1593  0270  0087               	movwf	7
  1594  0271  0857               	movf	??_main+1,w
  1595  0272  0081               	movwf	1
  1596  0273  3001               	movlw	1
  1597  0274  00D6               	movwf	??_main
  1598  0275  0856               	movf	??_main,w
  1599  0276  0021               	movlb	1	; select bank1
  1600  0277  07E7               	addwf	main@i^(0+128),f
  1601  0278  299B               	goto	L1
  1602  0279                     __end_of_main:	
  1603                           
  1604                           	psect	text1
  1605  0379                     __ptext1:	
  1606 ;; *************** function _x2 *****************
  1607 ;; Defined at:
  1608 ;;		line 55 in file "ver0.0_20140727.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  num             1    wreg     unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  num             1    3[BANK0 ] unsigned char 
  1613 ;;  ret             1    2[BANK0 ] unsigned char 
  1614 ;;  i               1    1[BANK0 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1625 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1627 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1628 ;;Total ram usage:        4 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _x2
  1640  0379                     _x2:	
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _x2: [wreg+status,2+status,0]
  1644                           ;x2@num stored from wreg
  1645  0379  0020               	movlb	0	; select bank0
  1646  037A  00D3               	movwf	x2@num
  1647                           
  1648                           ;ver0.0_20140727.c: 56: char i,ret=0;
  1649  037B  01D2               	clrf	x2@ret
  1650                           
  1651                           ;ver0.0_20140727.c: 57: if(num%2)
  1652  037C  1C53               	btfss	x2@num,0
  1653  037D  2B80               	goto	l980
  1654                           
  1655                           ;ver0.0_20140727.c: 58: ret=1;
  1656  037E  01D2               	clrf	x2@ret
  1657  037F  0AD2               	incf	x2@ret,f
  1658  0380                     l980:	
  1659                           
  1660                           ;ver0.0_20140727.c: 59: for(i=0;i<num;i++)
  1661  0380  01D1               	clrf	x2@i
  1662  0381                     l984:	
  1663  0381  0853               	movf	x2@num,w
  1664  0382  0251               	subwf	x2@i,w
  1665  0383  1803               	btfsc	3,0
  1666  0384  2B8A               	goto	l986
  1667  0385  3001               	movlw	1
  1668  0386  00D0               	movwf	??_x2
  1669  0387  0850               	movf	??_x2,w
  1670  0388  07D1               	addwf	x2@i,f
  1671  0389  2B81               	goto	l984
  1672  038A                     l986:	
  1673                           
  1674                           ;ver0.0_20140727.c: 61: return ret;
  1675  038A  0852               	movf	x2@ret,w
  1676  038B  0008               	return
  1677  038C                     __end_of_x2:	
  1678                           
  1679                           	psect	text2
  1680  0362                     __ptext2:	
  1681 ;; *************** function _setpin *****************
  1682 ;; Defined at:
  1683 ;;		line 9 in file "sorce.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;		None               void
  1690 ;; Registers used:
  1691 ;;		wreg, status,2
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    3
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _setpin
  1713  0362                     _setpin:	
  1714                           
  1715                           ;sorce.c: 10: OSCCON = 0b01110000 ;
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _setpin: [wreg+status,2]
  1719  0362  3070               	movlw	112
  1720  0363  0021               	movlb	1	; select bank1
  1721  0364  0099               	movwf	25	;volatile
  1722                           
  1723                           ;sorce.c: 11: ANSELA = 0b00000000 ;
  1724  0365  0023               	movlb	3	; select bank3
  1725  0366  018C               	clrf	12	;volatile
  1726                           
  1727                           ;sorce.c: 12: ANSELB = 0b00000000 ;
  1728  0367  018D               	clrf	13	;volatile
  1729                           
  1730                           ;sorce.c: 13: ANSELD = 0b00000000 ;
  1731  0368  018F               	clrf	15	;volatile
  1732                           
  1733                           ;sorce.c: 14: ANSELE = 0b00000000 ;
  1734  0369  0190               	clrf	16	;volatile
  1735                           
  1736                           ;sorce.c: 16: TRISA = 0b00000000 ;
  1737  036A  0021               	movlb	1	; select bank1
  1738  036B  018C               	clrf	12	;volatile
  1739                           
  1740                           ;sorce.c: 17: TRISB = 0b00000000 ;
  1741  036C  018D               	clrf	13	;volatile
  1742                           
  1743                           ;sorce.c: 18: TRISC = 0b10110000 ;
  1744  036D  30B0               	movlw	176
  1745  036E  008E               	movwf	14	;volatile
  1746                           
  1747                           ;sorce.c: 19: TRISD = 0b00001110 ;
  1748  036F  300E               	movlw	14
  1749  0370  008F               	movwf	15	;volatile
  1750                           
  1751                           ;sorce.c: 20: TRISE = 0X00 ;
  1752  0371  0190               	clrf	16	;volatile
  1753                           
  1754                           ;sorce.c: 22: PORTA = 0b00000000 ;
  1755  0372  0020               	movlb	0	; select bank0
  1756  0373  018C               	clrf	12	;volatile
  1757                           
  1758                           ;sorce.c: 23: PORTB = 0b00000000 ;
  1759  0374  018D               	clrf	13	;volatile
  1760                           
  1761                           ;sorce.c: 24: PORTC = 0b10000000 ;
  1762  0375  3080               	movlw	128
  1763  0376  008E               	movwf	14	;volatile
  1764                           
  1765                           ;sorce.c: 25: PORTD = 0b00000000 ;
  1766  0377  018F               	clrf	15	;volatile
  1767  0378  0008               	return
  1768  0379                     __end_of_setpin:	
  1769                           
  1770                           	psect	text3
  1771  03A7                     __ptext3:	
  1772 ;; *************** function _putch *****************
  1773 ;; Defined at:
  1774 ;;		line 4 in file "uart.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  Data            1    wreg     unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  Data            1    0[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;		None               void
  1781 ;; Registers used:
  1782 ;;		wreg
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;Total ram usage:        1 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    3
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _putch
  1804  03A7                     _putch:	
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _putch: [wreg]
  1808                           ;putch@Data stored from wreg
  1809  03A7  0020               	movlb	0	; select bank0
  1810  03A8  00D0               	movwf	putch@Data
  1811  03A9                     l176:	
  1812                           ;uart.c: 5: while(!TRMT){}
  1813                           
  1814  03A9  0023               	movlb	3	; select bank3
  1815  03AA  1C9E               	btfss	30,1	;volatile
  1816  03AB  2BA9               	goto	l176
  1817                           
  1818                           ;uart.c: 6: TXREG = Data;
  1819  03AC  0020               	movlb	0	; select bank0
  1820  03AD  0850               	movf	putch@Data,w
  1821  03AE  0023               	movlb	3	; select bank3
  1822  03AF  009A               	movwf	26	;volatile
  1823  03B0  0008               	return
  1824  03B1                     __end_of_putch:	
  1825                           
  1826                           	psect	text4
  1827  03B1                     __ptext4:	
  1828 ;; *************** function _getch *****************
  1829 ;; Defined at:
  1830 ;;		line 9 in file "uart.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      unsigned char 
  1837 ;; Registers used:
  1838 ;;		wreg
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    3
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _getch
  1860  03B1                     _getch:	
  1861  03B1                     l182:	
  1862                           ;uart.c: 10: while(!RCIF){}
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _getch: [wreg]
  1866                           
  1867  03B1  0020               	movlb	0	; select bank0
  1868  03B2  1E91               	btfss	17,5	;volatile
  1869  03B3  2BB1               	goto	l182
  1870                           
  1871                           ;uart.c: 11: RCIF=0;
  1872  03B4  1291               	bcf	17,5	;volatile
  1873                           
  1874                           ;uart.c: 12: return RCREG;
  1875  03B5  0023               	movlb	3	; select bank3
  1876  03B6  0819               	movf	25,w	;volatile
  1877  03B7  0008               	return
  1878  03B8                     __end_of_getch:	
  1879                           
  1880                           	psect	text5
  1881  0327                     __ptext5:	
  1882 ;; *************** function ___wmul *****************
  1883 ;; Defined at:
  1884 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1887 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  product         2    4[BANK0 ] unsigned int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2    0[BANK0 ] unsigned int 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1899 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1903 ;;Total ram usage:        6 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function ___wmul
  1915  0327                     ___wmul:	
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1919  0327  0020               	movlb	0	; select bank0
  1920  0328  01D4               	clrf	___wmul@product
  1921  0329  01D5               	clrf	___wmul@product+1
  1922  032A                     l998:	
  1923  032A  1C50               	btfss	___wmul@multiplier,0
  1924  032B  2B30               	goto	l269
  1925  032C  0852               	movf	___wmul@multiplicand,w
  1926  032D  07D4               	addwf	___wmul@product,f
  1927  032E  0853               	movf	___wmul@multiplicand+1,w
  1928  032F  3DD5               	addwfc	___wmul@product+1,f
  1929  0330                     l269:	
  1930  0330  3001               	movlw	1
  1931  0331                     u535:	
  1932  0331  35D2               	lslf	___wmul@multiplicand,f
  1933  0332  0DD3               	rlf	___wmul@multiplicand+1,f
  1934  0333  0B89               	decfsz	9,f
  1935  0334  2B31               	goto	u535
  1936  0335  3001               	movlw	1
  1937  0336                     u545:	
  1938  0336  36D1               	lsrf	___wmul@multiplier+1,f
  1939  0337  0CD0               	rrf	___wmul@multiplier,f
  1940  0338  0B89               	decfsz	9,f
  1941  0339  2B36               	goto	u545
  1942  033A  0851               	movf	___wmul@multiplier+1,w
  1943  033B  0450               	iorwf	___wmul@multiplier,w
  1944  033C  1D03               	skipz
  1945  033D  2B2A               	goto	l998
  1946  033E  0855               	movf	___wmul@product+1,w
  1947  033F  01D1               	clrf	?___wmul+1
  1948  0340  07D1               	addwf	?___wmul+1,f
  1949  0341  0854               	movf	___wmul@product,w
  1950  0342  01D0               	clrf	?___wmul
  1951  0343  07D0               	addwf	?___wmul,f
  1952  0344  0008               	return
  1953  0345                     __end_of___wmul:	
  1954                           
  1955                           	psect	text6
  1956  038C                     __ptext6:	
  1957 ;; *************** function _E2promRead *****************
  1958 ;; Defined at:
  1959 ;;		line 3 in file "sorce.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  adr             1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  adr             1    2[BANK0 ] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1975 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1976 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1977 ;;Total ram usage:        3 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    3
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _E2promRead
  1989  038C                     _E2promRead:	
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _E2promRead: [wreg]
  1993                           ;E2promRead@adr stored from wreg
  1994  038C  0020               	movlb	0	; select bank0
  1995  038D  00D2               	movwf	E2promRead@adr
  1996                           
  1997                           ;sorce.c: 5: EEADR = adr;
  1998  038E  0852               	movf	E2promRead@adr,w
  1999  038F  00D0               	movwf	??_E2promRead
  2000  0390  01D1               	clrf	??_E2promRead+1
  2001  0391  0850               	movf	??_E2promRead,w
  2002  0392  0023               	movlb	3	; select bank3
  2003  0393  0091               	movwf	17	;volatile
  2004  0394  0020               	movlb	0	; select bank0
  2005  0395  0851               	movf	??_E2promRead+1,w
  2006  0396  0023               	movlb	3	; select bank3
  2007  0397  0092               	movwf	18	;volatile
  2008                           
  2009                           ;sorce.c: 6: RD = 1;
  2010  0398  1415               	bsf	21,0	;volsfr
  2011                           
  2012                           ;sorce.c: 7: return( EEDATA );
  2013  0399  0813               	movf	19,w	;volatile
  2014  039A  0008               	return
  2015  039B                     __end_of_E2promRead:	
  2016                           
  2017                           	psect	intentry
  2018  0004                     __pintentry:	
  2019 ;; *************** function _InterTimer *****************
  2020 ;; Defined at:
  2021 ;;		line 44 in file "ver0.0_20140727.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;Total ram usage:        1 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		_change
  2044 ;;		i1_putch
  2045 ;; This function is called by:
  2046 ;;		Interrupt level 1
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050  0004                     _InterTimer:	
  2051                           
  2052                           ;incstack = 0
  2053                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2054  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2055  0005  3180               	pagesel	$
  2056  0006  0020               	movlb	0	; select bank0
  2057  0007  087F               	movf	127,w
  2058  0008  00FC               	movwf	??_InterTimer
  2059                           
  2060                           ;ver0.0_20140727.c: 46: if (TMR0IF == 1) {
  2061  0009  1D0B               	btfss	11,2	;volatile
  2062  000A  281A               	goto	i1l119
  2063                           
  2064                           ;ver0.0_20140727.c: 47: TMR0 = 61 ;
  2065  000B  303D               	movlw	61
  2066  000C  0095               	movwf	21	;volatile
  2067                           
  2068                           ;ver0.0_20140727.c: 48: change();
  2069  000D  3182  2279  3180   	fcall	_change
  2070                           
  2071                           ;ver0.0_20140727.c: 49: if(RCIF)
  2072  0010  0020               	movlb	0	; select bank0
  2073  0011  1E91               	btfss	17,5	;volatile
  2074  0012  2816               	goto	i1l1022
  2075                           
  2076                           ;ver0.0_20140727.c: 50: reservingNow=1;
  2077  0013  0021               	movlb	1	; select bank1
  2078  0014  01E8               	clrf	_reservingNow^(0+128)
  2079  0015  0AE8               	incf	_reservingNow^(0+128),f
  2080  0016                     i1l1022:	
  2081                           
  2082                           ;ver0.0_20140727.c: 51: putch(0x41);
  2083  0016  3041               	movlw	65
  2084  0017  3183  23B8         	fcall	i1_putch
  2085                           
  2086                           ;ver0.0_20140727.c: 52: TMR0IF = 0 ;
  2087  0019  110B               	bcf	11,2	;volatile
  2088  001A                     i1l119:	
  2089  001A  087C               	movf	??_InterTimer,w
  2090  001B  0020               	movlb	0	; select bank0
  2091  001C  00FF               	movwf	127
  2092  001D  107E               	bcf	126,0	;clear compiler interrupt flag
  2093  001E  0009               	retfie
  2094  001F                     __end_of_InterTimer:	
  2095                           
  2096                           	psect	text8
  2097  03B8                     __ptext8:	
  2098 ;; *************** function i1_putch *****************
  2099 ;; Defined at:
  2100 ;;		line 4 in file "uart.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  Data            1    wreg     unsigned char 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  Data            1    0[COMMON] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;Total ram usage:        1 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_InterTimer
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function i1_putch
  2129  03B8                     i1_putch:	
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in i1_putch: [wreg]
  2133                           ;i1putch@Data stored from wreg
  2134  03B8  00F0               	movwf	i1putch@Data
  2135  03B9                     i1l176:	
  2136                           ;uart.c: 5: while(!TRMT){}
  2137                           
  2138  03B9  0023               	movlb	3	; select bank3
  2139  03BA  1C9E               	btfss	30,1	;volatile
  2140  03BB  2BB9               	goto	i1l176
  2141                           
  2142                           ;uart.c: 6: TXREG = Data;
  2143  03BC  0870               	movf	i1putch@Data,w
  2144  03BD  009A               	movwf	26	;volatile
  2145  03BE  0008               	return
  2146  03BF                     __end_ofi1_putch:	
  2147                           
  2148                           	psect	text9
  2149  0279                     __ptext9:	
  2150 ;; *************** function _change *****************
  2151 ;; Defined at:
  2152 ;;		line 25 in file "ver0.0_20140727.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;		None               void
  2159 ;; Registers used:
  2160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    1
  2173 ;; This function calls:
  2174 ;;		i1___wmul
  2175 ;; This function is called by:
  2176 ;;		_InterTimer
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _change
  2182  0279                     _change:	
  2183                           
  2184                           ;ver0.0_20140727.c: 26: RD4=0;RD5=0;
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2188  0279  0020               	movlb	0	; select bank0
  2189  027A  120F               	bcf	15,4	;volatile
  2190  027B  128F               	bcf	15,5	;volatile
  2191                           
  2192                           ;ver0.0_20140727.c: 27: ledcount++;
  2193  027C  3001               	movlw	1
  2194  027D  00F6               	movwf	??_change
  2195  027E  0876               	movf	??_change,w
  2196  027F  07FD               	addwf	_ledcount,f
  2197                           
  2198                           ;ver0.0_20140727.c: 29: PORTA=putdata[ledcount][0];
  2199  0280  087D               	movf	_ledcount,w
  2200  0281  00F6               	movwf	??_change
  2201  0282  01F7               	clrf	??_change+1
  2202  0283  0876               	movf	??_change,w
  2203  0284  00F0               	movwf	i1___wmul@multiplier
  2204  0285  0877               	movf	??_change+1,w
  2205  0286  00F1               	movwf	i1___wmul@multiplier+1
  2206  0287  3005               	movlw	5
  2207  0288  00F2               	movwf	i1___wmul@multiplicand
  2208  0289  3000               	movlw	0
  2209  028A  00F3               	movwf	i1___wmul@multiplicand+1
  2210  028B  3183  2345  3182   	fcall	i1___wmul
  2211  028E  309B               	movlw	155
  2212  028F  00F8               	movwf	??_change+2
  2213  0290  3023               	movlw	35
  2214  0291  00F9               	movwf	??_change+3
  2215  0292  0870               	movf	?i1___wmul,w
  2216  0293  0778               	addwf	??_change+2,w
  2217  0294  0086               	movwf	6
  2218  0295  0871               	movf	?i1___wmul+1,w
  2219  0296  3D79               	addwfc	??_change+3,w
  2220  0297  0087               	movwf	7
  2221  0298  0801               	movf	1,w
  2222  0299  0020               	movlb	0	; select bank0
  2223  029A  008C               	movwf	12	;volatile
  2224                           
  2225                           ;ver0.0_20140727.c: 30: PORTB=putdata[ledcount][1];
  2226  029B  087D               	movf	_ledcount,w
  2227  029C  00F6               	movwf	??_change
  2228  029D  01F7               	clrf	??_change+1
  2229  029E  0876               	movf	??_change,w
  2230  029F  00F0               	movwf	i1___wmul@multiplier
  2231  02A0  0877               	movf	??_change+1,w
  2232  02A1  00F1               	movwf	i1___wmul@multiplier+1
  2233  02A2  3005               	movlw	5
  2234  02A3  00F2               	movwf	i1___wmul@multiplicand
  2235  02A4  3000               	movlw	0
  2236  02A5  00F3               	movwf	i1___wmul@multiplicand+1
  2237  02A6  3183  2345  3182   	fcall	i1___wmul
  2238  02A9  0870               	movf	?i1___wmul,w
  2239  02AA  3E01               	addlw	1
  2240  02AB  00F8               	movwf	??_change+2
  2241  02AC  3000               	movlw	0
  2242  02AD  3D71               	addwfc	?i1___wmul+1,w
  2243  02AE  00F9               	movwf	??_change+3
  2244  02AF  309B               	movlw	155
  2245  02B0  00FA               	movwf	??_change+4
  2246  02B1  3023               	movlw	35
  2247  02B2  00FB               	movwf	??_change+5
  2248  02B3  0878               	movf	??_change+2,w
  2249  02B4  077A               	addwf	??_change+4,w
  2250  02B5  0086               	movwf	6
  2251  02B6  0879               	movf	??_change+3,w
  2252  02B7  3D7B               	addwfc	??_change+5,w
  2253  02B8  0087               	movwf	7
  2254  02B9  0801               	movf	1,w
  2255  02BA  0020               	movlb	0	; select bank0
  2256  02BB  008D               	movwf	13	;volatile
  2257                           
  2258                           ;ver0.0_20140727.c: 31: PORTC=putdata[ledcount][2];
  2259  02BC  087D               	movf	_ledcount,w
  2260  02BD  00F6               	movwf	??_change
  2261  02BE  01F7               	clrf	??_change+1
  2262  02BF  0876               	movf	??_change,w
  2263  02C0  00F0               	movwf	i1___wmul@multiplier
  2264  02C1  0877               	movf	??_change+1,w
  2265  02C2  00F1               	movwf	i1___wmul@multiplier+1
  2266  02C3  3005               	movlw	5
  2267  02C4  00F2               	movwf	i1___wmul@multiplicand
  2268  02C5  3000               	movlw	0
  2269  02C6  00F3               	movwf	i1___wmul@multiplicand+1
  2270  02C7  3183  2345  3182   	fcall	i1___wmul
  2271  02CA  0870               	movf	?i1___wmul,w
  2272  02CB  3E02               	addlw	2
  2273  02CC  00F8               	movwf	??_change+2
  2274  02CD  3000               	movlw	0
  2275  02CE  3D71               	addwfc	?i1___wmul+1,w
  2276  02CF  00F9               	movwf	??_change+3
  2277  02D0  309B               	movlw	155
  2278  02D1  00FA               	movwf	??_change+4
  2279  02D2  3023               	movlw	35
  2280  02D3  00FB               	movwf	??_change+5
  2281  02D4  0878               	movf	??_change+2,w
  2282  02D5  077A               	addwf	??_change+4,w
  2283  02D6  0086               	movwf	6
  2284  02D7  0879               	movf	??_change+3,w
  2285  02D8  3D7B               	addwfc	??_change+5,w
  2286  02D9  0087               	movwf	7
  2287  02DA  0801               	movf	1,w
  2288  02DB  0020               	movlb	0	; select bank0
  2289  02DC  008E               	movwf	14	;volatile
  2290                           
  2291                           ;ver0.0_20140727.c: 32: PORTD=putdata[ledcount][3];
  2292  02DD  087D               	movf	_ledcount,w
  2293  02DE  00F6               	movwf	??_change
  2294  02DF  01F7               	clrf	??_change+1
  2295  02E0  0876               	movf	??_change,w
  2296  02E1  00F0               	movwf	i1___wmul@multiplier
  2297  02E2  0877               	movf	??_change+1,w
  2298  02E3  00F1               	movwf	i1___wmul@multiplier+1
  2299  02E4  3005               	movlw	5
  2300  02E5  00F2               	movwf	i1___wmul@multiplicand
  2301  02E6  3000               	movlw	0
  2302  02E7  00F3               	movwf	i1___wmul@multiplicand+1
  2303  02E8  3183  2345  3182   	fcall	i1___wmul
  2304  02EB  0870               	movf	?i1___wmul,w
  2305  02EC  3E03               	addlw	3
  2306  02ED  00F8               	movwf	??_change+2
  2307  02EE  3000               	movlw	0
  2308  02EF  3D71               	addwfc	?i1___wmul+1,w
  2309  02F0  00F9               	movwf	??_change+3
  2310  02F1  309B               	movlw	155
  2311  02F2  00FA               	movwf	??_change+4
  2312  02F3  3023               	movlw	35
  2313  02F4  00FB               	movwf	??_change+5
  2314  02F5  0878               	movf	??_change+2,w
  2315  02F6  077A               	addwf	??_change+4,w
  2316  02F7  0086               	movwf	6
  2317  02F8  0879               	movf	??_change+3,w
  2318  02F9  3D7B               	addwfc	??_change+5,w
  2319  02FA  0087               	movwf	7
  2320  02FB  0801               	movf	1,w
  2321  02FC  0020               	movlb	0	; select bank0
  2322  02FD  008F               	movwf	15	;volatile
  2323                           
  2324                           ;ver0.0_20140727.c: 33: PORTE=putdata[ledcount][4];
  2325  02FE  087D               	movf	_ledcount,w
  2326  02FF  00F6               	movwf	??_change
  2327  0300  01F7               	clrf	??_change+1
  2328  0301  0876               	movf	??_change,w
  2329  0302  00F0               	movwf	i1___wmul@multiplier
  2330  0303  0877               	movf	??_change+1,w
  2331  0304  00F1               	movwf	i1___wmul@multiplier+1
  2332  0305  3005               	movlw	5
  2333  0306  00F2               	movwf	i1___wmul@multiplicand
  2334  0307  3000               	movlw	0
  2335  0308  00F3               	movwf	i1___wmul@multiplicand+1
  2336  0309  3183  2345  3182   	fcall	i1___wmul
  2337  030C  0870               	movf	?i1___wmul,w
  2338  030D  3E04               	addlw	4
  2339  030E  00F8               	movwf	??_change+2
  2340  030F  3000               	movlw	0
  2341  0310  3D71               	addwfc	?i1___wmul+1,w
  2342  0311  00F9               	movwf	??_change+3
  2343  0312  309B               	movlw	155
  2344  0313  00FA               	movwf	??_change+4
  2345  0314  3023               	movlw	35
  2346  0315  00FB               	movwf	??_change+5
  2347  0316  0878               	movf	??_change+2,w
  2348  0317  077A               	addwf	??_change+4,w
  2349  0318  0086               	movwf	6
  2350  0319  0879               	movf	??_change+3,w
  2351  031A  3D7B               	addwfc	??_change+5,w
  2352  031B  0087               	movwf	7
  2353  031C  0801               	movf	1,w
  2354  031D  0020               	movlb	0	; select bank0
  2355  031E  0090               	movwf	16	;volatile
  2356                           
  2357                           ;ver0.0_20140727.c: 34: if(ledcount==16){
  2358  031F  087D               	movf	_ledcount,w
  2359  0320  3A10               	xorlw	16
  2360  0321  1D03               	skipz
  2361  0322  0008               	return
  2362                           
  2363                           ;ver0.0_20140727.c: 35: ledcount=0;
  2364  0323  01FD               	clrf	_ledcount
  2365                           
  2366                           ;ver0.0_20140727.c: 36: RD5=1;
  2367  0324  168F               	bsf	15,5	;volatile
  2368                           
  2369                           ;ver0.0_20140727.c: 37: RD4=1;
  2370  0325  160F               	bsf	15,4	;volatile
  2371  0326  0008               	return
  2372  0327                     __end_of_change:	
  2373                           
  2374                           	psect	text10
  2375  0345                     __ptext10:	
  2376 ;; *************** function i1___wmul *****************
  2377 ;; Defined at:
  2378 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  multiplier      2    0[COMMON] unsigned int 
  2381 ;;  multiplicand    2    2[COMMON] unsigned int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  __wmul          2    4[COMMON] unsigned int 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2    0[COMMON] unsigned int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;Total ram usage:        6 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_change
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function i1___wmul
  2408  0345                     i1___wmul:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2412  0345  01F4               	clrf	i1___wmul@product
  2413  0346  01F5               	clrf	i1___wmul@product+1
  2414  0347                     i1l910:	
  2415  0347  1C70               	btfss	i1___wmul@multiplier,0
  2416  0348  2B4D               	goto	i1l269
  2417  0349  0872               	movf	i1___wmul@multiplicand,w
  2418  034A  07F4               	addwf	i1___wmul@product,f
  2419  034B  0873               	movf	i1___wmul@multiplicand+1,w
  2420  034C  3DF5               	addwfc	i1___wmul@product+1,f
  2421  034D                     i1l269:	
  2422  034D  3001               	movlw	1
  2423  034E                     u44_25:	
  2424  034E  35F2               	lslf	i1___wmul@multiplicand,f
  2425  034F  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2426  0350  0B89               	decfsz	9,f
  2427  0351  2B4E               	goto	u44_25
  2428  0352  3001               	movlw	1
  2429  0353                     u45_25:	
  2430  0353  36F1               	lsrf	i1___wmul@multiplier+1,f
  2431  0354  0CF0               	rrf	i1___wmul@multiplier,f
  2432  0355  0B89               	decfsz	9,f
  2433  0356  2B53               	goto	u45_25
  2434  0357  0871               	movf	i1___wmul@multiplier+1,w
  2435  0358  0470               	iorwf	i1___wmul@multiplier,w
  2436  0359  1D03               	skipz
  2437  035A  2B47               	goto	i1l910
  2438  035B  0875               	movf	i1___wmul@product+1,w
  2439  035C  01F1               	clrf	?i1___wmul+1
  2440  035D  07F1               	addwf	?i1___wmul+1,f
  2441  035E  0874               	movf	i1___wmul@product,w
  2442  035F  01F0               	clrf	?i1___wmul
  2443  0360  07F0               	addwf	?i1___wmul,f
  2444  0361  0008               	return
  2445  0362                     __end_ofi1___wmul:	
  2446  007E                     btemp	set	126	;btemp
  2447  007E                     pic14e$flags	set	126
  2448  007E                     wtemp	set	126
  2449  007E                     wtemp0	set	126
  2450  0080                     wtemp1	set	128
  2451  0082                     wtemp2	set	130
  2452  0084                     wtemp3	set	132
  2453  0086                     wtemp4	set	134
  2454  0088                     wtemp5	set	136
  2455  007F                     wtemp6	set	127
  2456  007E                     ttemp	set	126
  2457  007E                     ttemp0	set	126
  2458  0081                     ttemp1	set	129
  2459  0084                     ttemp2	set	132
  2460  0087                     ttemp3	set	135
  2461  007F                     ttemp4	set	127
  2462  007E                     ltemp	set	126
  2463  007E                     ltemp0	set	126
  2464  0082                     ltemp1	set	130
  2465  0086                     ltemp2	set	134
  2466  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     22      70
    BANK1            80     72      74
    BANK2            80     32      80
    BANK3            80      0      70
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           43      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    _InterTimer->_change
    _change->i1___wmul

Critical Paths under _main in BANK0

    _main->___wmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0    2099
                                              6 BANK0     16    16      0
                                              0 BANK1     72    72      0
                                              0 BANK2     32    32      0
                         _E2promRead
                             ___wmul
                              _getch
                              _putch
                             _setpin
                                 _x2
 ---------------------------------------------------------------------------------
 (1) _x2                                                   4     4      0      92
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     892
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _InterTimer                                           1     1      0     374
                                             12 COMMON     1     1      0
                             _change
                            i1_putch
 ---------------------------------------------------------------------------------
 (3) i1_putch                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _change                                               6     6      0     352
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (4) i1___wmul                                             6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   ___wmul
   _getch
   _putch
   _setpin
   _x2

 _InterTimer (ROOT)
   _change
     i1___wmul
   i1_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     48      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     20      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      46      11       87.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     134      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              2B      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     134      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Aug 25 03:22:55 2014

            ?_E2promRead 0070              __CFG_CP$OFF 0000                       _RD 0CA8  
                     _x2 0379      ___wmul@multiplicand 0052         i1___wmul@product 0074  
            __CFG_LVP$ON 0000                      ?_x2 0070                      l182 03B1  
                    l176 03A9                      l269 0330                      l980 0380  
                    l984 0381                      l986 038A                      _GIE 005F  
                    l998 032A                      _RD4 007C                      _RD5 007D  
           __CFG_CPD$OFF 0000                      u535 0331                      u545 0336  
                    u590 0063                      u825 0206                      u835 023E  
                    u775 0166                      u785 017A                      u857 00E1  
                    x2@i 0051                      _led 0120             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     ??_x2 0050  
            main@getdata 00A0                     l1100 010A                     l1120 0130  
                   l1112 0122                     l1104 0113                     l1114 0124  
                   l1122 0131                     l1060 0089                     l1150 0161  
                   l1134 014E                     l1144 015B                     l1136 0150  
                   l1128 013F                     l1162 019A                     l1090 00EF  
                   l1066 00BF                     l1084 00CE                     l1158 0191  
                   l1086 00E8                     _RCIF 008D                     _TMR0 0015  
                   _TRMT 0CF1                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0054              main@onetime 00E6  
                   _time 00E9                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     _stoc 0020                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 001F  
                   ttemp 007E                     wtemp 007E          __end_ofi1_putch 03BF  
          __CFG_PLLEN$ON 0000                    ?_main 0070                    _EEADR 0191  
          __CFG_WDTE$OFF 0000                    i1l119 001A                    i1l176 03B9  
                  i1l269 034D                    i1l910 0347                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _PORTE 0010                    u44_25 034E                    u45_25 0353  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _TRISE 0090                    _TXREG 019A  
                  _TXSTA 019E            __CFG_PWRTE$ON 0000                    x2@ret 0052  
                  x2@num 0053                    _getch 03B1                    _putch 03A7  
                  main@i 00E7                    main@j 0065                    main@n 0060  
    __size_of_E2promRead 000F         __end_ofi1___wmul 0362                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F      i1___wmul@multiplier 0070  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 0021  
           __end_of_main 0279                   ??_main 0056               _InterTimer 0004  
                 ?_getch 0070                   _EEDATA 0193                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   i1l1022 0016                   _OSCCON 0099  
              ??i1_putch 0070                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISC6 0476                   _TRISC7 0477                   _nWPUEN 04AF  
                 ___wmul 0327           __CFG_STVREN$ON 0000                   _change 0279  
          main@resetFlug 0064                   _setpin 0362            E2promRead@adr 0052  
__end_of__initialization 0050           __pcstackCOMMON 0070             ??_E2promRead 0050  
            i1putch@Data 0070            __end_of_getch 03B8            __end_of_putch 03B1  
             __end_of_x2 038C              ?_InterTimer 0070                ?i1___wmul 0070  
                ??_getch 0050           main@getKeeping 0150                  ??_putch 0050  
             __pbssBANK0 0020               __pbssBANK1 00E8               __pbssBANK2 0120  
             __pbssBANK3 01A0       __end_of_E2promRead 039B          __CFG_VCAPEN$OFF 0000  
             __pmaintext 0054                  ?___wmul 0050                  ?_change 0070  
             __pintentry 0004                  _BAUDCON 019F                  ?_setpin 0070  
             ??i1___wmul 0074           main@individual 0061                  i1_putch 03B8  
    __size_of_InterTimer 001B          __size_of___wmul 001E          __size_of_change 00AE  
                __ptext0 0000                  __ptext1 0379                  __ptext2 0362  
                __ptext3 03A7                  __ptext4 03B1                  __ptext5 0327  
                __ptext6 038C                  __ptext8 03B8                  __ptext9 0279  
        __size_of_setpin 0017                  _putdata 239B                  clrloop0 039C  
   end_of_initialization 0050    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
             main@getNum 0063           __end_of___wmul 0345           __end_of_change 0327  
           ??_InterTimer 007C           __end_of_setpin 0379      start_initialization 0021  
      __size_ofi1___wmul 001D       __end_of_InterTimer 001F                 ??___wmul 0054  
               ??_change 0076                 ??_setpin 0050              __pbssBIGRAM 239B  
            __pbssCOMMON 007D                ___latbits 0003            __pcstackBANK0 0050  
          __pcstackBANK1 00A0            __pcstackBANK2 0150       main@gettingSuccess 0062  
               ?i1_putch 0070           __size_of_getch 0007           __size_of_putch 000A  
            __size_of_x2 0013           ___wmul@product 0054                clear_ram0 039B  
              main@F3516 01A0        ___wmul@multiplier 0050                 i1___wmul 0345  
       __size_ofi1_putch 0007                 __ptext10 0345                 _ledcount 007D  
          __size_of_main 0225               _E2promRead 038C             _reservingNow 00E8  
              putch@Data 0050              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
