

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Aug 30 01:49:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x620,48
    25                           	dabs	1,0x5C6,42
    26                           	dabs	1,0x2396,0,_putdata
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  000F                     	;# 
    44  0010                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  008F                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  0110                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011D                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  018F                     	;# 
    98  0190                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020D                     	;# 
   120  0210                     	;# 
   121  0211                     	;# 
   122  0212                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0298                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029C                     	;# 
   144  029D                     	;# 
   145  029E                     	;# 
   146  029F                     	;# 
   147  0311                     	;# 
   148  0311                     	;# 
   149  0312                     	;# 
   150  0313                     	;# 
   151  0314                     	;# 
   152  0315                     	;# 
   153  0315                     	;# 
   154  0316                     	;# 
   155  0318                     	;# 
   156  0318                     	;# 
   157  0319                     	;# 
   158  031A                     	;# 
   159  031C                     	;# 
   160  031C                     	;# 
   161  031D                     	;# 
   162  031E                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  0415                     	;# 
   167  0416                     	;# 
   168  0417                     	;# 
   169  041C                     	;# 
   170  041D                     	;# 
   171  041E                     	;# 
   172  0791                     	;# 
   173  0792                     	;# 
   174  0793                     	;# 
   175  0794                     	;# 
   176  0795                     	;# 
   177  0798                     	;# 
   178  0799                     	;# 
   179  079A                     	;# 
   180  07A0                     	;# 
   181  07A1                     	;# 
   182  07A2                     	;# 
   183  07A3                     	;# 
   184  07A4                     	;# 
   185  07A5                     	;# 
   186  07A6                     	;# 
   187  07A7                     	;# 
   188  07A8                     	;# 
   189  07A9                     	;# 
   190  07AA                     	;# 
   191  07AB                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0110                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  018F                     	;# 
   273  0190                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019C                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019F                     	;# 
   294  020D                     	;# 
   295  0210                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029C                     	;# 
   319  029D                     	;# 
   320  029E                     	;# 
   321  029F                     	;# 
   322  0311                     	;# 
   323  0311                     	;# 
   324  0312                     	;# 
   325  0313                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0315                     	;# 
   329  0316                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031C                     	;# 
   335  031C                     	;# 
   336  031D                     	;# 
   337  031E                     	;# 
   338  0394                     	;# 
   339  0395                     	;# 
   340  0396                     	;# 
   341  0415                     	;# 
   342  0416                     	;# 
   343  0417                     	;# 
   344  041C                     	;# 
   345  041D                     	;# 
   346  041E                     	;# 
   347  0791                     	;# 
   348  0792                     	;# 
   349  0793                     	;# 
   350  0794                     	;# 
   351  0795                     	;# 
   352  0798                     	;# 
   353  0799                     	;# 
   354  079A                     	;# 
   355  07A0                     	;# 
   356  07A1                     	;# 
   357  07A2                     	;# 
   358  07A3                     	;# 
   359  07A4                     	;# 
   360  07A5                     	;# 
   361  07A6                     	;# 
   362  07A7                     	;# 
   363  07A8                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  07AB                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  0110                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011D                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  018F                     	;# 
   448  0190                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020D                     	;# 
   470  0210                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0291                     	;# 
   480  0291                     	;# 
   481  0292                     	;# 
   482  0293                     	;# 
   483  0294                     	;# 
   484  0295                     	;# 
   485  0295                     	;# 
   486  0296                     	;# 
   487  0298                     	;# 
   488  0298                     	;# 
   489  0299                     	;# 
   490  029A                     	;# 
   491  029B                     	;# 
   492  029C                     	;# 
   493  029C                     	;# 
   494  029D                     	;# 
   495  029E                     	;# 
   496  029F                     	;# 
   497  0311                     	;# 
   498  0311                     	;# 
   499  0312                     	;# 
   500  0313                     	;# 
   501  0314                     	;# 
   502  0315                     	;# 
   503  0315                     	;# 
   504  0316                     	;# 
   505  0318                     	;# 
   506  0318                     	;# 
   507  0319                     	;# 
   508  031A                     	;# 
   509  031C                     	;# 
   510  031C                     	;# 
   511  031D                     	;# 
   512  031E                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  0415                     	;# 
   517  0416                     	;# 
   518  0417                     	;# 
   519  041C                     	;# 
   520  041D                     	;# 
   521  041E                     	;# 
   522  0791                     	;# 
   523  0792                     	;# 
   524  0793                     	;# 
   525  0794                     	;# 
   526  0795                     	;# 
   527  0798                     	;# 
   528  0799                     	;# 
   529  079A                     	;# 
   530  07A0                     	;# 
   531  07A1                     	;# 
   532  07A2                     	;# 
   533  07A3                     	;# 
   534  07A4                     	;# 
   535  07A5                     	;# 
   536  07A6                     	;# 
   537  07A7                     	;# 
   538  07A8                     	;# 
   539  07A9                     	;# 
   540  07AA                     	;# 
   541  07AB                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;_putdata
   553  001E                     _CPSCON0	set	30
   554  001F                     _CPSCON1	set	31
   555  000C                     _PORTA	set	12
   556  000D                     _PORTB	set	13
   557  000E                     _PORTC	set	14
   558  000F                     _PORTD	set	15
   559  0010                     _PORTE	set	16
   560  0015                     _TMR0	set	21
   561  005F                     _GIE	set	95
   562  008D                     _RCIF	set	141
   563  005D                     _TMR0IE	set	93
   564  005A                     _TMR0IF	set	90
   565  0095                     _OPTION_REG	set	149
   566  0099                     _OSCCON	set	153
   567  008C                     _TRISA	set	140
   568  008D                     _TRISB	set	141
   569  008E                     _TRISC	set	142
   570  008F                     _TRISD	set	143
   571  0090                     _TRISE	set	144
   572  0476                     _TRISC6	set	1142
   573  0477                     _TRISC7	set	1143
   574  04AF                     _nWPUEN	set	1199
   575  010F                     _LATD	set	271
   576  0191                     _EEADR	set	401
   577  018C                     _ANSELA	set	396
   578  018D                     _ANSELB	set	397
   579  018F                     _ANSELD	set	399
   580  0190                     _ANSELE	set	400
   581  019F                     _BAUDCON	set	415
   582  0193                     _EEDATA	set	403
   583  0199                     _RCREG	set	409
   584  019D                     _RCSTA	set	413
   585  019B                     _SPBRG	set	411
   586  019A                     _TXREG	set	410
   587  019E                     _TXSTA	set	414
   588  0CA8                     _RD	set	3240
   589  0CF1                     _TRMT	set	3313
   590  020D                     _WPUB	set	525
   591  0293                     _CCP1CON	set	659
   592  029A                     _CCP2CON	set	666
   593  0791                     _LCDCON	set	1937
   594  079A                     _LCDSE2	set	1946
   595                           
   596                           	psect	text0
   597  0000                     __ptext0:	
   598                           ; #config settings
   599                           
   600                           
   601                           ;psect for function i1___wmul
   602  0000                     
   603                           	psect	cinit
   604  001C                     start_initialization:	
   605  001C                     __initialization:		;BIGRAM
   606                           
   607                           ; Clear objects allocated to BIGRAM
   608  001C  3096               	movlw	low (0+9110)
   609  001D  0084               	movwf	4
   610  001E  3023               	movlw	high (0+9110)
   611  001F  0085               	movwf	5
   612  0020  305A               	movlw	90
   613  0021  00FE               	movwf	btemp
   614  0022  3000               	movlw	0
   615  0023  00FF               	movwf	btemp+1
   616  0024  3183  23F5  3180   	fcall	clear_ram0
   617                           
   618                           ; Clear objects allocated to COMMON
   619  0027  01FD               	clrf	__pbssCOMMON& (0+127)
   620                           
   621                           ; Clear objects allocated to BANK0
   622  0028  01E6               	clrf	__pbssBANK0& (0+127)
   623  0029  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   624                           
   625                           ; Clear objects allocated to BANK2
   626  002A  3020               	movlw	low __pbssBANK2
   627  002B  0084               	movwf	4
   628  002C  3001               	movlw	high __pbssBANK2
   629  002D  0085               	movwf	5
   630  002E  3030               	movlw	48
   631  002F  00FE               	movwf	btemp
   632  0030  3000               	movlw	0
   633  0031  00FF               	movwf	btemp+1
   634  0032  3183  23F5  3180   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK3
   637  0035  30A0               	movlw	low __pbssBANK3
   638  0036  0084               	movwf	4
   639  0037  3001               	movlw	high __pbssBANK3
   640  0038  0085               	movwf	5
   641  0039  3030               	movlw	48
   642  003A  00FE               	movwf	btemp
   643  003B  3000               	movlw	0
   644  003C  00FF               	movwf	btemp+1
   645  003D  3183  23F5  3180   	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to BANK4
   648  0040  3020               	movlw	low __pbssBANK4
   649  0041  0084               	movwf	4
   650  0042  3002               	movlw	high __pbssBANK4
   651  0043  0085               	movwf	5
   652  0044  3046               	movlw	70
   653  0045  00FE               	movwf	btemp
   654  0046  3000               	movlw	0
   655  0047  00FF               	movwf	btemp+1
   656  0048  3183  23F5         	fcall	clear_ram0
   657  004A                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  004A                     __end_of__initialization:	
   661  004A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   662  004B  0020               	movlb	0
   663  004C  3180  284E         	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssCOMMON
   666  007D                     __pbssCOMMON:	
   667  007D                     _ledcount:	
   668  007D                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  0066                     __pbssBANK0:	
   672  0066                     _reservingNow:	
   673  0066                     	ds	1
   674  0067                     _time:	
   675  0067                     	ds	1
   676                           
   677                           	psect	bssBANK2
   678  0120                     __pbssBANK2:	
   679  0120                     _stoc:	
   680  0120                     	ds	48
   681                           
   682                           	psect	bssBANK3
   683  01A0                     __pbssBANK3:	
   684  01A0                     _led:	
   685  01A0                     	ds	48
   686                           
   687                           	psect	bssBANK4
   688  0220                     __pbssBANK4:	
   689  0220                     main@F3516:	
   690  0220                     	ds	70
   691                           
   692                           	psect	clrtext
   693  03F5                     clear_ram0:	
   694                           ;	Called with FSR0 containing the base address, and
   695                           ;	btemp/btemp+1 has the size to clear
   696                           
   697  03F5  0064               	clrwdt	;clear the watchdog before getting into this loop
   698  03F6                     clrloop0:	
   699  03F6  0180               	clrf	0	;clear RAM location pointed to by FSR
   700  03F7  3101               	addfsr 0,1
   701  03F8  3001               	movlw	1
   702  03F9  02FE               	subwf	126,f
   703  03FA  3000               	movlw	0
   704  03FB  3BFF               	subwfb	127,f
   705  03FC  087F               	movf	127,w
   706  03FD  047E               	iorwf	126,w
   707  03FE  1903               	btfsc	3,2
   708  03FF  3400               	retlw	0	;all done for this memory range, return
   709  0400  2BF6               	goto	clrloop0	;have we reached the end yet?
   710                           
   711                           	psect	cstackBANK1
   712  00A0                     __pcstackBANK1:	
   713  00A0                     main@getdata:	
   714                           
   715                           ; 70 bytes @ 0x0
   716  00A0                     	ds	70
   717                           
   718                           	psect	cstackCOMMON
   719  0070                     __pcstackCOMMON:	
   720  0070                     ?_setpin:	
   721  0070                     ?_change:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_InterTimer:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_main:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_E2promRead:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_x2:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?i1___wmul:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     i1___wmul@multiplier:	
   740                           ; 2 bytes @ 0x0
   741                           
   742                           
   743                           ; 2 bytes @ 0x0
   744  0070                     	ds	2
   745  0072                     i1___wmul@multiplicand:	
   746                           
   747                           ; 2 bytes @ 0x2
   748  0072                     	ds	2
   749  0074                     ??i1___wmul:	
   750  0074                     i1___wmul@product:	
   751                           ; 0 bytes @ 0x4
   752                           
   753                           
   754                           ; 2 bytes @ 0x4
   755  0074                     	ds	2
   756  0076                     ??_change:	
   757                           
   758                           ; 0 bytes @ 0x6
   759  0076                     	ds	6
   760  007C                     ??_InterTimer:	
   761                           
   762                           ; 0 bytes @ 0xC
   763  007C                     	ds	1
   764                           
   765                           	psect	cstackBANK0
   766  0020                     __pcstackBANK0:	
   767  0020                     ??_E2promRead:	
   768  0020                     ??_setpin:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0020                     ?___wmul:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0020                     ?___awdiv:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0020                     ___wmul@multiplier:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___awdiv@divisor:	
   781                           ; 2 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0020                     	ds	2
   786  0022                     E2promRead@adr:	
   787  0022                     ___wmul@multiplicand:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  0022                     ___awdiv@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0022                     	ds	2
   796  0024                     ??___wmul:	
   797  0024                     ??___awdiv:	
   798                           ; 0 bytes @ 0x4
   799                           
   800  0024                     ___wmul@product:	
   801                           ; 0 bytes @ 0x4
   802                           
   803                           
   804                           ; 2 bytes @ 0x4
   805  0024                     	ds	1
   806  0025                     ___awdiv@counter:	
   807                           
   808                           ; 1 bytes @ 0x5
   809  0025                     	ds	1
   810  0026                     ___awdiv@sign:	
   811                           
   812                           ; 1 bytes @ 0x6
   813  0026                     	ds	1
   814  0027                     ___awdiv@quotient:	
   815                           
   816                           ; 2 bytes @ 0x7
   817  0027                     	ds	2
   818  0029                     ??_x2:	
   819                           
   820                           ; 0 bytes @ 0x9
   821  0029                     	ds	3
   822  002C                     x2@i:	
   823                           
   824                           ; 1 bytes @ 0xC
   825  002C                     	ds	1
   826  002D                     x2@ret:	
   827                           
   828                           ; 1 bytes @ 0xD
   829  002D                     	ds	1
   830  002E                     x2@num:	
   831                           
   832                           ; 1 bytes @ 0xE
   833  002E                     	ds	1
   834  002F                     ??_main:	
   835                           
   836                           ; 0 bytes @ 0xF
   837  002F                     	ds	15
   838  003E                     main@getKeeping:	
   839                           
   840                           ; 32 bytes @ 0x1E
   841  003E                     	ds	32
   842  005E                     main@getNum:	
   843                           
   844                           ; 1 bytes @ 0x3E
   845  005E                     	ds	1
   846  005F                     main@onetime:	
   847                           
   848                           ; 1 bytes @ 0x3F
   849  005F                     	ds	1
   850  0060                     main@resetFlug:	
   851                           
   852                           ; 1 bytes @ 0x40
   853  0060                     	ds	1
   854  0061                     main@individual:	
   855                           
   856                           ; 1 bytes @ 0x41
   857  0061                     	ds	1
   858  0062                     main@n:	
   859                           
   860                           ; 1 bytes @ 0x42
   861  0062                     	ds	1
   862  0063                     main@gettingSuccess:	
   863                           
   864                           ; 1 bytes @ 0x43
   865  0063                     	ds	1
   866  0064                     main@j:	
   867                           
   868                           ; 1 bytes @ 0x44
   869  0064                     	ds	1
   870  0065                     main@i:	
   871                           
   872                           ; 1 bytes @ 0x45
   873  0065                     	ds	1
   874                           
   875                           	psect	maintext
   876  004E                     __pmaintext:	
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 69 in file "ver0.0_20140727.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  getdata        70    0[BANK1 ] unsigned char [70]
   887 ;;  getKeeping     32   30[BANK0 ] unsigned char [2][16]
   888 ;;  test           32    0        unsigned char [4][8]
   889 ;;  i               1   69[BANK0 ] unsigned char 
   890 ;;  j               1   68[BANK0 ] unsigned char 
   891 ;;  gettingSucce    1   67[BANK0 ] unsigned char 
   892 ;;  n               1   66[BANK0 ] unsigned char 
   893 ;;  individual      1   65[BANK0 ] unsigned char 
   894 ;;  resetFlug       1   64[BANK0 ] unsigned char 
   895 ;;  onetime         1   63[BANK0 ] unsigned char 
   896 ;;  getNum          1   62[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 17F/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0      40      70       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         0      55      70       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:      125 bytes
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		_E2promRead
   914 ;;		___wmul
   915 ;;		_setpin
   916 ;;		_x2
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _main
   924  004E                     _main:	
   925                           
   926                           ;ver0.0_20140727.c: 71: char i,j,n,test[8][4],individual=255;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   930  004E  30FF               	movlw	255
   931  004F  0020               	movlb	0	; select bank0
   932  0050  00AF               	movwf	??_main
   933  0051  082F               	movf	??_main,w
   934  0052  00E1               	movwf	main@individual
   935                           
   936                           ;ver0.0_20140727.c: 72: char getdata[70]={0},getKeeping[16][2],getNum=0,onetime=0,resetF
      +                          lug=0,gettingSuccess=0;
   937  0053  3020               	movlw	low main@F3516
   938  0054  0086               	movwf	6
   939  0055  3002               	movlw	high main@F3516
   940  0056  0087               	movwf	7
   941  0057  30A0               	movlw	low main@getdata
   942  0058  0084               	movwf	4
   943  0059  3000               	movlw	high main@getdata
   944  005A  0085               	movwf	5
   945  005B  3046               	movlw	70
   946  005C  00AF               	movwf	??_main
   947  005D                     u670:	
   948  005D  0016               	moviw fsr1++
   949  005E  001A               	movwi fsr0++
   950  005F  0BAF               	decfsz	??_main,f
   951  0060  285D               	goto	u670
   952  0061  01DE               	clrf	main@getNum
   953  0062  01DF               	clrf	main@onetime
   954  0063  01E0               	clrf	main@resetFlug
   955  0064  01E3               	clrf	main@gettingSuccess
   956                           
   957                           ;ver0.0_20140727.c: 73: setpin();
   958  0065  3183  2389  3180   	fcall	_setpin
   959                           
   960                           ;ver0.0_20140727.c: 74: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   961  0068  0021               	movlb	1	; select bank1
   962  0069  178E               	bsf	14,7	;volatile
   963  006A  130E               	bcf	14,6	;volatile
   964  006B  3033               	movlw	51
   965  006C  0023               	movlb	3	; select bank3
   966  006D  009B               	movwf	27	;volatile
   967  006E  3090               	movlw	144
   968  006F  009D               	movwf	29	;volatile
   969  0070  3024               	movlw	36
   970  0071  009E               	movwf	30	;volatile
   971  0072  019F               	clrf	31	;volatile
   972                           
   973                           ;ver0.0_20140727.c: 75: individual=E2promRead(0x00);
   974  0073  3000               	movlw	0
   975  0074  3183  23E6  3180   	fcall	_E2promRead
   976  0077  0020               	movlb	0	; select bank0
   977  0078  00AF               	movwf	??_main
   978  0079  082F               	movf	??_main,w
   979  007A  00E1               	movwf	main@individual
   980                           
   981                           ;ver0.0_20140727.c: 76: for(i=0;i<16;i++)
   982  007B  01E5               	clrf	main@i
   983  007C  3010               	movlw	16
   984  007D  0265               	subwf	main@i,w
   985  007E  1803               	btfsc	3,0
   986  007F  28B3               	goto	l1070
   987  0080                     l1064:	
   988                           
   989                           ;ver0.0_20140727.c: 77: putdata[i][1]=x2(i);
   990  0080  0865               	movf	main@i,w
   991  0081  3183  235C  3180   	fcall	_x2
   992  0084  0020               	movlb	0	; select bank0
   993  0085  00AF               	movwf	??_main
   994  0086  0865               	movf	main@i,w
   995  0087  00B0               	movwf	??_main+1
   996  0088  01B1               	clrf	??_main+2
   997  0089  0830               	movf	??_main+1,w
   998  008A  00A0               	movwf	___wmul@multiplier
   999  008B  0831               	movf	??_main+2,w
  1000  008C  00A1               	movwf	___wmul@multiplier+1
  1001  008D  3005               	movlw	5
  1002  008E  00A2               	movwf	___wmul@multiplicand
  1003  008F  3000               	movlw	0
  1004  0090  00A3               	movwf	___wmul@multiplicand+1
  1005  0091  3183  23AB  3180   	fcall	___wmul
  1006  0094  0020               	movlb	0	; select bank0
  1007  0095  0820               	movf	?___wmul,w
  1008  0096  3E01               	addlw	1
  1009  0097  00B2               	movwf	??_main+3
  1010  0098  3000               	movlw	0
  1011  0099  3D21               	addwfc	?___wmul+1,w
  1012  009A  00B3               	movwf	??_main+4
  1013  009B  3096               	movlw	150
  1014  009C  00B4               	movwf	??_main+5
  1015  009D  3023               	movlw	35
  1016  009E  00B5               	movwf	??_main+6
  1017  009F  0832               	movf	??_main+3,w
  1018  00A0  0734               	addwf	??_main+5,w
  1019  00A1  00B6               	movwf	??_main+7
  1020  00A2  0833               	movf	??_main+4,w
  1021  00A3  3D35               	addwfc	??_main+6,w
  1022  00A4  00B7               	movwf	??_main+8
  1023  00A5  0836               	movf	??_main+7,w
  1024  00A6  0086               	movwf	6
  1025  00A7  0837               	movf	??_main+8,w
  1026  00A8  0087               	movwf	7
  1027  00A9  082F               	movf	??_main,w
  1028  00AA  0081               	movwf	1
  1029  00AB  3001               	movlw	1
  1030  00AC  00AF               	movwf	??_main
  1031  00AD  082F               	movf	??_main,w
  1032  00AE  07E5               	addwf	main@i,f
  1033  00AF  3010               	movlw	16
  1034  00B0  0265               	subwf	main@i,w
  1035  00B1  1C03               	skipc
  1036  00B2  2880               	goto	l1064
  1037  00B3                     l1070:	
  1038                           
  1039                           ;ver0.0_20140727.c: 78: OPTION_REG = 0b0000100 ;
  1040  00B3  3004               	movlw	4
  1041  00B4  0021               	movlb	1	; select bank1
  1042  00B5  0095               	movwf	21	;volatile
  1043                           
  1044                           ;ver0.0_20140727.c: 79: TMR0 = 61 ;
  1045  00B6  303D               	movlw	61
  1046  00B7  0020               	movlb	0	; select bank0
  1047  00B8  0095               	movwf	21	;volatile
  1048                           
  1049                           ;ver0.0_20140727.c: 80: TMR0IF = 0 ;
  1050  00B9  110B               	bcf	11,2	;volatile
  1051                           
  1052                           ;ver0.0_20140727.c: 81: time = 0 ;
  1053  00BA  01E7               	clrf	_time
  1054                           
  1055                           ;ver0.0_20140727.c: 82: TMR0IE = 1 ;
  1056  00BB  168B               	bsf	11,5	;volatile
  1057                           
  1058                           ;ver0.0_20140727.c: 83: WPUB = 0xC0;
  1059  00BC  30C0               	movlw	192
  1060  00BD  0024               	movlb	4	; select bank4
  1061  00BE  008D               	movwf	13	;volatile
  1062                           
  1063                           ;ver0.0_20140727.c: 84: nWPUEN = 0;
  1064  00BF  0021               	movlb	1	; select bank1
  1065  00C0  1395               	bcf	21,7	;volatile
  1066                           
  1067                           ;ver0.0_20140727.c: 85: GIE = 0 ;
  1068  00C1  138B               	bcf	11,7	;volatile
  1069                           
  1070                           ;ver0.0_20140727.c: 126: gettingSuccess=2;
  1071                           
  1072                           ;ver0.0_20140727.c: 90: while(1) {
  1073  00C2  3002               	movlw	2
  1074  00C3  0020               	movlb	0	; select bank0
  1075  00C4  00AF               	movwf	??_main
  1076  00C5  082F               	movf	??_main,w
  1077  00C6  00E3               	movwf	main@gettingSuccess
  1078                           
  1079                           ;ver0.0_20140727.c: 127: for(i=0;i<64;i++)
  1080  00C7  01E5               	clrf	main@i
  1081  00C8  3040               	movlw	64
  1082  00C9  0265               	subwf	main@i,w
  1083  00CA  1803               	btfsc	3,0
  1084  00CB  28DC               	goto	l1096
  1085  00CC                     l1090:	
  1086                           
  1087                           ;ver0.0_20140727.c: 128: getdata[i]=0xff;
  1088  00CC  30FF               	movlw	255
  1089  00CD  00AF               	movwf	??_main
  1090  00CE  0865               	movf	main@i,w
  1091  00CF  3EA0               	addlw	main@getdata& (0+255)
  1092  00D0  0086               	movwf	6
  1093  00D1  0187               	clrf	7
  1094  00D2  082F               	movf	??_main,w
  1095  00D3  0081               	movwf	1
  1096  00D4  3001               	movlw	1
  1097  00D5  00AF               	movwf	??_main
  1098  00D6  082F               	movf	??_main,w
  1099  00D7  07E5               	addwf	main@i,f
  1100  00D8  3040               	movlw	64
  1101  00D9  0265               	subwf	main@i,w
  1102  00DA  1C03               	skipc
  1103  00DB  28CC               	goto	l1090
  1104  00DC                     l1096:	
  1105                           
  1106                           ;ver0.0_20140727.c: 129: if(gettingSuccess==2){
  1107  00DC  0863               	movf	main@gettingSuccess,w
  1108  00DD  3A02               	xorlw	2
  1109  00DE  1D03               	skipz
  1110  00DF  2A5D               	goto	l140
  1111                           
  1112                           ;ver0.0_20140727.c: 130: for(i=1;i<17;i++){
  1113  00E0  01E5               	clrf	main@i
  1114  00E1  0AE5               	incf	main@i,f
  1115  00E2  3011               	movlw	17
  1116  00E3  0265               	subwf	main@i,w
  1117  00E4  1803               	btfsc	3,0
  1118  00E5  291F               	goto	l142
  1119  00E6                     l1104:	
  1120                           
  1121                           ;ver0.0_20140727.c: 131: for(j=0;j<2;j++){
  1122  00E6  01E4               	clrf	main@j
  1123  00E7  3002               	movlw	2
  1124  00E8  0264               	subwf	main@j,w
  1125  00E9  1803               	btfsc	3,0
  1126  00EA  2917               	goto	l1118
  1127  00EB                     l1110:	
  1128                           
  1129                           ;ver0.0_20140727.c: 132: n=(i-1)*4+j;
  1130  00EB  0865               	movf	main@i,w
  1131  00EC  00AF               	movwf	??_main
  1132  00ED  3001               	movlw	1
  1133  00EE                     u755:	
  1134  00EE  35AF               	lslf	??_main,f
  1135  00EF  3EFF               	addlw	-1
  1136  00F0  1D03               	skipz
  1137  00F1  28EE               	goto	u755
  1138  00F2  352F               	lslf	??_main,w
  1139  00F3  0764               	addwf	main@j,w
  1140  00F4  3EFC               	addlw	252
  1141  00F5  00B0               	movwf	??_main+1
  1142  00F6  0830               	movf	??_main+1,w
  1143  00F7  00E2               	movwf	main@n
  1144                           
  1145                           ;ver0.0_20140727.c: 133: getKeeping[i][j]=getdata[n];
  1146  00F8  0862               	movf	main@n,w
  1147  00F9  3EA0               	addlw	main@getdata& (0+255)
  1148  00FA  0086               	movwf	6
  1149  00FB  0187               	clrf	7
  1150  00FC  0801               	movf	1,w
  1151  00FD  00AF               	movwf	??_main
  1152  00FE  0865               	movf	main@i,w
  1153  00FF  00B0               	movwf	??_main+1
  1154  0100  3001               	movlw	1
  1155  0101                     u765:	
  1156  0101  35B0               	lslf	??_main+1,f
  1157  0102  0B89               	decfsz	9,f
  1158  0103  2901               	goto	u765
  1159  0104  303E               	movlw	main@getKeeping& (0+255)
  1160  0105  0730               	addwf	??_main+1,w
  1161  0106  00B1               	movwf	??_main+2
  1162  0107  0864               	movf	main@j,w
  1163  0108  0731               	addwf	??_main+2,w
  1164  0109  00B2               	movwf	??_main+3
  1165  010A  0832               	movf	??_main+3,w
  1166  010B  0086               	movwf	6
  1167  010C  0187               	clrf	7
  1168  010D  082F               	movf	??_main,w
  1169  010E  0081               	movwf	1
  1170  010F  3001               	movlw	1
  1171  0110  00AF               	movwf	??_main
  1172  0111  082F               	movf	??_main,w
  1173  0112  07E4               	addwf	main@j,f
  1174  0113  3002               	movlw	2
  1175  0114  0264               	subwf	main@j,w
  1176  0115  1C03               	skipc
  1177  0116  28EB               	goto	l1110
  1178  0117                     l1118:	
  1179  0117  3001               	movlw	1
  1180  0118  00AF               	movwf	??_main
  1181  0119  082F               	movf	??_main,w
  1182  011A  07E5               	addwf	main@i,f
  1183  011B  3011               	movlw	17
  1184  011C  0265               	subwf	main@i,w
  1185  011D  1C03               	skipc
  1186  011E  28E6               	goto	l1104
  1187  011F                     l142:	
  1188                           
  1189                           ;ver0.0_20140727.c: 134: }
  1190                           ;ver0.0_20140727.c: 135: }
  1191                           ;ver0.0_20140727.c: 136: for(i=1;i<17;i++){
  1192  011F  01E5               	clrf	main@i
  1193  0120  0AE5               	incf	main@i,f
  1194  0121  3011               	movlw	17
  1195  0122  0265               	subwf	main@i,w
  1196  0123  1803               	btfsc	3,0
  1197  0124  2A5D               	goto	l140
  1198  0125                     l1126:	
  1199                           
  1200                           ;ver0.0_20140727.c: 138: putdata[i][0]=getKeeping[i][0]&0b11111110;
  1201  0125  3565               	lslf	main@i,w
  1202  0126  3E3E               	addlw	main@getKeeping& (0+255)
  1203  0127  0086               	movwf	6
  1204  0128  0187               	clrf	7
  1205  0129  0801               	movf	1,w
  1206  012A  39FE               	andlw	254
  1207  012B  00AF               	movwf	??_main
  1208  012C  0865               	movf	main@i,w
  1209  012D  00B0               	movwf	??_main+1
  1210  012E  01B1               	clrf	??_main+2
  1211  012F  0830               	movf	??_main+1,w
  1212  0130  00A0               	movwf	___wmul@multiplier
  1213  0131  0831               	movf	??_main+2,w
  1214  0132  00A1               	movwf	___wmul@multiplier+1
  1215  0133  3005               	movlw	5
  1216  0134  00A2               	movwf	___wmul@multiplicand
  1217  0135  3000               	movlw	0
  1218  0136  00A3               	movwf	___wmul@multiplicand+1
  1219  0137  3183  23AB  3180   	fcall	___wmul
  1220  013A  3096               	movlw	150
  1221  013B  0020               	movlb	0	; select bank0
  1222  013C  00B2               	movwf	??_main+3
  1223  013D  3023               	movlw	35
  1224  013E  00B3               	movwf	??_main+4
  1225  013F  0820               	movf	?___wmul,w
  1226  0140  0732               	addwf	??_main+3,w
  1227  0141  00B4               	movwf	??_main+5
  1228  0142  0821               	movf	?___wmul+1,w
  1229  0143  3D33               	addwfc	??_main+4,w
  1230  0144  00B5               	movwf	??_main+6
  1231  0145  0834               	movf	??_main+5,w
  1232  0146  0086               	movwf	6
  1233  0147  0835               	movf	??_main+6,w
  1234  0148  0087               	movwf	7
  1235  0149  082F               	movf	??_main,w
  1236  014A  0081               	movwf	1
  1237                           
  1238                           ;ver0.0_20140727.c: 140: putdata[i][2]=getKeeping[i][1]&0b00001111;
  1239  014B  1403               	setc
  1240  014C  0D65               	rlf	main@i,w
  1241  014D  3E3E               	addlw	main@getKeeping& (0+255)
  1242  014E  0086               	movwf	6
  1243  014F  0187               	clrf	7
  1244  0150  0801               	movf	1,w
  1245  0151  390F               	andlw	15
  1246  0152  00AF               	movwf	??_main
  1247  0153  0865               	movf	main@i,w
  1248  0154  00B0               	movwf	??_main+1
  1249  0155  01B1               	clrf	??_main+2
  1250  0156  0830               	movf	??_main+1,w
  1251  0157  00A0               	movwf	___wmul@multiplier
  1252  0158  0831               	movf	??_main+2,w
  1253  0159  00A1               	movwf	___wmul@multiplier+1
  1254  015A  3005               	movlw	5
  1255  015B  00A2               	movwf	___wmul@multiplicand
  1256  015C  3000               	movlw	0
  1257  015D  00A3               	movwf	___wmul@multiplicand+1
  1258  015E  3183  23AB  3180   	fcall	___wmul
  1259  0161  0020               	movlb	0	; select bank0
  1260  0162  0820               	movf	?___wmul,w
  1261  0163  3E02               	addlw	2
  1262  0164  00B2               	movwf	??_main+3
  1263  0165  3000               	movlw	0
  1264  0166  3D21               	addwfc	?___wmul+1,w
  1265  0167  00B3               	movwf	??_main+4
  1266  0168  3096               	movlw	150
  1267  0169  00B4               	movwf	??_main+5
  1268  016A  3023               	movlw	35
  1269  016B  00B5               	movwf	??_main+6
  1270  016C  0832               	movf	??_main+3,w
  1271  016D  0734               	addwf	??_main+5,w
  1272  016E  00B6               	movwf	??_main+7
  1273  016F  0833               	movf	??_main+4,w
  1274  0170  3D35               	addwfc	??_main+6,w
  1275  0171  00B7               	movwf	??_main+8
  1276  0172  0836               	movf	??_main+7,w
  1277  0173  0086               	movwf	6
  1278  0174  0837               	movf	??_main+8,w
  1279  0175  0087               	movwf	7
  1280  0176  082F               	movf	??_main,w
  1281  0177  0081               	movwf	1
  1282                           
  1283                           ;ver0.0_20140727.c: 142: putdata[i][3]=(getKeeping[i][0]&0b00000001)|((getKeeping[i][1]&
      +                          0b10000000)>>6);
  1284  0178  1403               	setc
  1285  0179  0D65               	rlf	main@i,w
  1286  017A  3E3E               	addlw	main@getKeeping& (0+255)
  1287  017B  0086               	movwf	6
  1288  017C  0187               	clrf	7
  1289  017D  0801               	movf	1,w
  1290  017E  00AF               	movwf	??_main
  1291  017F  3006               	movlw	6
  1292  0180                     u805:	
  1293  0180  36AF               	lsrf	??_main,f
  1294  0181  0B89               	decfsz	9,f
  1295  0182  2980               	goto	u805
  1296  0183  3002               	movlw	2
  1297  0184  052F               	andwf	??_main,w
  1298  0185  00B0               	movwf	??_main+1
  1299  0186  3565               	lslf	main@i,w
  1300  0187  3E3E               	addlw	main@getKeeping& (0+255)
  1301  0188  0086               	movwf	6
  1302  0189  0187               	clrf	7
  1303  018A  0801               	movf	1,w
  1304  018B  3901               	andlw	1
  1305  018C  0430               	iorwf	??_main+1,w
  1306  018D  00B1               	movwf	??_main+2
  1307  018E  0865               	movf	main@i,w
  1308  018F  00B2               	movwf	??_main+3
  1309  0190  01B3               	clrf	??_main+4
  1310  0191  0832               	movf	??_main+3,w
  1311  0192  00A0               	movwf	___wmul@multiplier
  1312  0193  0833               	movf	??_main+4,w
  1313  0194  00A1               	movwf	___wmul@multiplier+1
  1314  0195  3005               	movlw	5
  1315  0196  00A2               	movwf	___wmul@multiplicand
  1316  0197  3000               	movlw	0
  1317  0198  00A3               	movwf	___wmul@multiplicand+1
  1318  0199  3183  23AB  3180   	fcall	___wmul
  1319  019C  0020               	movlb	0	; select bank0
  1320  019D  0820               	movf	?___wmul,w
  1321  019E  3E03               	addlw	3
  1322  019F  00B4               	movwf	??_main+5
  1323  01A0  3000               	movlw	0
  1324  01A1  3D21               	addwfc	?___wmul+1,w
  1325  01A2  00B5               	movwf	??_main+6
  1326  01A3  3096               	movlw	150
  1327  01A4  00B6               	movwf	??_main+7
  1328  01A5  3023               	movlw	35
  1329  01A6  00B7               	movwf	??_main+8
  1330  01A7  0834               	movf	??_main+5,w
  1331  01A8  0736               	addwf	??_main+7,w
  1332  01A9  00B8               	movwf	??_main+9
  1333  01AA  0835               	movf	??_main+6,w
  1334  01AB  3D37               	addwfc	??_main+8,w
  1335  01AC  00B9               	movwf	??_main+10
  1336  01AD  0838               	movf	??_main+9,w
  1337  01AE  0086               	movwf	6
  1338  01AF  0839               	movf	??_main+10,w
  1339  01B0  0087               	movwf	7
  1340  01B1  0831               	movf	??_main+2,w
  1341  01B2  0081               	movwf	1
  1342                           
  1343                           ;ver0.0_20140727.c: 143: if(i==16)
  1344  01B3  0865               	movf	main@i,w
  1345  01B4  3A10               	xorlw	16
  1346  01B5  1D03               	skipz
  1347  01B6  29D9               	goto	l147
  1348                           
  1349                           ;ver0.0_20140727.c: 144: putdata[i][3]=putdata[i][3]|0b10110000;
  1350  01B7  0865               	movf	main@i,w
  1351  01B8  00AF               	movwf	??_main
  1352  01B9  01B0               	clrf	??_main+1
  1353  01BA  082F               	movf	??_main,w
  1354  01BB  00A0               	movwf	___wmul@multiplier
  1355  01BC  0830               	movf	??_main+1,w
  1356  01BD  00A1               	movwf	___wmul@multiplier+1
  1357  01BE  3005               	movlw	5
  1358  01BF  00A2               	movwf	___wmul@multiplicand
  1359  01C0  3000               	movlw	0
  1360  01C1  00A3               	movwf	___wmul@multiplicand+1
  1361  01C2  3183  23AB  3180   	fcall	___wmul
  1362  01C5  0020               	movlb	0	; select bank0
  1363  01C6  0820               	movf	?___wmul,w
  1364  01C7  3E03               	addlw	3
  1365  01C8  00B1               	movwf	??_main+2
  1366  01C9  3000               	movlw	0
  1367  01CA  3D21               	addwfc	?___wmul+1,w
  1368  01CB  00B2               	movwf	??_main+3
  1369  01CC  3096               	movlw	150
  1370  01CD  00B3               	movwf	??_main+4
  1371  01CE  3023               	movlw	35
  1372  01CF  00B4               	movwf	??_main+5
  1373  01D0  0831               	movf	??_main+2,w
  1374  01D1  0733               	addwf	??_main+4,w
  1375  01D2  0086               	movwf	6
  1376  01D3  0832               	movf	??_main+3,w
  1377  01D4  3D34               	addwfc	??_main+5,w
  1378  01D5  0087               	movwf	7
  1379  01D6  0801               	movf	1,w
  1380  01D7  38B0               	iorlw	176
  1381  01D8  29FC               	goto	L2
  1382  01D9                     l147:	
  1383                           
  1384                           ;ver0.0_20140727.c: 145: else if(i%2==0)
  1385  01D9  1865               	btfsc	main@i,0
  1386  01DA  2A22               	goto	l148
  1387                           
  1388                           ;ver0.0_20140727.c: 146: putdata[i][3]=putdata[i][3]|0b10010000;
  1389  01DB  0865               	movf	main@i,w
  1390  01DC  00AF               	movwf	??_main
  1391  01DD  01B0               	clrf	??_main+1
  1392  01DE  082F               	movf	??_main,w
  1393  01DF  00A0               	movwf	___wmul@multiplier
  1394  01E0  0830               	movf	??_main+1,w
  1395  01E1  00A1               	movwf	___wmul@multiplier+1
  1396  01E2  3005               	movlw	5
  1397  01E3  00A2               	movwf	___wmul@multiplicand
  1398  01E4  3000               	movlw	0
  1399  01E5  00A3               	movwf	___wmul@multiplicand+1
  1400  01E6  3183  23AB  3180   	fcall	___wmul
  1401  01E9  0020               	movlb	0	; select bank0
  1402  01EA  0820               	movf	?___wmul,w
  1403  01EB  3E03               	addlw	3
  1404  01EC  00B1               	movwf	??_main+2
  1405  01ED  3000               	movlw	0
  1406  01EE  3D21               	addwfc	?___wmul+1,w
  1407  01EF  00B2               	movwf	??_main+3
  1408  01F0  3096               	movlw	150
  1409  01F1  00B3               	movwf	??_main+4
  1410  01F2  3023               	movlw	35
  1411  01F3  00B4               	movwf	??_main+5
  1412  01F4  0831               	movf	??_main+2,w
  1413  01F5  0733               	addwf	??_main+4,w
  1414  01F6  0086               	movwf	6
  1415  01F7  0832               	movf	??_main+3,w
  1416  01F8  3D34               	addwfc	??_main+5,w
  1417  01F9  0087               	movwf	7
  1418  01FA  0801               	movf	1,w
  1419  01FB  3890               	iorlw	144
  1420  01FC                     L2:	
  1421  01FC  00B5               	movwf	??_main+6
  1422  01FD  0865               	movf	main@i,w
  1423  01FE  00B6               	movwf	??_main+7
  1424  01FF  01B7               	clrf	??_main+8
  1425  0200  0836               	movf	??_main+7,w
  1426  0201  00A0               	movwf	___wmul@multiplier
  1427  0202  0837               	movf	??_main+8,w
  1428  0203  00A1               	movwf	___wmul@multiplier+1
  1429  0204  3005               	movlw	5
  1430  0205  00A2               	movwf	___wmul@multiplicand
  1431  0206  3000               	movlw	0
  1432  0207  00A3               	movwf	___wmul@multiplicand+1
  1433  0208  3183  23AB  3180   	fcall	___wmul
  1434  020B  0020               	movlb	0	; select bank0
  1435  020C  0820               	movf	?___wmul,w
  1436  020D  3E03               	addlw	3
  1437  020E  00B8               	movwf	??_main+9
  1438  020F  3000               	movlw	0
  1439  0210  3D21               	addwfc	?___wmul+1,w
  1440  0211  00B9               	movwf	??_main+10
  1441  0212  3096               	movlw	150
  1442  0213  00BA               	movwf	??_main+11
  1443  0214  3023               	movlw	35
  1444  0215  00BB               	movwf	??_main+12
  1445  0216  0838               	movf	??_main+9,w
  1446  0217  073A               	addwf	??_main+11,w
  1447  0218  00BC               	movwf	??_main+13
  1448  0219  0839               	movf	??_main+10,w
  1449  021A  3D3B               	addwfc	??_main+12,w
  1450  021B  00BD               	movwf	??_main+14
  1451  021C  083C               	movf	??_main+13,w
  1452  021D  0086               	movwf	6
  1453  021E  083D               	movf	??_main+14,w
  1454  021F  0087               	movwf	7
  1455  0220  0835               	movf	??_main+6,w
  1456  0221  0081               	movwf	1
  1457  0222                     l148:	
  1458                           
  1459                           ;ver0.0_20140727.c: 148: putdata[i][4]=(getKeeping[i][1]&0b01110000)>>4;
  1460  0222  1403               	setc
  1461  0223  0D65               	rlf	main@i,w
  1462  0224  3E3E               	addlw	main@getKeeping& (0+255)
  1463  0225  0086               	movwf	6
  1464  0226  0187               	clrf	7
  1465  0227  0801               	movf	1,w
  1466  0228  00AF               	movwf	??_main
  1467  0229  3004               	movlw	4
  1468  022A                     u835:	
  1469  022A  36AF               	lsrf	??_main,f
  1470  022B  0B89               	decfsz	9,f
  1471  022C  2A2A               	goto	u835
  1472  022D  082F               	movf	??_main,w
  1473  022E  3907               	andlw	7
  1474  022F  00B0               	movwf	??_main+1
  1475  0230  0865               	movf	main@i,w
  1476  0231  00B1               	movwf	??_main+2
  1477  0232  01B2               	clrf	??_main+3
  1478  0233  0831               	movf	??_main+2,w
  1479  0234  00A0               	movwf	___wmul@multiplier
  1480  0235  0832               	movf	??_main+3,w
  1481  0236  00A1               	movwf	___wmul@multiplier+1
  1482  0237  3005               	movlw	5
  1483  0238  00A2               	movwf	___wmul@multiplicand
  1484  0239  3000               	movlw	0
  1485  023A  00A3               	movwf	___wmul@multiplicand+1
  1486  023B  3183  23AB  3180   	fcall	___wmul
  1487  023E  0020               	movlb	0	; select bank0
  1488  023F  0820               	movf	?___wmul,w
  1489  0240  3E04               	addlw	4
  1490  0241  00B3               	movwf	??_main+4
  1491  0242  3000               	movlw	0
  1492  0243  3D21               	addwfc	?___wmul+1,w
  1493  0244  00B4               	movwf	??_main+5
  1494  0245  3096               	movlw	150
  1495  0246  00B5               	movwf	??_main+6
  1496  0247  3023               	movlw	35
  1497  0248  00B6               	movwf	??_main+7
  1498  0249  0833               	movf	??_main+4,w
  1499  024A  0735               	addwf	??_main+6,w
  1500  024B  00B7               	movwf	??_main+8
  1501  024C  0834               	movf	??_main+5,w
  1502  024D  3D36               	addwfc	??_main+7,w
  1503  024E  00B8               	movwf	??_main+9
  1504  024F  0837               	movf	??_main+8,w
  1505  0250  0086               	movwf	6
  1506  0251  0838               	movf	??_main+9,w
  1507  0252  0087               	movwf	7
  1508  0253  0830               	movf	??_main+1,w
  1509  0254  0081               	movwf	1
  1510  0255  3001               	movlw	1
  1511  0256  00AF               	movwf	??_main
  1512  0257  082F               	movf	??_main,w
  1513  0258  07E5               	addwf	main@i,f
  1514  0259  3011               	movlw	17
  1515  025A  0265               	subwf	main@i,w
  1516  025B  1C03               	skipc
  1517  025C  2925               	goto	l1126
  1518  025D                     l140:	
  1519                           
  1520                           ;ver0.0_20140727.c: 149: }
  1521                           ;ver0.0_20140727.c: 150: }
  1522                           ;ver0.0_20140727.c: 151: GIE=1;
  1523  025D  178B               	bsf	11,7	;volatile
  1524  025E                     l150:	
  1525                           ;ver0.0_20140727.c: 152: while(1);
  1526                           
  1527  025E  2A5E               	goto	l150
  1528  025F                     __end_of_main:	
  1529                           
  1530                           	psect	text1
  1531  035C                     __ptext1:	
  1532 ;; *************** function _x2 *****************
  1533 ;; Defined at:
  1534 ;;		line 57 in file "ver0.0_20140727.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  num             1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  num             1   14[BANK0 ] unsigned char 
  1539 ;;  ret             1   13[BANK0 ] unsigned char 
  1540 ;;  i               1   12[BANK0 ] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1552 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1554 ;;Total ram usage:        6 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    4
  1557 ;; This function calls:
  1558 ;;		___awdiv
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _x2
  1566  035C                     _x2:	
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _x2: [wreg+status,2+status,0+pclath+cstack]
  1570                           ;x2@num stored from wreg
  1571  035C  0020               	movlb	0	; select bank0
  1572  035D  00AE               	movwf	x2@num
  1573                           
  1574                           ;ver0.0_20140727.c: 58: char i,ret=0;
  1575  035E  01AD               	clrf	x2@ret
  1576                           
  1577                           ;ver0.0_20140727.c: 59: if(num%2)
  1578  035F  1C2E               	btfss	x2@num,0
  1579  0360  2B63               	goto	l996
  1580                           
  1581                           ;ver0.0_20140727.c: 60: ret=1;
  1582  0361  01AD               	clrf	x2@ret
  1583  0362  0AAD               	incf	x2@ret,f
  1584  0363                     l996:	
  1585                           
  1586                           ;ver0.0_20140727.c: 61: num=7-num/2;
  1587  0363  3002               	movlw	2
  1588  0364  00A0               	movwf	___awdiv@divisor
  1589  0365  3000               	movlw	0
  1590  0366  00A1               	movwf	___awdiv@divisor+1
  1591  0367  082E               	movf	x2@num,w
  1592  0368  00A9               	movwf	??_x2
  1593  0369  01AA               	clrf	??_x2+1
  1594  036A  0829               	movf	??_x2,w
  1595  036B  00A2               	movwf	___awdiv@dividend
  1596  036C  082A               	movf	??_x2+1,w
  1597  036D  00A3               	movwf	___awdiv@dividend+1
  1598  036E  3183  2308  3183   	fcall	___awdiv
  1599  0371  0020               	movlb	0	; select bank0
  1600  0372  0820               	movf	?___awdiv,w
  1601  0373  3AFF               	xorlw	255
  1602  0374  3E01               	addlw	1
  1603  0375  3E07               	addlw	7
  1604  0376  00AB               	movwf	??_x2+2
  1605  0377  082B               	movf	??_x2+2,w
  1606  0378  00AE               	movwf	x2@num
  1607                           
  1608                           ;ver0.0_20140727.c: 62: for(i=0;i<num;i++)
  1609  0379  01AC               	clrf	x2@i
  1610  037A                     l1002:	
  1611  037A  082E               	movf	x2@num,w
  1612  037B  022C               	subwf	x2@i,w
  1613  037C  1803               	btfsc	3,0
  1614  037D  2B87               	goto	l1004
  1615                           
  1616                           ;ver0.0_20140727.c: 63: ret=ret*2;
  1617  037E  352D               	lslf	x2@ret,w
  1618  037F  00A9               	movwf	??_x2
  1619  0380  0829               	movf	??_x2,w
  1620  0381  00AD               	movwf	x2@ret
  1621  0382  3001               	movlw	1
  1622  0383  00A9               	movwf	??_x2
  1623  0384  0829               	movf	??_x2,w
  1624  0385  07AC               	addwf	x2@i,f
  1625  0386  2B7A               	goto	l1002
  1626  0387                     l1004:	
  1627                           
  1628                           ;ver0.0_20140727.c: 64: return ret;
  1629  0387  082D               	movf	x2@ret,w
  1630  0388  0008               	return
  1631  0389                     __end_of_x2:	
  1632                           
  1633                           	psect	text2
  1634  0308                     __ptext2:	
  1635 ;; *************** function ___awdiv *****************
  1636 ;; Defined at:
  1637 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awdiv.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  divisor         2    0[BANK0 ] int 
  1640 ;;  dividend        2    2[BANK0 ] int 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  quotient        2    7[BANK0 ] int 
  1643 ;;  sign            1    6[BANK0 ] unsigned char 
  1644 ;;  counter         1    5[BANK0 ] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    0[BANK0 ] int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1658 ;;Total ram usage:        9 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    3
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_x2
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function ___awdiv
  1670  0308                     ___awdiv:	
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1674  0308  0020               	movlb	0	; select bank0
  1675  0309  01A6               	clrf	___awdiv@sign
  1676  030A  1FA1               	btfss	___awdiv@divisor+1,7
  1677  030B  2B13               	goto	l898
  1678  030C  09A0               	comf	___awdiv@divisor,f
  1679  030D  09A1               	comf	___awdiv@divisor+1,f
  1680  030E  0AA0               	incf	___awdiv@divisor,f
  1681  030F  1903               	skipnz
  1682  0310  0AA1               	incf	___awdiv@divisor+1,f
  1683  0311  01A6               	clrf	___awdiv@sign
  1684  0312  0AA6               	incf	___awdiv@sign,f
  1685  0313                     l898:	
  1686  0313  1FA3               	btfss	___awdiv@dividend+1,7
  1687  0314  2B1E               	goto	l904
  1688  0315  09A2               	comf	___awdiv@dividend,f
  1689  0316  09A3               	comf	___awdiv@dividend+1,f
  1690  0317  0AA2               	incf	___awdiv@dividend,f
  1691  0318  1903               	skipnz
  1692  0319  0AA3               	incf	___awdiv@dividend+1,f
  1693  031A  3001               	movlw	1
  1694  031B  00A4               	movwf	??___awdiv
  1695  031C  0824               	movf	??___awdiv,w
  1696  031D  06A6               	xorwf	___awdiv@sign,f
  1697  031E                     l904:	
  1698  031E  01A7               	clrf	___awdiv@quotient
  1699  031F  01A8               	clrf	___awdiv@quotient+1
  1700  0320  0821               	movf	___awdiv@divisor+1,w
  1701  0321  0420               	iorwf	___awdiv@divisor,w
  1702  0322  1903               	skipnz
  1703  0323  2B4D               	goto	l926
  1704  0324  01A5               	clrf	___awdiv@counter
  1705  0325  0AA5               	incf	___awdiv@counter,f
  1706  0326                     l914:	
  1707  0326  1BA1               	btfsc	___awdiv@divisor+1,7
  1708  0327  2B32               	goto	l916
  1709  0328  3001               	movlw	1
  1710  0329                     u475:	
  1711  0329  35A0               	lslf	___awdiv@divisor,f
  1712  032A  0DA1               	rlf	___awdiv@divisor+1,f
  1713  032B  0B89               	decfsz	9,f
  1714  032C  2B29               	goto	u475
  1715  032D  3001               	movlw	1
  1716  032E  00A4               	movwf	??___awdiv
  1717  032F  0824               	movf	??___awdiv,w
  1718  0330  07A5               	addwf	___awdiv@counter,f
  1719  0331  2B26               	goto	l914
  1720  0332                     l916:	
  1721  0332  3001               	movlw	1
  1722  0333                     u495:	
  1723  0333  35A7               	lslf	___awdiv@quotient,f
  1724  0334  0DA8               	rlf	___awdiv@quotient+1,f
  1725  0335  0B89               	decfsz	9,f
  1726  0336  2B33               	goto	u495
  1727  0337  0821               	movf	___awdiv@divisor+1,w
  1728  0338  0223               	subwf	___awdiv@dividend+1,w
  1729  0339  1D03               	skipz
  1730  033A  2B3D               	goto	u505
  1731  033B  0820               	movf	___awdiv@divisor,w
  1732  033C  0222               	subwf	___awdiv@dividend,w
  1733  033D                     u505:	
  1734  033D  1C03               	skipc
  1735  033E  2B44               	goto	l922
  1736  033F  0820               	movf	___awdiv@divisor,w
  1737  0340  02A2               	subwf	___awdiv@dividend,f
  1738  0341  0821               	movf	___awdiv@divisor+1,w
  1739  0342  3BA3               	subwfb	___awdiv@dividend+1,f
  1740  0343  1427               	bsf	___awdiv@quotient,0
  1741  0344                     l922:	
  1742  0344  3001               	movlw	1
  1743  0345                     u515:	
  1744  0345  36A1               	lsrf	___awdiv@divisor+1,f
  1745  0346  0CA0               	rrf	___awdiv@divisor,f
  1746  0347  0B89               	decfsz	9,f
  1747  0348  2B45               	goto	u515
  1748  0349  3001               	movlw	1
  1749  034A  02A5               	subwf	___awdiv@counter,f
  1750  034B  1D03               	btfss	3,2
  1751  034C  2B32               	goto	l916
  1752  034D                     l926:	
  1753  034D  0826               	movf	___awdiv@sign,w
  1754  034E  1903               	btfsc	3,2
  1755  034F  2B55               	goto	l930
  1756  0350  09A7               	comf	___awdiv@quotient,f
  1757  0351  09A8               	comf	___awdiv@quotient+1,f
  1758  0352  0AA7               	incf	___awdiv@quotient,f
  1759  0353  1903               	skipnz
  1760  0354  0AA8               	incf	___awdiv@quotient+1,f
  1761  0355                     l930:	
  1762  0355  0828               	movf	___awdiv@quotient+1,w
  1763  0356  01A1               	clrf	?___awdiv+1
  1764  0357  07A1               	addwf	?___awdiv+1,f
  1765  0358  0827               	movf	___awdiv@quotient,w
  1766  0359  01A0               	clrf	?___awdiv
  1767  035A  07A0               	addwf	?___awdiv,f
  1768  035B  0008               	return
  1769  035C                     __end_of___awdiv:	
  1770                           
  1771                           	psect	text3
  1772  0389                     __ptext3:	
  1773 ;; *************** function _setpin *****************
  1774 ;; Defined at:
  1775 ;;		line 9 in file "sorce.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;		None               void
  1782 ;; Registers used:
  1783 ;;		wreg, status,2
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    3
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _setpin
  1805  0389                     _setpin:	
  1806                           
  1807                           ;sorce.c: 10: OSCCON = 0b01110000 ;
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _setpin: [wreg+status,2]
  1811  0389  3070               	movlw	112
  1812  038A  0021               	movlb	1	; select bank1
  1813  038B  0099               	movwf	25	;volatile
  1814                           
  1815                           ;sorce.c: 11: ANSELA = 0b00000000 ;
  1816  038C  0023               	movlb	3	; select bank3
  1817  038D  018C               	clrf	12	;volatile
  1818                           
  1819                           ;sorce.c: 12: ANSELB = 0b00000000 ;
  1820  038E  018D               	clrf	13	;volatile
  1821                           
  1822                           ;sorce.c: 13: ANSELD = 0x00 ;
  1823  038F  018F               	clrf	15	;volatile
  1824                           
  1825                           ;sorce.c: 14: ANSELE = 0b00000000 ;
  1826  0390  0190               	clrf	16	;volatile
  1827                           
  1828                           ;sorce.c: 16: TRISA = 0b00000000 ;
  1829  0391  0021               	movlb	1	; select bank1
  1830  0392  018C               	clrf	12	;volatile
  1831                           
  1832                           ;sorce.c: 17: TRISB = 0b00000000 ;
  1833  0393  018D               	clrf	13	;volatile
  1834                           
  1835                           ;sorce.c: 18: TRISC = 0b10110000 ;
  1836  0394  30B0               	movlw	176
  1837  0395  008E               	movwf	14	;volatile
  1838                           
  1839                           ;sorce.c: 19: TRISD = 0b00001100 ;
  1840  0396  300C               	movlw	12
  1841  0397  008F               	movwf	15	;volatile
  1842                           
  1843                           ;sorce.c: 20: TRISE = 0X00 ;
  1844  0398  0190               	clrf	16	;volatile
  1845                           
  1846                           ;sorce.c: 22: PORTA = 0b00000000 ;
  1847  0399  0020               	movlb	0	; select bank0
  1848  039A  018C               	clrf	12	;volatile
  1849                           
  1850                           ;sorce.c: 23: PORTB = 0b00000000 ;
  1851  039B  018D               	clrf	13	;volatile
  1852                           
  1853                           ;sorce.c: 24: PORTC = 0b10000000 ;
  1854  039C  3080               	movlw	128
  1855  039D  008E               	movwf	14	;volatile
  1856                           
  1857                           ;sorce.c: 25: PORTD = 0b00000000 ;
  1858  039E  018F               	clrf	15	;volatile
  1859                           
  1860                           ;sorce.c: 27: CCP2CON=0x00;
  1861  039F  0025               	movlb	5	; select bank5
  1862  03A0  019A               	clrf	26	;volatile
  1863                           
  1864                           ;sorce.c: 28: CCP1CON=0x00;
  1865  03A1  0193               	clrf	19	;volatile
  1866                           
  1867                           ;sorce.c: 30: CPSCON0 =0x00;
  1868  03A2  0020               	movlb	0	; select bank0
  1869  03A3  019E               	clrf	30	;volatile
  1870                           
  1871                           ;sorce.c: 31: CPSCON1 =0x00;
  1872  03A4  019F               	clrf	31	;volatile
  1873                           
  1874                           ;sorce.c: 32: LATD =0x00;
  1875  03A5  0022               	movlb	2	; select bank2
  1876  03A6  018F               	clrf	15	;volatile
  1877                           
  1878                           ;sorce.c: 33: LCDCON =0x00;
  1879  03A7  002F               	movlb	15	; select bank15
  1880  03A8  0191               	clrf	17	;volatile
  1881                           
  1882                           ;sorce.c: 34: LCDSE2 =0x00;
  1883  03A9  019A               	clrf	26	;volatile
  1884  03AA  0008               	return
  1885  03AB                     __end_of_setpin:	
  1886                           
  1887                           	psect	text4
  1888  03AB                     __ptext4:	
  1889 ;; *************** function ___wmul *****************
  1890 ;; Defined at:
  1891 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1894 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  product         2    4[BANK0 ] unsigned int 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2    0[BANK0 ] unsigned int 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;Total ram usage:        6 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    3
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function ___wmul
  1922  03AB                     ___wmul:	
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1926  03AB  0020               	movlb	0	; select bank0
  1927  03AC  01A4               	clrf	___wmul@product
  1928  03AD  01A5               	clrf	___wmul@product+1
  1929  03AE                     l1010:	
  1930  03AE  1C20               	btfss	___wmul@multiplier,0
  1931  03AF  2BB4               	goto	l259
  1932  03B0  0822               	movf	___wmul@multiplicand,w
  1933  03B1  07A4               	addwf	___wmul@product,f
  1934  03B2  0823               	movf	___wmul@multiplicand+1,w
  1935  03B3  3DA5               	addwfc	___wmul@product+1,f
  1936  03B4                     l259:	
  1937  03B4  3001               	movlw	1
  1938  03B5                     u625:	
  1939  03B5  35A2               	lslf	___wmul@multiplicand,f
  1940  03B6  0DA3               	rlf	___wmul@multiplicand+1,f
  1941  03B7  0B89               	decfsz	9,f
  1942  03B8  2BB5               	goto	u625
  1943  03B9  3001               	movlw	1
  1944  03BA                     u635:	
  1945  03BA  36A1               	lsrf	___wmul@multiplier+1,f
  1946  03BB  0CA0               	rrf	___wmul@multiplier,f
  1947  03BC  0B89               	decfsz	9,f
  1948  03BD  2BBA               	goto	u635
  1949  03BE  0821               	movf	___wmul@multiplier+1,w
  1950  03BF  0420               	iorwf	___wmul@multiplier,w
  1951  03C0  1D03               	skipz
  1952  03C1  2BAE               	goto	l1010
  1953  03C2  0825               	movf	___wmul@product+1,w
  1954  03C3  01A1               	clrf	?___wmul+1
  1955  03C4  07A1               	addwf	?___wmul+1,f
  1956  03C5  0824               	movf	___wmul@product,w
  1957  03C6  01A0               	clrf	?___wmul
  1958  03C7  07A0               	addwf	?___wmul,f
  1959  03C8  0008               	return
  1960  03C9                     __end_of___wmul:	
  1961                           
  1962                           	psect	text5
  1963  03E6                     __ptext5:	
  1964 ;; *************** function _E2promRead *****************
  1965 ;; Defined at:
  1966 ;;		line 3 in file "sorce.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  adr             1    wreg     unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  adr             1    2[BANK0 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;Total ram usage:        3 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    3
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _E2promRead
  1996  03E6                     _E2promRead:	
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _E2promRead: [wreg]
  2000                           ;E2promRead@adr stored from wreg
  2001  03E6  0020               	movlb	0	; select bank0
  2002  03E7  00A2               	movwf	E2promRead@adr
  2003                           
  2004                           ;sorce.c: 5: EEADR = adr;
  2005  03E8  0822               	movf	E2promRead@adr,w
  2006  03E9  00A0               	movwf	??_E2promRead
  2007  03EA  01A1               	clrf	??_E2promRead+1
  2008  03EB  0820               	movf	??_E2promRead,w
  2009  03EC  0023               	movlb	3	; select bank3
  2010  03ED  0091               	movwf	17	;volatile
  2011  03EE  0020               	movlb	0	; select bank0
  2012  03EF  0821               	movf	??_E2promRead+1,w
  2013  03F0  0023               	movlb	3	; select bank3
  2014  03F1  0092               	movwf	18	;volatile
  2015                           
  2016                           ;sorce.c: 6: RD = 1;
  2017  03F2  1415               	bsf	21,0	;volsfr
  2018                           
  2019                           ;sorce.c: 7: return( EEDATA );
  2020  03F3  0813               	movf	19,w	;volatile
  2021  03F4  0008               	return
  2022  03F5                     __end_of_E2promRead:	
  2023                           
  2024                           	psect	intentry
  2025  0004                     __pintentry:	
  2026 ;; *************** function _InterTimer *****************
  2027 ;; Defined at:
  2028 ;;		line 41 in file "ver0.0_20140727.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;		None
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;		None
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;Total ram usage:        1 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		_change
  2051 ;; This function is called by:
  2052 ;;		Interrupt level 1
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056  0004                     _InterTimer:	
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2060  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2061  0005  3180               	pagesel	$
  2062  0006  0020               	movlb	0	; select bank0
  2063  0007  087F               	movf	127,w
  2064  0008  00FC               	movwf	??_InterTimer
  2065                           
  2066                           ;ver0.0_20140727.c: 43: if (TMR0IF == 1) {
  2067  0009  1D0B               	btfss	11,2	;volatile
  2068  000A  2816               	goto	i1l123
  2069                           
  2070                           ;ver0.0_20140727.c: 44: TMR0 = 61 ;
  2071  000B  303D               	movlw	61
  2072  000C  0095               	movwf	21	;volatile
  2073                           
  2074                           ;ver0.0_20140727.c: 50: change();
  2075  000D  3182  225F  3180   	fcall	_change
  2076                           
  2077                           ;ver0.0_20140727.c: 51: if(RCIF)
  2078  0010  0020               	movlb	0	; select bank0
  2079  0011  1E91               	btfss	17,5	;volatile
  2080  0012  2815               	goto	i1l122
  2081                           
  2082                           ;ver0.0_20140727.c: 52: reservingNow=1;
  2083  0013  01E6               	clrf	_reservingNow
  2084  0014  0AE6               	incf	_reservingNow,f
  2085  0015                     i1l122:	
  2086                           
  2087                           ;ver0.0_20140727.c: 54: TMR0IF = 0 ;
  2088  0015  110B               	bcf	11,2	;volatile
  2089  0016                     i1l123:	
  2090  0016  087C               	movf	??_InterTimer,w
  2091  0017  00FF               	movwf	127
  2092  0018  107E               	bcf	126,0	;clear compiler interrupt flag
  2093  0019  0009               	retfie
  2094  001A                     __end_of_InterTimer:	
  2095                           
  2096                           	psect	text7
  2097  025F                     __ptext7:	
  2098 ;; *************** function _change *****************
  2099 ;; Defined at:
  2100 ;;		line 25 in file "ver0.0_20140727.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;		None               void
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;Total ram usage:        6 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    1
  2121 ;; This function calls:
  2122 ;;		i1___wmul
  2123 ;; This function is called by:
  2124 ;;		_InterTimer
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _change
  2130  025F                     _change:	
  2131                           
  2132                           ;ver0.0_20140727.c: 26: ledcount++;
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2136  025F  3001               	movlw	1
  2137  0260  00F6               	movwf	??_change
  2138  0261  0876               	movf	??_change,w
  2139  0262  07FD               	addwf	_ledcount,f
  2140                           
  2141                           ;ver0.0_20140727.c: 28: PORTA=putdata[ledcount][0];
  2142  0263  087D               	movf	_ledcount,w
  2143  0264  00F6               	movwf	??_change
  2144  0265  01F7               	clrf	??_change+1
  2145  0266  0876               	movf	??_change,w
  2146  0267  00F0               	movwf	i1___wmul@multiplier
  2147  0268  0877               	movf	??_change+1,w
  2148  0269  00F1               	movwf	i1___wmul@multiplier+1
  2149  026A  3005               	movlw	5
  2150  026B  00F2               	movwf	i1___wmul@multiplicand
  2151  026C  3000               	movlw	0
  2152  026D  00F3               	movwf	i1___wmul@multiplicand+1
  2153  026E  3183  23C9  3182   	fcall	i1___wmul
  2154  0271  3096               	movlw	150
  2155  0272  00F8               	movwf	??_change+2
  2156  0273  3023               	movlw	35
  2157  0274  00F9               	movwf	??_change+3
  2158  0275  0870               	movf	?i1___wmul,w
  2159  0276  0778               	addwf	??_change+2,w
  2160  0277  0086               	movwf	6
  2161  0278  0871               	movf	?i1___wmul+1,w
  2162  0279  3D79               	addwfc	??_change+3,w
  2163  027A  0087               	movwf	7
  2164  027B  0801               	movf	1,w
  2165  027C  0020               	movlb	0	; select bank0
  2166  027D  008C               	movwf	12	;volatile
  2167                           
  2168                           ;ver0.0_20140727.c: 29: PORTB=putdata[ledcount][1];
  2169  027E  087D               	movf	_ledcount,w
  2170  027F  00F6               	movwf	??_change
  2171  0280  01F7               	clrf	??_change+1
  2172  0281  0876               	movf	??_change,w
  2173  0282  00F0               	movwf	i1___wmul@multiplier
  2174  0283  0877               	movf	??_change+1,w
  2175  0284  00F1               	movwf	i1___wmul@multiplier+1
  2176  0285  3005               	movlw	5
  2177  0286  00F2               	movwf	i1___wmul@multiplicand
  2178  0287  3000               	movlw	0
  2179  0288  00F3               	movwf	i1___wmul@multiplicand+1
  2180  0289  3183  23C9  3182   	fcall	i1___wmul
  2181  028C  0870               	movf	?i1___wmul,w
  2182  028D  3E01               	addlw	1
  2183  028E  00F8               	movwf	??_change+2
  2184  028F  3000               	movlw	0
  2185  0290  3D71               	addwfc	?i1___wmul+1,w
  2186  0291  00F9               	movwf	??_change+3
  2187  0292  3096               	movlw	150
  2188  0293  00FA               	movwf	??_change+4
  2189  0294  3023               	movlw	35
  2190  0295  00FB               	movwf	??_change+5
  2191  0296  0878               	movf	??_change+2,w
  2192  0297  077A               	addwf	??_change+4,w
  2193  0298  0086               	movwf	6
  2194  0299  0879               	movf	??_change+3,w
  2195  029A  3D7B               	addwfc	??_change+5,w
  2196  029B  0087               	movwf	7
  2197  029C  0801               	movf	1,w
  2198  029D  0020               	movlb	0	; select bank0
  2199  029E  008D               	movwf	13	;volatile
  2200                           
  2201                           ;ver0.0_20140727.c: 30: PORTC=putdata[ledcount][2];
  2202  029F  087D               	movf	_ledcount,w
  2203  02A0  00F6               	movwf	??_change
  2204  02A1  01F7               	clrf	??_change+1
  2205  02A2  0876               	movf	??_change,w
  2206  02A3  00F0               	movwf	i1___wmul@multiplier
  2207  02A4  0877               	movf	??_change+1,w
  2208  02A5  00F1               	movwf	i1___wmul@multiplier+1
  2209  02A6  3005               	movlw	5
  2210  02A7  00F2               	movwf	i1___wmul@multiplicand
  2211  02A8  3000               	movlw	0
  2212  02A9  00F3               	movwf	i1___wmul@multiplicand+1
  2213  02AA  3183  23C9  3182   	fcall	i1___wmul
  2214  02AD  0870               	movf	?i1___wmul,w
  2215  02AE  3E02               	addlw	2
  2216  02AF  00F8               	movwf	??_change+2
  2217  02B0  3000               	movlw	0
  2218  02B1  3D71               	addwfc	?i1___wmul+1,w
  2219  02B2  00F9               	movwf	??_change+3
  2220  02B3  3096               	movlw	150
  2221  02B4  00FA               	movwf	??_change+4
  2222  02B5  3023               	movlw	35
  2223  02B6  00FB               	movwf	??_change+5
  2224  02B7  0878               	movf	??_change+2,w
  2225  02B8  077A               	addwf	??_change+4,w
  2226  02B9  0086               	movwf	6
  2227  02BA  0879               	movf	??_change+3,w
  2228  02BB  3D7B               	addwfc	??_change+5,w
  2229  02BC  0087               	movwf	7
  2230  02BD  0801               	movf	1,w
  2231  02BE  0020               	movlb	0	; select bank0
  2232  02BF  008E               	movwf	14	;volatile
  2233                           
  2234                           ;ver0.0_20140727.c: 31: PORTD=putdata[ledcount][3];
  2235  02C0  087D               	movf	_ledcount,w
  2236  02C1  00F6               	movwf	??_change
  2237  02C2  01F7               	clrf	??_change+1
  2238  02C3  0876               	movf	??_change,w
  2239  02C4  00F0               	movwf	i1___wmul@multiplier
  2240  02C5  0877               	movf	??_change+1,w
  2241  02C6  00F1               	movwf	i1___wmul@multiplier+1
  2242  02C7  3005               	movlw	5
  2243  02C8  00F2               	movwf	i1___wmul@multiplicand
  2244  02C9  3000               	movlw	0
  2245  02CA  00F3               	movwf	i1___wmul@multiplicand+1
  2246  02CB  3183  23C9  3182   	fcall	i1___wmul
  2247  02CE  0870               	movf	?i1___wmul,w
  2248  02CF  3E03               	addlw	3
  2249  02D0  00F8               	movwf	??_change+2
  2250  02D1  3000               	movlw	0
  2251  02D2  3D71               	addwfc	?i1___wmul+1,w
  2252  02D3  00F9               	movwf	??_change+3
  2253  02D4  3096               	movlw	150
  2254  02D5  00FA               	movwf	??_change+4
  2255  02D6  3023               	movlw	35
  2256  02D7  00FB               	movwf	??_change+5
  2257  02D8  0878               	movf	??_change+2,w
  2258  02D9  077A               	addwf	??_change+4,w
  2259  02DA  0086               	movwf	6
  2260  02DB  0879               	movf	??_change+3,w
  2261  02DC  3D7B               	addwfc	??_change+5,w
  2262  02DD  0087               	movwf	7
  2263  02DE  0801               	movf	1,w
  2264  02DF  0020               	movlb	0	; select bank0
  2265  02E0  008F               	movwf	15	;volatile
  2266                           
  2267                           ;ver0.0_20140727.c: 32: PORTE=putdata[ledcount][4];
  2268  02E1  087D               	movf	_ledcount,w
  2269  02E2  00F6               	movwf	??_change
  2270  02E3  01F7               	clrf	??_change+1
  2271  02E4  0876               	movf	??_change,w
  2272  02E5  00F0               	movwf	i1___wmul@multiplier
  2273  02E6  0877               	movf	??_change+1,w
  2274  02E7  00F1               	movwf	i1___wmul@multiplier+1
  2275  02E8  3005               	movlw	5
  2276  02E9  00F2               	movwf	i1___wmul@multiplicand
  2277  02EA  3000               	movlw	0
  2278  02EB  00F3               	movwf	i1___wmul@multiplicand+1
  2279  02EC  3183  23C9  3182   	fcall	i1___wmul
  2280  02EF  0870               	movf	?i1___wmul,w
  2281  02F0  3E04               	addlw	4
  2282  02F1  00F8               	movwf	??_change+2
  2283  02F2  3000               	movlw	0
  2284  02F3  3D71               	addwfc	?i1___wmul+1,w
  2285  02F4  00F9               	movwf	??_change+3
  2286  02F5  3096               	movlw	150
  2287  02F6  00FA               	movwf	??_change+4
  2288  02F7  3023               	movlw	35
  2289  02F8  00FB               	movwf	??_change+5
  2290  02F9  0878               	movf	??_change+2,w
  2291  02FA  077A               	addwf	??_change+4,w
  2292  02FB  0086               	movwf	6
  2293  02FC  0879               	movf	??_change+3,w
  2294  02FD  3D7B               	addwfc	??_change+5,w
  2295  02FE  0087               	movwf	7
  2296  02FF  0801               	movf	1,w
  2297  0300  0020               	movlb	0	; select bank0
  2298  0301  0090               	movwf	16	;volatile
  2299                           
  2300                           ;ver0.0_20140727.c: 34: if(ledcount==16)
  2301  0302  087D               	movf	_ledcount,w
  2302  0303  3A10               	xorlw	16
  2303  0304  1D03               	skipz
  2304  0305  0008               	return
  2305                           
  2306                           ;ver0.0_20140727.c: 35: ledcount=0;
  2307  0306  01FD               	clrf	_ledcount
  2308  0307  0008               	return
  2309  0308                     __end_of_change:	
  2310                           
  2311                           	psect	text8
  2312  03C9                     __ptext8:	
  2313 ;; *************** function i1___wmul *****************
  2314 ;; Defined at:
  2315 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  multiplier      2    0[COMMON] unsigned int 
  2318 ;;  multiplicand    2    2[COMMON] unsigned int 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  __wmul          2    4[COMMON] unsigned int 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2    0[COMMON] unsigned int 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;Total ram usage:        6 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_change
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function i1___wmul
  2345  03C9                     i1___wmul:	
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2349  03C9  01F4               	clrf	i1___wmul@product
  2350  03CA  01F5               	clrf	i1___wmul@product+1
  2351  03CB                     i1l936:	
  2352  03CB  1C70               	btfss	i1___wmul@multiplier,0
  2353  03CC  2BD1               	goto	i1l259
  2354  03CD  0872               	movf	i1___wmul@multiplicand,w
  2355  03CE  07F4               	addwf	i1___wmul@product,f
  2356  03CF  0873               	movf	i1___wmul@multiplicand+1,w
  2357  03D0  3DF5               	addwfc	i1___wmul@product+1,f
  2358  03D1                     i1l259:	
  2359  03D1  3001               	movlw	1
  2360  03D2                     u55_25:	
  2361  03D2  35F2               	lslf	i1___wmul@multiplicand,f
  2362  03D3  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2363  03D4  0B89               	decfsz	9,f
  2364  03D5  2BD2               	goto	u55_25
  2365  03D6  3001               	movlw	1
  2366  03D7                     u56_25:	
  2367  03D7  36F1               	lsrf	i1___wmul@multiplier+1,f
  2368  03D8  0CF0               	rrf	i1___wmul@multiplier,f
  2369  03D9  0B89               	decfsz	9,f
  2370  03DA  2BD7               	goto	u56_25
  2371  03DB  0871               	movf	i1___wmul@multiplier+1,w
  2372  03DC  0470               	iorwf	i1___wmul@multiplier,w
  2373  03DD  1D03               	skipz
  2374  03DE  2BCB               	goto	i1l936
  2375  03DF  0875               	movf	i1___wmul@product+1,w
  2376  03E0  01F1               	clrf	?i1___wmul+1
  2377  03E1  07F1               	addwf	?i1___wmul+1,f
  2378  03E2  0874               	movf	i1___wmul@product,w
  2379  03E3  01F0               	clrf	?i1___wmul
  2380  03E4  07F0               	addwf	?i1___wmul,f
  2381  03E5  0008               	return
  2382  03E6                     __end_ofi1___wmul:	
  2383  007E                     btemp	set	126	;btemp
  2384  007E                     pic14e$flags	set	126
  2385  007E                     wtemp	set	126
  2386  007E                     wtemp0	set	126
  2387  0080                     wtemp1	set	128
  2388  0082                     wtemp2	set	130
  2389  0084                     wtemp3	set	132
  2390  0086                     wtemp4	set	134
  2391  0088                     wtemp5	set	136
  2392  007F                     wtemp6	set	127
  2393  007E                     ttemp	set	126
  2394  007E                     ttemp0	set	126
  2395  0081                     ttemp1	set	129
  2396  0084                     ttemp2	set	132
  2397  0087                     ttemp3	set	135
  2398  007F                     ttemp4	set	127
  2399  007E                     ltemp	set	126
  2400  007E                     ltemp0	set	126
  2401  0082                     ltemp1	set	130
  2402  0086                     ltemp2	set	134
  2403  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     70      72
    BANK1            80     70      70
    BANK2            80      0      48
    BANK3            80      0      48
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    _InterTimer->_change
    _change->i1___wmul

Critical Paths under _main in BANK0

    _main->_x2
    _x2->___awdiv

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               157   157      0    2835
                                             15 BANK0     55    55      0
                                              0 BANK1     70    70      0
                         _E2promRead
                             ___wmul
                             _setpin
                                 _x2
 ---------------------------------------------------------------------------------
 (1) _x2                                                   6     6      0     544
                                              9 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           1     1      0     352
                                             12 COMMON     1     1      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               6     6      0     352
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   ___wmul
   _setpin
   _x2
     ___awdiv

 _InterTimer (ROOT)
   _change
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      30       9       60.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Aug 30 01:49:51 2014

            ?_E2promRead 0070              __CFG_CP$OFF 0000                       _RD 0CA8  
           ___awdiv@sign 0026                       _x2 035C      ___wmul@multiplicand 0022  
       i1___wmul@product 0074              __CFG_LVP$ON 0000                      ?_x2 0070  
                    l140 025D                      l150 025E                      l142 011F  
                    l147 01D9                      l148 0222                      l259 03B4  
                    l904 031E                      l930 0355                      l922 0344  
                    l914 0326                      l916 0332                      l926 034D  
                    l898 0313                      _GIE 005F                      l996 0363  
                    u505 033D             __CFG_CPD$OFF 0000                      u515 0345  
                    u625 03B5                      u635 03BA                      u475 0329  
                    u805 0180                      u670 005D                      u495 0333  
                    u835 022A                      u755 00EE                      u765 0101  
                    x2@i 002C                      _led 01A0             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     ??_x2 0029  
            main@getdata 00A0                     l1010 03AE                     l1002 037A  
                   l1004 0387                     l1110 00EB                     l1104 00E6  
                   l1126 0125                     l1118 0117                     l1070 00B3  
                   l1064 0080                     l1090 00CC                     l1096 00DC  
                   _LATD 010F                     _RCIF 008D                     _TMR0 0015  
                   _TRMT 0CF1                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 004E              main@onetime 005F  
                   _time 0067                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     _stoc 0120                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 001A  
                   ttemp 007E                     wtemp 007E            __CFG_PLLEN$ON 0000  
                  ?_main 0070          __end_of___awdiv 035C                    _EEADR 0191  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0020                    i1l122 0015  
                  i1l123 0016                    i1l259 03D1                    i1l936 03CB  
        ___awdiv@counter 0025                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PORTD 000F                    _PORTE 0010  
                  u55_25 03D2                    u56_25 03D7                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TRISD 008F  
                  _TRISE 0090                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000                    x2@ret 002D                    x2@num 002E  
                  main@i 0065                    main@j 0064                    main@n 0062  
    __size_of_E2promRead 000F         __end_ofi1___wmul 03E6                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
    i1___wmul@multiplier 0070                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 001C             __end_of_main 025F                   ??_main 002F  
             _InterTimer 0004                   _EEDATA 0193         ___awdiv@dividend 0022  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   _LCDCON 0791                   _LCDSE2 079A  
                 _OSCCON 0099                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISC6 0476                   _TRISC7 0477                   _nWPUEN 04AF  
                 ___wmul 03AB                ??___awdiv 0024           __CFG_STVREN$ON 0000  
                 _change 025F            main@resetFlug 0060         ___awdiv@quotient 0027  
                 _setpin 0389            E2promRead@adr 0022  __end_of__initialization 004A  
         __pcstackCOMMON 0070             ??_E2promRead 0020               __end_of_x2 0389  
            ?_InterTimer 0070                ?i1___wmul 0070           main@getKeeping 003E  
             __pbssBANK0 0066               __pbssBANK2 0120               __pbssBANK3 01A0  
             __pbssBANK4 0220       __end_of_E2promRead 03F5          __CFG_VCAPEN$OFF 0000  
             __pmaintext 004E                  ?___wmul 0020                  ?_change 0070  
             __pintentry 0004                  _CCP1CON 0293                  _CCP2CON 029A  
                _BAUDCON 019F                  ?_setpin 0070               ??i1___wmul 0074  
                _CPSCON0 001E                  _CPSCON1 001F           main@individual 0061  
    __size_of_InterTimer 0016                  ___awdiv 0308          __size_of___wmul 001E  
        __size_of_change 00A9                  __ptext0 0000                  __ptext1 035C  
                __ptext2 0308                  __ptext3 0389                  __ptext4 03AB  
                __ptext5 03E6                  __ptext7 025F                  __ptext8 03C9  
        __size_of_setpin 0022                  _putdata 2396                  clrloop0 03F6  
   end_of_initialization 004A    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
             main@getNum 005E           __end_of___wmul 03C9           __end_of_change 0308  
           ??_InterTimer 007C           __end_of_setpin 03AB      start_initialization 001C  
      __size_ofi1___wmul 001D       __end_of_InterTimer 001A                 ??___wmul 0024  
               ??_change 0076                 ??_setpin 0020              __pbssBIGRAM 2396  
            __pbssCOMMON 007D                ___latbits 0003            __pcstackBANK0 0020  
          __pcstackBANK1 00A0       main@gettingSuccess 0063                 ?___awdiv 0020  
            __size_of_x2 002D           ___wmul@product 0024                clear_ram0 03F5  
              main@F3516 0220        ___wmul@multiplier 0020                 i1___wmul 03C9  
       __size_of___awdiv 0054                 _ledcount 007D            __size_of_main 0211  
             _E2promRead 03E6             _reservingNow 0066              pic14e$flags 007E  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
