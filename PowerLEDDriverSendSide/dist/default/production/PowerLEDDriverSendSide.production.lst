

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Sep  2 19:47:02 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x620,48
    25                           	dabs	1,0x5C6,42
    26                           	dabs	1,0x2396,0,_putdata
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  000F                     	;# 
    44  0010                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001E                     	;# 
    58  001F                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  008F                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  010F                     	;# 
    82  0110                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  011A                     	;# 
    93  011B                     	;# 
    94  011D                     	;# 
    95  018C                     	;# 
    96  018D                     	;# 
    97  018F                     	;# 
    98  0190                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020D                     	;# 
   120  0210                     	;# 
   121  0211                     	;# 
   122  0212                     	;# 
   123  0213                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0298                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029C                     	;# 
   144  029D                     	;# 
   145  029E                     	;# 
   146  029F                     	;# 
   147  0311                     	;# 
   148  0311                     	;# 
   149  0312                     	;# 
   150  0313                     	;# 
   151  0314                     	;# 
   152  0315                     	;# 
   153  0315                     	;# 
   154  0316                     	;# 
   155  0318                     	;# 
   156  0318                     	;# 
   157  0319                     	;# 
   158  031A                     	;# 
   159  031C                     	;# 
   160  031C                     	;# 
   161  031D                     	;# 
   162  031E                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  0415                     	;# 
   167  0416                     	;# 
   168  0417                     	;# 
   169  041C                     	;# 
   170  041D                     	;# 
   171  041E                     	;# 
   172  0791                     	;# 
   173  0792                     	;# 
   174  0793                     	;# 
   175  0794                     	;# 
   176  0795                     	;# 
   177  0798                     	;# 
   178  0799                     	;# 
   179  079A                     	;# 
   180  07A0                     	;# 
   181  07A1                     	;# 
   182  07A2                     	;# 
   183  07A3                     	;# 
   184  07A4                     	;# 
   185  07A5                     	;# 
   186  07A6                     	;# 
   187  07A7                     	;# 
   188  07A8                     	;# 
   189  07A9                     	;# 
   190  07AA                     	;# 
   191  07AB                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0110                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011D                     	;# 
   270  018C                     	;# 
   271  018D                     	;# 
   272  018F                     	;# 
   273  0190                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019C                     	;# 
   290  019C                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019F                     	;# 
   294  020D                     	;# 
   295  0210                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029C                     	;# 
   319  029D                     	;# 
   320  029E                     	;# 
   321  029F                     	;# 
   322  0311                     	;# 
   323  0311                     	;# 
   324  0312                     	;# 
   325  0313                     	;# 
   326  0314                     	;# 
   327  0315                     	;# 
   328  0315                     	;# 
   329  0316                     	;# 
   330  0318                     	;# 
   331  0318                     	;# 
   332  0319                     	;# 
   333  031A                     	;# 
   334  031C                     	;# 
   335  031C                     	;# 
   336  031D                     	;# 
   337  031E                     	;# 
   338  0394                     	;# 
   339  0395                     	;# 
   340  0396                     	;# 
   341  0415                     	;# 
   342  0416                     	;# 
   343  0417                     	;# 
   344  041C                     	;# 
   345  041D                     	;# 
   346  041E                     	;# 
   347  0791                     	;# 
   348  0792                     	;# 
   349  0793                     	;# 
   350  0794                     	;# 
   351  0795                     	;# 
   352  0798                     	;# 
   353  0799                     	;# 
   354  079A                     	;# 
   355  07A0                     	;# 
   356  07A1                     	;# 
   357  07A2                     	;# 
   358  07A3                     	;# 
   359  07A4                     	;# 
   360  07A5                     	;# 
   361  07A6                     	;# 
   362  07A7                     	;# 
   363  07A8                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  07AB                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  010C                     	;# 
   429  010D                     	;# 
   430  010E                     	;# 
   431  010F                     	;# 
   432  0110                     	;# 
   433  0111                     	;# 
   434  0112                     	;# 
   435  0113                     	;# 
   436  0114                     	;# 
   437  0115                     	;# 
   438  0116                     	;# 
   439  0117                     	;# 
   440  0118                     	;# 
   441  0119                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011D                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  018F                     	;# 
   448  0190                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020D                     	;# 
   470  0210                     	;# 
   471  0211                     	;# 
   472  0212                     	;# 
   473  0213                     	;# 
   474  0214                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0217                     	;# 
   479  0291                     	;# 
   480  0291                     	;# 
   481  0292                     	;# 
   482  0293                     	;# 
   483  0294                     	;# 
   484  0295                     	;# 
   485  0295                     	;# 
   486  0296                     	;# 
   487  0298                     	;# 
   488  0298                     	;# 
   489  0299                     	;# 
   490  029A                     	;# 
   491  029B                     	;# 
   492  029C                     	;# 
   493  029C                     	;# 
   494  029D                     	;# 
   495  029E                     	;# 
   496  029F                     	;# 
   497  0311                     	;# 
   498  0311                     	;# 
   499  0312                     	;# 
   500  0313                     	;# 
   501  0314                     	;# 
   502  0315                     	;# 
   503  0315                     	;# 
   504  0316                     	;# 
   505  0318                     	;# 
   506  0318                     	;# 
   507  0319                     	;# 
   508  031A                     	;# 
   509  031C                     	;# 
   510  031C                     	;# 
   511  031D                     	;# 
   512  031E                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  0415                     	;# 
   517  0416                     	;# 
   518  0417                     	;# 
   519  041C                     	;# 
   520  041D                     	;# 
   521  041E                     	;# 
   522  0791                     	;# 
   523  0792                     	;# 
   524  0793                     	;# 
   525  0794                     	;# 
   526  0795                     	;# 
   527  0798                     	;# 
   528  0799                     	;# 
   529  079A                     	;# 
   530  07A0                     	;# 
   531  07A1                     	;# 
   532  07A2                     	;# 
   533  07A3                     	;# 
   534  07A4                     	;# 
   535  07A5                     	;# 
   536  07A6                     	;# 
   537  07A7                     	;# 
   538  07A8                     	;# 
   539  07A9                     	;# 
   540  07AA                     	;# 
   541  07AB                     	;# 
   542  0FE4                     	;# 
   543  0FE5                     	;# 
   544  0FE6                     	;# 
   545  0FE7                     	;# 
   546  0FE8                     	;# 
   547  0FE9                     	;# 
   548  0FEA                     	;# 
   549  0FEB                     	;# 
   550  0FED                     	;# 
   551  0FEE                     	;# 
   552  0FEF                     	;_putdata
   553  001E                     _CPSCON0	set	30
   554  001F                     _CPSCON1	set	31
   555  000C                     _PORTA	set	12
   556  000D                     _PORTB	set	13
   557  000E                     _PORTC	set	14
   558  000F                     _PORTD	set	15
   559  0010                     _PORTE	set	16
   560  0015                     _TMR0	set	21
   561  005F                     _GIE	set	95
   562  008D                     _RCIF	set	141
   563  005D                     _TMR0IE	set	93
   564  005A                     _TMR0IF	set	90
   565  0095                     _OPTION_REG	set	149
   566  0099                     _OSCCON	set	153
   567  008C                     _TRISA	set	140
   568  008D                     _TRISB	set	141
   569  008E                     _TRISC	set	142
   570  008F                     _TRISD	set	143
   571  0090                     _TRISE	set	144
   572  0476                     _TRISC6	set	1142
   573  0477                     _TRISC7	set	1143
   574  04AF                     _nWPUEN	set	1199
   575  010F                     _LATD	set	271
   576  0191                     _EEADR	set	401
   577  018C                     _ANSELA	set	396
   578  018D                     _ANSELB	set	397
   579  018F                     _ANSELD	set	399
   580  0190                     _ANSELE	set	400
   581  019F                     _BAUDCON	set	415
   582  0193                     _EEDATA	set	403
   583  0199                     _RCREG	set	409
   584  019D                     _RCSTA	set	413
   585  019B                     _SPBRG	set	411
   586  019A                     _TXREG	set	410
   587  019E                     _TXSTA	set	414
   588  0CA8                     _RD	set	3240
   589  0CF1                     _TRMT	set	3313
   590  020D                     _WPUB	set	525
   591  0293                     _CCP1CON	set	659
   592  029A                     _CCP2CON	set	666
   593  0791                     _LCDCON	set	1937
   594  079A                     _LCDSE2	set	1946
   595                           
   596                           	psect	text0
   597  0000                     __ptext0:	
   598                           ; #config settings
   599                           
   600                           
   601                           ;psect for function i1___wmul
   602  0000                     
   603                           	psect	cinit
   604  001C                     start_initialization:	
   605  001C                     __initialization:		;BIGRAM
   606                           
   607                           ; Clear objects allocated to BIGRAM
   608  001C  3096               	movlw	low (0+9110)
   609  001D  0084               	movwf	4
   610  001E  3023               	movlw	high (0+9110)
   611  001F  0085               	movwf	5
   612  0020  305A               	movlw	90
   613  0021  00FE               	movwf	btemp
   614  0022  3000               	movlw	0
   615  0023  00FF               	movwf	btemp+1
   616  0024  3185  251A  3180   	fcall	clear_ram0
   617                           
   618                           ; Clear objects allocated to COMMON
   619  0027  01FD               	clrf	__pbssCOMMON& (0+127)
   620                           
   621                           ; Clear objects allocated to BANK0
   622  0028  01E6               	clrf	__pbssBANK0& (0+127)
   623  0029  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   624                           
   625                           ; Clear objects allocated to BANK2
   626  002A  3020               	movlw	low __pbssBANK2
   627  002B  0084               	movwf	4
   628  002C  3001               	movlw	high __pbssBANK2
   629  002D  0085               	movwf	5
   630  002E  3030               	movlw	48
   631  002F  00FE               	movwf	btemp
   632  0030  3000               	movlw	0
   633  0031  00FF               	movwf	btemp+1
   634  0032  3185  251A  3180   	fcall	clear_ram0
   635                           
   636                           ; Clear objects allocated to BANK3
   637  0035  30A0               	movlw	low __pbssBANK3
   638  0036  0084               	movwf	4
   639  0037  3001               	movlw	high __pbssBANK3
   640  0038  0085               	movwf	5
   641  0039  3030               	movlw	48
   642  003A  00FE               	movwf	btemp
   643  003B  3000               	movlw	0
   644  003C  00FF               	movwf	btemp+1
   645  003D  3185  251A  3180   	fcall	clear_ram0
   646                           
   647                           ; Clear objects allocated to BANK4
   648  0040  3020               	movlw	low __pbssBANK4
   649  0041  0084               	movwf	4
   650  0042  3002               	movlw	high __pbssBANK4
   651  0043  0085               	movwf	5
   652  0044  3046               	movlw	70
   653  0045  00FE               	movwf	btemp
   654  0046  3000               	movlw	0
   655  0047  00FF               	movwf	btemp+1
   656  0048  3185  251A         	fcall	clear_ram0
   657  004A                     end_of_initialization:	
   658                           ;End of C runtime variable initialization code
   659                           
   660  004A                     __end_of__initialization:	
   661  004A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   662  004B  0020               	movlb	0
   663  004C  3180  284E         	ljmp	_main	;jump to C main() function
   664                           
   665                           	psect	bssCOMMON
   666  007D                     __pbssCOMMON:	
   667  007D                     _ledcount:	
   668  007D                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  0066                     __pbssBANK0:	
   672  0066                     _reservingNow:	
   673  0066                     	ds	1
   674  0067                     _time:	
   675  0067                     	ds	1
   676                           
   677                           	psect	bssBANK2
   678  0120                     __pbssBANK2:	
   679  0120                     _stoc:	
   680  0120                     	ds	48
   681                           
   682                           	psect	bssBANK3
   683  01A0                     __pbssBANK3:	
   684  01A0                     _led:	
   685  01A0                     	ds	48
   686                           
   687                           	psect	bssBANK4
   688  0220                     __pbssBANK4:	
   689  0220                     main@F3517:	
   690  0220                     	ds	70
   691                           
   692                           	psect	clrtext
   693  051A                     clear_ram0:	
   694                           ;	Called with FSR0 containing the base address, and
   695                           ;	btemp/btemp+1 has the size to clear
   696                           
   697  051A  0064               	clrwdt	;clear the watchdog before getting into this loop
   698  051B                     clrloop0:	
   699  051B  0180               	clrf	0	;clear RAM location pointed to by FSR
   700  051C  3101               	addfsr 0,1
   701  051D  3001               	movlw	1
   702  051E  02FE               	subwf	126,f
   703  051F  3000               	movlw	0
   704  0520  3BFF               	subwfb	127,f
   705  0521  087F               	movf	127,w
   706  0522  047E               	iorwf	126,w
   707  0523  1903               	btfsc	3,2
   708  0524  3400               	retlw	0	;all done for this memory range, return
   709  0525  2D1B               	goto	clrloop0	;have we reached the end yet?
   710                           
   711                           	psect	cstackBANK1
   712  00A0                     __pcstackBANK1:	
   713  00A0                     main@getdata:	
   714                           
   715                           ; 70 bytes @ 0x0
   716  00A0                     	ds	70
   717                           
   718                           	psect	cstackCOMMON
   719  0070                     __pcstackCOMMON:	
   720  0070                     ?_setpin:	
   721  0070                     ?_change:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_InterTimer:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_main:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_E2promRead:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_x2:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?i1___wmul:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     i1___wmul@multiplier:	
   740                           ; 2 bytes @ 0x0
   741                           
   742                           
   743                           ; 2 bytes @ 0x0
   744  0070                     	ds	2
   745  0072                     i1___wmul@multiplicand:	
   746                           
   747                           ; 2 bytes @ 0x2
   748  0072                     	ds	2
   749  0074                     ??i1___wmul:	
   750  0074                     i1___wmul@product:	
   751                           ; 0 bytes @ 0x4
   752                           
   753                           
   754                           ; 2 bytes @ 0x4
   755  0074                     	ds	2
   756  0076                     ??_change:	
   757                           
   758                           ; 0 bytes @ 0x6
   759  0076                     	ds	6
   760  007C                     ??_InterTimer:	
   761                           
   762                           ; 0 bytes @ 0xC
   763  007C                     	ds	1
   764                           
   765                           	psect	cstackBANK0
   766  0020                     __pcstackBANK0:	
   767  0020                     ??_E2promRead:	
   768  0020                     ??_setpin:	
   769                           ; 0 bytes @ 0x0
   770                           
   771  0020                     ?___wmul:	
   772                           ; 0 bytes @ 0x0
   773                           
   774  0020                     ?___awdiv:	
   775                           ; 2 bytes @ 0x0
   776                           
   777  0020                     ___wmul@multiplier:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___awdiv@divisor:	
   781                           ; 2 bytes @ 0x0
   782                           
   783                           
   784                           ; 2 bytes @ 0x0
   785  0020                     	ds	2
   786  0022                     E2promRead@adr:	
   787  0022                     ___wmul@multiplicand:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  0022                     ___awdiv@dividend:	
   791                           ; 2 bytes @ 0x2
   792                           
   793                           
   794                           ; 2 bytes @ 0x2
   795  0022                     	ds	2
   796  0024                     ??___wmul:	
   797  0024                     ??___awdiv:	
   798                           ; 0 bytes @ 0x4
   799                           
   800  0024                     ___wmul@product:	
   801                           ; 0 bytes @ 0x4
   802                           
   803                           
   804                           ; 2 bytes @ 0x4
   805  0024                     	ds	1
   806  0025                     ___awdiv@counter:	
   807                           
   808                           ; 1 bytes @ 0x5
   809  0025                     	ds	1
   810  0026                     ___awdiv@sign:	
   811                           
   812                           ; 1 bytes @ 0x6
   813  0026                     	ds	1
   814  0027                     ___awdiv@quotient:	
   815                           
   816                           ; 2 bytes @ 0x7
   817  0027                     	ds	2
   818  0029                     ??_x2:	
   819                           
   820                           ; 0 bytes @ 0x9
   821  0029                     	ds	3
   822  002C                     x2@i:	
   823                           
   824                           ; 1 bytes @ 0xC
   825  002C                     	ds	1
   826  002D                     x2@ret:	
   827                           
   828                           ; 1 bytes @ 0xD
   829  002D                     	ds	1
   830  002E                     x2@num:	
   831                           
   832                           ; 1 bytes @ 0xE
   833  002E                     	ds	1
   834  002F                     ??_main:	
   835                           
   836                           ; 0 bytes @ 0xF
   837  002F                     	ds	15
   838  003E                     main@getKeeping:	
   839                           
   840                           ; 32 bytes @ 0x1E
   841  003E                     	ds	32
   842  005E                     main@getNum:	
   843                           
   844                           ; 1 bytes @ 0x3E
   845  005E                     	ds	1
   846  005F                     main@onetime:	
   847                           
   848                           ; 1 bytes @ 0x3F
   849  005F                     	ds	1
   850  0060                     main@resetFlug:	
   851                           
   852                           ; 1 bytes @ 0x40
   853  0060                     	ds	1
   854  0061                     main@individual:	
   855                           
   856                           ; 1 bytes @ 0x41
   857  0061                     	ds	1
   858  0062                     main@n:	
   859                           
   860                           ; 1 bytes @ 0x42
   861  0062                     	ds	1
   862  0063                     main@gettingSuccess:	
   863                           
   864                           ; 1 bytes @ 0x43
   865  0063                     	ds	1
   866  0064                     main@j:	
   867                           
   868                           ; 1 bytes @ 0x44
   869  0064                     	ds	1
   870  0065                     main@i:	
   871                           
   872                           ; 1 bytes @ 0x45
   873  0065                     	ds	1
   874                           
   875                           	psect	maintext
   876  004E                     __pmaintext:	
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 69 in file "ver0.0_20140727.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  getdata        70    0[BANK1 ] unsigned char [70]
   887 ;;  getKeeping     32   30[BANK0 ] unsigned char [2][16]
   888 ;;  test           32    0        unsigned char [4][8]
   889 ;;  i               1   69[BANK0 ] unsigned char 
   890 ;;  j               1   68[BANK0 ] unsigned char 
   891 ;;  gettingSucce    1   67[BANK0 ] unsigned char 
   892 ;;  n               1   66[BANK0 ] unsigned char 
   893 ;;  individual      1   65[BANK0 ] unsigned char 
   894 ;;  resetFlug       1   64[BANK0 ] unsigned char 
   895 ;;  onetime         1   63[BANK0 ] unsigned char 
   896 ;;  getNum          1   62[BANK0 ] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 17F/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   907 ;;      Locals:         0      40      70       0       0       0       0       0       0       0       0       0       
      +0       0
   908 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   909 ;;      Totals:         0      55      70       0       0       0       0       0       0       0       0       0       
      +0       0
   910 ;;Total ram usage:      125 bytes
   911 ;; Hardware stack levels required when called:    5
   912 ;; This function calls:
   913 ;;		_E2promRead
   914 ;;		___wmul
   915 ;;		_setpin
   916 ;;		_x2
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _main
   924  004E                     _main:	
   925                           
   926                           ;ver0.0_20140727.c: 71: char i,j,n,test[8][4],individual=255;
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   930  004E  30FF               	movlw	255
   931  004F  0020               	movlb	0	; select bank0
   932  0050  00AF               	movwf	??_main
   933  0051  082F               	movf	??_main,w
   934  0052  00E1               	movwf	main@individual
   935                           
   936                           ;ver0.0_20140727.c: 72: char getdata[70]={0},getKeeping[16][2],getNum=0,onetime=0,resetF
      +                          lug=0,gettingSuccess=0;
   937  0053  3020               	movlw	low main@F3517
   938  0054  0086               	movwf	6
   939  0055  3002               	movlw	high main@F3517
   940  0056  0087               	movwf	7
   941  0057  30A0               	movlw	low main@getdata
   942  0058  0084               	movwf	4
   943  0059  3000               	movlw	high main@getdata
   944  005A  0085               	movwf	5
   945  005B  3046               	movlw	70
   946  005C  00AF               	movwf	??_main
   947  005D                     u720:	
   948  005D  0016               	moviw fsr1++
   949  005E  001A               	movwi fsr0++
   950  005F  0BAF               	decfsz	??_main,f
   951  0060  285D               	goto	u720
   952  0061  01DE               	clrf	main@getNum
   953  0062  01DF               	clrf	main@onetime
   954  0063  01E0               	clrf	main@resetFlug
   955  0064  01E3               	clrf	main@gettingSuccess
   956                           
   957                           ;ver0.0_20140727.c: 73: setpin();
   958  0065  3184  24AE  3180   	fcall	_setpin
   959                           
   960                           ;ver0.0_20140727.c: 74: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   961  0068  0021               	movlb	1	; select bank1
   962  0069  178E               	bsf	14,7	;volatile
   963  006A  130E               	bcf	14,6	;volatile
   964  006B  3033               	movlw	51
   965  006C  0023               	movlb	3	; select bank3
   966  006D  009B               	movwf	27	;volatile
   967  006E  3090               	movlw	144
   968  006F  009D               	movwf	29	;volatile
   969  0070  3024               	movlw	36
   970  0071  009E               	movwf	30	;volatile
   971  0072  019F               	clrf	31	;volatile
   972                           
   973                           ;ver0.0_20140727.c: 75: individual=E2promRead(0x00);
   974  0073  3000               	movlw	0
   975  0074  3185  250B  3180   	fcall	_E2promRead
   976  0077  0020               	movlb	0	; select bank0
   977  0078  00AF               	movwf	??_main
   978  0079  082F               	movf	??_main,w
   979  007A  00E1               	movwf	main@individual
   980                           
   981                           ;ver0.0_20140727.c: 76: for(i=0;i<16;i++)
   982  007B  01E5               	clrf	main@i
   983  007C  3010               	movlw	16
   984  007D  0265               	subwf	main@i,w
   985  007E  1803               	btfsc	3,0
   986  007F  28B3               	goto	l1097
   987  0080                     l1091:	
   988                           
   989                           ;ver0.0_20140727.c: 77: putdata[i][1]=x2(i);
   990  0080  0865               	movf	main@i,w
   991  0081  3184  2481  3180   	fcall	_x2
   992  0084  0020               	movlb	0	; select bank0
   993  0085  00AF               	movwf	??_main
   994  0086  0865               	movf	main@i,w
   995  0087  00B0               	movwf	??_main+1
   996  0088  01B1               	clrf	??_main+2
   997  0089  0830               	movf	??_main+1,w
   998  008A  00A0               	movwf	___wmul@multiplier
   999  008B  0831               	movf	??_main+2,w
  1000  008C  00A1               	movwf	___wmul@multiplier+1
  1001  008D  3005               	movlw	5
  1002  008E  00A2               	movwf	___wmul@multiplicand
  1003  008F  3000               	movlw	0
  1004  0090  00A3               	movwf	___wmul@multiplicand+1
  1005  0091  3184  24D0  3180   	fcall	___wmul
  1006  0094  0020               	movlb	0	; select bank0
  1007  0095  0820               	movf	?___wmul,w
  1008  0096  3E01               	addlw	1
  1009  0097  00B2               	movwf	??_main+3
  1010  0098  3000               	movlw	0
  1011  0099  3D21               	addwfc	?___wmul+1,w
  1012  009A  00B3               	movwf	??_main+4
  1013  009B  3096               	movlw	150
  1014  009C  00B4               	movwf	??_main+5
  1015  009D  3023               	movlw	35
  1016  009E  00B5               	movwf	??_main+6
  1017  009F  0832               	movf	??_main+3,w
  1018  00A0  0734               	addwf	??_main+5,w
  1019  00A1  00B6               	movwf	??_main+7
  1020  00A2  0833               	movf	??_main+4,w
  1021  00A3  3D35               	addwfc	??_main+6,w
  1022  00A4  00B7               	movwf	??_main+8
  1023  00A5  0836               	movf	??_main+7,w
  1024  00A6  0086               	movwf	6
  1025  00A7  0837               	movf	??_main+8,w
  1026  00A8  0087               	movwf	7
  1027  00A9  082F               	movf	??_main,w
  1028  00AA  0081               	movwf	1
  1029  00AB  3001               	movlw	1
  1030  00AC  00AF               	movwf	??_main
  1031  00AD  082F               	movf	??_main,w
  1032  00AE  07E5               	addwf	main@i,f
  1033  00AF  3010               	movlw	16
  1034  00B0  0265               	subwf	main@i,w
  1035  00B1  1C03               	skipc
  1036  00B2  2880               	goto	l1091
  1037  00B3                     l1097:	
  1038                           
  1039                           ;ver0.0_20140727.c: 78: OPTION_REG = 0b0000100 ;
  1040  00B3  3004               	movlw	4
  1041  00B4  0021               	movlb	1	; select bank1
  1042  00B5  0095               	movwf	21	;volatile
  1043                           
  1044                           ;ver0.0_20140727.c: 79: TMR0 = 61 ;
  1045  00B6  303D               	movlw	61
  1046  00B7  0020               	movlb	0	; select bank0
  1047  00B8  0095               	movwf	21	;volatile
  1048                           
  1049                           ;ver0.0_20140727.c: 80: TMR0IF = 0 ;
  1050  00B9  110B               	bcf	11,2	;volatile
  1051                           
  1052                           ;ver0.0_20140727.c: 81: time = 0 ;
  1053  00BA  01E7               	clrf	_time
  1054                           
  1055                           ;ver0.0_20140727.c: 82: TMR0IE = 1 ;
  1056  00BB  168B               	bsf	11,5	;volatile
  1057                           
  1058                           ;ver0.0_20140727.c: 83: WPUB = 0xC0;
  1059  00BC  30C0               	movlw	192
  1060  00BD  0024               	movlb	4	; select bank4
  1061  00BE  008D               	movwf	13	;volatile
  1062                           
  1063                           ;ver0.0_20140727.c: 84: nWPUEN = 0;
  1064  00BF  0021               	movlb	1	; select bank1
  1065  00C0  1395               	bcf	21,7	;volatile
  1066                           
  1067                           ;ver0.0_20140727.c: 85: GIE = 0 ;
  1068  00C1  138B               	bcf	11,7	;volatile
  1069                           
  1070                           ;ver0.0_20140727.c: 126: gettingSuccess=2;
  1071                           
  1072                           ;ver0.0_20140727.c: 90: while(1) {
  1073  00C2  3002               	movlw	2
  1074  00C3  0020               	movlb	0	; select bank0
  1075  00C4  00AF               	movwf	??_main
  1076  00C5  082F               	movf	??_main,w
  1077  00C6  00E3               	movwf	main@gettingSuccess
  1078                           
  1079                           ;ver0.0_20140727.c: 127: for(i=0;i<64;i++)
  1080  00C7  01E5               	clrf	main@i
  1081  00C8  3040               	movlw	64
  1082  00C9  0265               	subwf	main@i,w
  1083  00CA  1803               	btfsc	3,0
  1084  00CB  28DC               	goto	l1123
  1085  00CC                     l1117:	
  1086                           
  1087                           ;ver0.0_20140727.c: 128: getdata[i]=0xff;
  1088  00CC  30FF               	movlw	255
  1089  00CD  00AF               	movwf	??_main
  1090  00CE  0865               	movf	main@i,w
  1091  00CF  3EA0               	addlw	main@getdata& (0+255)
  1092  00D0  0086               	movwf	6
  1093  00D1  0187               	clrf	7
  1094  00D2  082F               	movf	??_main,w
  1095  00D3  0081               	movwf	1
  1096  00D4  3001               	movlw	1
  1097  00D5  00AF               	movwf	??_main
  1098  00D6  082F               	movf	??_main,w
  1099  00D7  07E5               	addwf	main@i,f
  1100  00D8  3040               	movlw	64
  1101  00D9  0265               	subwf	main@i,w
  1102  00DA  1C03               	skipc
  1103  00DB  28CC               	goto	l1117
  1104  00DC                     l1123:	
  1105                           
  1106                           ;ver0.0_20140727.c: 129: if(gettingSuccess==2){
  1107  00DC  0863               	movf	main@gettingSuccess,w
  1108  00DD  3A02               	xorlw	2
  1109  00DE  1D03               	skipz
  1110  00DF  2B76               	goto	l142
  1111                           
  1112                           ;ver0.0_20140727.c: 130: for(i=1;i<17;i++){
  1113  00E0  01E5               	clrf	main@i
  1114  00E1  0AE5               	incf	main@i,f
  1115  00E2  3011               	movlw	17
  1116  00E3  0265               	subwf	main@i,w
  1117  00E4  1803               	btfsc	3,0
  1118  00E5  291F               	goto	l144
  1119  00E6                     l1131:	
  1120                           
  1121                           ;ver0.0_20140727.c: 131: for(j=0;j<2;j++){
  1122  00E6  01E4               	clrf	main@j
  1123  00E7  3002               	movlw	2
  1124  00E8  0264               	subwf	main@j,w
  1125  00E9  1803               	btfsc	3,0
  1126  00EA  2917               	goto	l1145
  1127  00EB                     l1137:	
  1128                           
  1129                           ;ver0.0_20140727.c: 132: n=(i-1)*4+j;
  1130  00EB  0865               	movf	main@i,w
  1131  00EC  00AF               	movwf	??_main
  1132  00ED  3001               	movlw	1
  1133  00EE                     u805:	
  1134  00EE  35AF               	lslf	??_main,f
  1135  00EF  3EFF               	addlw	-1
  1136  00F0  1D03               	skipz
  1137  00F1  28EE               	goto	u805
  1138  00F2  352F               	lslf	??_main,w
  1139  00F3  0764               	addwf	main@j,w
  1140  00F4  3EFC               	addlw	252
  1141  00F5  00B0               	movwf	??_main+1
  1142  00F6  0830               	movf	??_main+1,w
  1143  00F7  00E2               	movwf	main@n
  1144                           
  1145                           ;ver0.0_20140727.c: 133: getKeeping[i][j]=getdata[n];
  1146  00F8  0862               	movf	main@n,w
  1147  00F9  3EA0               	addlw	main@getdata& (0+255)
  1148  00FA  0086               	movwf	6
  1149  00FB  0187               	clrf	7
  1150  00FC  0801               	movf	1,w
  1151  00FD  00AF               	movwf	??_main
  1152  00FE  0865               	movf	main@i,w
  1153  00FF  00B0               	movwf	??_main+1
  1154  0100  3001               	movlw	1
  1155  0101                     u815:	
  1156  0101  35B0               	lslf	??_main+1,f
  1157  0102  0B89               	decfsz	9,f
  1158  0103  2901               	goto	u815
  1159  0104  303E               	movlw	main@getKeeping& (0+255)
  1160  0105  0730               	addwf	??_main+1,w
  1161  0106  00B1               	movwf	??_main+2
  1162  0107  0864               	movf	main@j,w
  1163  0108  0731               	addwf	??_main+2,w
  1164  0109  00B2               	movwf	??_main+3
  1165  010A  0832               	movf	??_main+3,w
  1166  010B  0086               	movwf	6
  1167  010C  0187               	clrf	7
  1168  010D  082F               	movf	??_main,w
  1169  010E  0081               	movwf	1
  1170  010F  3001               	movlw	1
  1171  0110  00AF               	movwf	??_main
  1172  0111  082F               	movf	??_main,w
  1173  0112  07E4               	addwf	main@j,f
  1174  0113  3002               	movlw	2
  1175  0114  0264               	subwf	main@j,w
  1176  0115  1C03               	skipc
  1177  0116  28EB               	goto	l1137
  1178  0117                     l1145:	
  1179  0117  3001               	movlw	1
  1180  0118  00AF               	movwf	??_main
  1181  0119  082F               	movf	??_main,w
  1182  011A  07E5               	addwf	main@i,f
  1183  011B  3011               	movlw	17
  1184  011C  0265               	subwf	main@i,w
  1185  011D  1C03               	skipc
  1186  011E  28E6               	goto	l1131
  1187  011F                     l144:	
  1188                           
  1189                           ;ver0.0_20140727.c: 134: }
  1190                           ;ver0.0_20140727.c: 135: }
  1191                           ;ver0.0_20140727.c: 136: for(i=1;i<17;i++){
  1192  011F  01E5               	clrf	main@i
  1193  0120  0AE5               	incf	main@i,f
  1194  0121  3011               	movlw	17
  1195  0122  0265               	subwf	main@i,w
  1196  0123  1803               	btfsc	3,0
  1197  0124  2A5D               	goto	l148
  1198  0125                     l1153:	
  1199                           
  1200                           ;ver0.0_20140727.c: 138: putdata[i][0]=getKeeping[i][0]&0b11111110;
  1201  0125  3565               	lslf	main@i,w
  1202  0126  3E3E               	addlw	main@getKeeping& (0+255)
  1203  0127  0086               	movwf	6
  1204  0128  0187               	clrf	7
  1205  0129  0801               	movf	1,w
  1206  012A  39FE               	andlw	254
  1207  012B  00AF               	movwf	??_main
  1208  012C  0865               	movf	main@i,w
  1209  012D  00B0               	movwf	??_main+1
  1210  012E  01B1               	clrf	??_main+2
  1211  012F  0830               	movf	??_main+1,w
  1212  0130  00A0               	movwf	___wmul@multiplier
  1213  0131  0831               	movf	??_main+2,w
  1214  0132  00A1               	movwf	___wmul@multiplier+1
  1215  0133  3005               	movlw	5
  1216  0134  00A2               	movwf	___wmul@multiplicand
  1217  0135  3000               	movlw	0
  1218  0136  00A3               	movwf	___wmul@multiplicand+1
  1219  0137  3184  24D0  3180   	fcall	___wmul
  1220  013A  3096               	movlw	150
  1221  013B  0020               	movlb	0	; select bank0
  1222  013C  00B2               	movwf	??_main+3
  1223  013D  3023               	movlw	35
  1224  013E  00B3               	movwf	??_main+4
  1225  013F  0820               	movf	?___wmul,w
  1226  0140  0732               	addwf	??_main+3,w
  1227  0141  00B4               	movwf	??_main+5
  1228  0142  0821               	movf	?___wmul+1,w
  1229  0143  3D33               	addwfc	??_main+4,w
  1230  0144  00B5               	movwf	??_main+6
  1231  0145  0834               	movf	??_main+5,w
  1232  0146  0086               	movwf	6
  1233  0147  0835               	movf	??_main+6,w
  1234  0148  0087               	movwf	7
  1235  0149  082F               	movf	??_main,w
  1236  014A  0081               	movwf	1
  1237                           
  1238                           ;ver0.0_20140727.c: 140: putdata[i][2]=getKeeping[i][1]&0b00001111;
  1239  014B  1403               	setc
  1240  014C  0D65               	rlf	main@i,w
  1241  014D  3E3E               	addlw	main@getKeeping& (0+255)
  1242  014E  0086               	movwf	6
  1243  014F  0187               	clrf	7
  1244  0150  0801               	movf	1,w
  1245  0151  390F               	andlw	15
  1246  0152  00AF               	movwf	??_main
  1247  0153  0865               	movf	main@i,w
  1248  0154  00B0               	movwf	??_main+1
  1249  0155  01B1               	clrf	??_main+2
  1250  0156  0830               	movf	??_main+1,w
  1251  0157  00A0               	movwf	___wmul@multiplier
  1252  0158  0831               	movf	??_main+2,w
  1253  0159  00A1               	movwf	___wmul@multiplier+1
  1254  015A  3005               	movlw	5
  1255  015B  00A2               	movwf	___wmul@multiplicand
  1256  015C  3000               	movlw	0
  1257  015D  00A3               	movwf	___wmul@multiplicand+1
  1258  015E  3184  24D0  3180   	fcall	___wmul
  1259  0161  0020               	movlb	0	; select bank0
  1260  0162  0820               	movf	?___wmul,w
  1261  0163  3E02               	addlw	2
  1262  0164  00B2               	movwf	??_main+3
  1263  0165  3000               	movlw	0
  1264  0166  3D21               	addwfc	?___wmul+1,w
  1265  0167  00B3               	movwf	??_main+4
  1266  0168  3096               	movlw	150
  1267  0169  00B4               	movwf	??_main+5
  1268  016A  3023               	movlw	35
  1269  016B  00B5               	movwf	??_main+6
  1270  016C  0832               	movf	??_main+3,w
  1271  016D  0734               	addwf	??_main+5,w
  1272  016E  00B6               	movwf	??_main+7
  1273  016F  0833               	movf	??_main+4,w
  1274  0170  3D35               	addwfc	??_main+6,w
  1275  0171  00B7               	movwf	??_main+8
  1276  0172  0836               	movf	??_main+7,w
  1277  0173  0086               	movwf	6
  1278  0174  0837               	movf	??_main+8,w
  1279  0175  0087               	movwf	7
  1280  0176  082F               	movf	??_main,w
  1281  0177  0081               	movwf	1
  1282                           
  1283                           ;ver0.0_20140727.c: 142: putdata[i][3]=(getKeeping[i][0]&0b00000001)|((getKeeping[i][1]&
      +                          0b10000000)>>6);
  1284  0178  1403               	setc
  1285  0179  0D65               	rlf	main@i,w
  1286  017A  3E3E               	addlw	main@getKeeping& (0+255)
  1287  017B  0086               	movwf	6
  1288  017C  0187               	clrf	7
  1289  017D  0801               	movf	1,w
  1290  017E  00AF               	movwf	??_main
  1291  017F  3006               	movlw	6
  1292  0180                     u855:	
  1293  0180  36AF               	lsrf	??_main,f
  1294  0181  0B89               	decfsz	9,f
  1295  0182  2980               	goto	u855
  1296  0183  3002               	movlw	2
  1297  0184  052F               	andwf	??_main,w
  1298  0185  00B0               	movwf	??_main+1
  1299  0186  3565               	lslf	main@i,w
  1300  0187  3E3E               	addlw	main@getKeeping& (0+255)
  1301  0188  0086               	movwf	6
  1302  0189  0187               	clrf	7
  1303  018A  0801               	movf	1,w
  1304  018B  3901               	andlw	1
  1305  018C  0430               	iorwf	??_main+1,w
  1306  018D  00B1               	movwf	??_main+2
  1307  018E  0865               	movf	main@i,w
  1308  018F  00B2               	movwf	??_main+3
  1309  0190  01B3               	clrf	??_main+4
  1310  0191  0832               	movf	??_main+3,w
  1311  0192  00A0               	movwf	___wmul@multiplier
  1312  0193  0833               	movf	??_main+4,w
  1313  0194  00A1               	movwf	___wmul@multiplier+1
  1314  0195  3005               	movlw	5
  1315  0196  00A2               	movwf	___wmul@multiplicand
  1316  0197  3000               	movlw	0
  1317  0198  00A3               	movwf	___wmul@multiplicand+1
  1318  0199  3184  24D0  3180   	fcall	___wmul
  1319  019C  0020               	movlb	0	; select bank0
  1320  019D  0820               	movf	?___wmul,w
  1321  019E  3E03               	addlw	3
  1322  019F  00B4               	movwf	??_main+5
  1323  01A0  3000               	movlw	0
  1324  01A1  3D21               	addwfc	?___wmul+1,w
  1325  01A2  00B5               	movwf	??_main+6
  1326  01A3  3096               	movlw	150
  1327  01A4  00B6               	movwf	??_main+7
  1328  01A5  3023               	movlw	35
  1329  01A6  00B7               	movwf	??_main+8
  1330  01A7  0834               	movf	??_main+5,w
  1331  01A8  0736               	addwf	??_main+7,w
  1332  01A9  00B8               	movwf	??_main+9
  1333  01AA  0835               	movf	??_main+6,w
  1334  01AB  3D37               	addwfc	??_main+8,w
  1335  01AC  00B9               	movwf	??_main+10
  1336  01AD  0838               	movf	??_main+9,w
  1337  01AE  0086               	movwf	6
  1338  01AF  0839               	movf	??_main+10,w
  1339  01B0  0087               	movwf	7
  1340  01B1  0831               	movf	??_main+2,w
  1341  01B2  0081               	movwf	1
  1342                           
  1343                           ;ver0.0_20140727.c: 143: if(i==16)
  1344  01B3  0865               	movf	main@i,w
  1345  01B4  3A10               	xorlw	16
  1346  01B5  1D03               	skipz
  1347  01B6  29D9               	goto	l149
  1348                           
  1349                           ;ver0.0_20140727.c: 144: putdata[i][3]=putdata[i][3]|0b10110000;
  1350  01B7  0865               	movf	main@i,w
  1351  01B8  00AF               	movwf	??_main
  1352  01B9  01B0               	clrf	??_main+1
  1353  01BA  082F               	movf	??_main,w
  1354  01BB  00A0               	movwf	___wmul@multiplier
  1355  01BC  0830               	movf	??_main+1,w
  1356  01BD  00A1               	movwf	___wmul@multiplier+1
  1357  01BE  3005               	movlw	5
  1358  01BF  00A2               	movwf	___wmul@multiplicand
  1359  01C0  3000               	movlw	0
  1360  01C1  00A3               	movwf	___wmul@multiplicand+1
  1361  01C2  3184  24D0  3180   	fcall	___wmul
  1362  01C5  0020               	movlb	0	; select bank0
  1363  01C6  0820               	movf	?___wmul,w
  1364  01C7  3E03               	addlw	3
  1365  01C8  00B1               	movwf	??_main+2
  1366  01C9  3000               	movlw	0
  1367  01CA  3D21               	addwfc	?___wmul+1,w
  1368  01CB  00B2               	movwf	??_main+3
  1369  01CC  3096               	movlw	150
  1370  01CD  00B3               	movwf	??_main+4
  1371  01CE  3023               	movlw	35
  1372  01CF  00B4               	movwf	??_main+5
  1373  01D0  0831               	movf	??_main+2,w
  1374  01D1  0733               	addwf	??_main+4,w
  1375  01D2  0086               	movwf	6
  1376  01D3  0832               	movf	??_main+3,w
  1377  01D4  3D34               	addwfc	??_main+5,w
  1378  01D5  0087               	movwf	7
  1379  01D6  0801               	movf	1,w
  1380  01D7  38B0               	iorlw	176
  1381  01D8  29FC               	goto	L3
  1382  01D9                     l149:	
  1383                           
  1384                           ;ver0.0_20140727.c: 145: else if(i%2==0)
  1385  01D9  1865               	btfsc	main@i,0
  1386  01DA  2A22               	goto	l150
  1387                           
  1388                           ;ver0.0_20140727.c: 146: putdata[i][3]=putdata[i][3]|0b10010000;
  1389  01DB  0865               	movf	main@i,w
  1390  01DC  00AF               	movwf	??_main
  1391  01DD  01B0               	clrf	??_main+1
  1392  01DE  082F               	movf	??_main,w
  1393  01DF  00A0               	movwf	___wmul@multiplier
  1394  01E0  0830               	movf	??_main+1,w
  1395  01E1  00A1               	movwf	___wmul@multiplier+1
  1396  01E2  3005               	movlw	5
  1397  01E3  00A2               	movwf	___wmul@multiplicand
  1398  01E4  3000               	movlw	0
  1399  01E5  00A3               	movwf	___wmul@multiplicand+1
  1400  01E6  3184  24D0  3180   	fcall	___wmul
  1401  01E9  0020               	movlb	0	; select bank0
  1402  01EA  0820               	movf	?___wmul,w
  1403  01EB  3E03               	addlw	3
  1404  01EC  00B1               	movwf	??_main+2
  1405  01ED  3000               	movlw	0
  1406  01EE  3D21               	addwfc	?___wmul+1,w
  1407  01EF  00B2               	movwf	??_main+3
  1408  01F0  3096               	movlw	150
  1409  01F1  00B3               	movwf	??_main+4
  1410  01F2  3023               	movlw	35
  1411  01F3  00B4               	movwf	??_main+5
  1412  01F4  0831               	movf	??_main+2,w
  1413  01F5  0733               	addwf	??_main+4,w
  1414  01F6  0086               	movwf	6
  1415  01F7  0832               	movf	??_main+3,w
  1416  01F8  3D34               	addwfc	??_main+5,w
  1417  01F9  0087               	movwf	7
  1418  01FA  0801               	movf	1,w
  1419  01FB  3890               	iorlw	144
  1420  01FC                     L3:	
  1421  01FC  00B5               	movwf	??_main+6
  1422  01FD  0865               	movf	main@i,w
  1423  01FE  00B6               	movwf	??_main+7
  1424  01FF  01B7               	clrf	??_main+8
  1425  0200  0836               	movf	??_main+7,w
  1426  0201  00A0               	movwf	___wmul@multiplier
  1427  0202  0837               	movf	??_main+8,w
  1428  0203  00A1               	movwf	___wmul@multiplier+1
  1429  0204  3005               	movlw	5
  1430  0205  00A2               	movwf	___wmul@multiplicand
  1431  0206  3000               	movlw	0
  1432  0207  00A3               	movwf	___wmul@multiplicand+1
  1433  0208  3184  24D0  3180   	fcall	___wmul
  1434  020B  0020               	movlb	0	; select bank0
  1435  020C  0820               	movf	?___wmul,w
  1436  020D  3E03               	addlw	3
  1437  020E  00B8               	movwf	??_main+9
  1438  020F  3000               	movlw	0
  1439  0210  3D21               	addwfc	?___wmul+1,w
  1440  0211  00B9               	movwf	??_main+10
  1441  0212  3096               	movlw	150
  1442  0213  00BA               	movwf	??_main+11
  1443  0214  3023               	movlw	35
  1444  0215  00BB               	movwf	??_main+12
  1445  0216  0838               	movf	??_main+9,w
  1446  0217  073A               	addwf	??_main+11,w
  1447  0218  00BC               	movwf	??_main+13
  1448  0219  0839               	movf	??_main+10,w
  1449  021A  3D3B               	addwfc	??_main+12,w
  1450  021B  00BD               	movwf	??_main+14
  1451  021C  083C               	movf	??_main+13,w
  1452  021D  0086               	movwf	6
  1453  021E  083D               	movf	??_main+14,w
  1454  021F  0087               	movwf	7
  1455  0220  0835               	movf	??_main+6,w
  1456  0221  0081               	movwf	1
  1457  0222                     l150:	
  1458                           
  1459                           ;ver0.0_20140727.c: 148: putdata[i][4]=(getKeeping[i][1]&0b01110000)>>4;
  1460  0222  1403               	setc
  1461  0223  0D65               	rlf	main@i,w
  1462  0224  3E3E               	addlw	main@getKeeping& (0+255)
  1463  0225  0086               	movwf	6
  1464  0226  0187               	clrf	7
  1465  0227  0801               	movf	1,w
  1466  0228  00AF               	movwf	??_main
  1467  0229  3004               	movlw	4
  1468  022A                     u885:	
  1469  022A  36AF               	lsrf	??_main,f
  1470  022B  0B89               	decfsz	9,f
  1471  022C  2A2A               	goto	u885
  1472  022D  082F               	movf	??_main,w
  1473  022E  3907               	andlw	7
  1474  022F  00B0               	movwf	??_main+1
  1475  0230  0865               	movf	main@i,w
  1476  0231  00B1               	movwf	??_main+2
  1477  0232  01B2               	clrf	??_main+3
  1478  0233  0831               	movf	??_main+2,w
  1479  0234  00A0               	movwf	___wmul@multiplier
  1480  0235  0832               	movf	??_main+3,w
  1481  0236  00A1               	movwf	___wmul@multiplier+1
  1482  0237  3005               	movlw	5
  1483  0238  00A2               	movwf	___wmul@multiplicand
  1484  0239  3000               	movlw	0
  1485  023A  00A3               	movwf	___wmul@multiplicand+1
  1486  023B  3184  24D0  3180   	fcall	___wmul
  1487  023E  0020               	movlb	0	; select bank0
  1488  023F  0820               	movf	?___wmul,w
  1489  0240  3E04               	addlw	4
  1490  0241  00B3               	movwf	??_main+4
  1491  0242  3000               	movlw	0
  1492  0243  3D21               	addwfc	?___wmul+1,w
  1493  0244  00B4               	movwf	??_main+5
  1494  0245  3096               	movlw	150
  1495  0246  00B5               	movwf	??_main+6
  1496  0247  3023               	movlw	35
  1497  0248  00B6               	movwf	??_main+7
  1498  0249  0833               	movf	??_main+4,w
  1499  024A  0735               	addwf	??_main+6,w
  1500  024B  00B7               	movwf	??_main+8
  1501  024C  0834               	movf	??_main+5,w
  1502  024D  3D36               	addwfc	??_main+7,w
  1503  024E  00B8               	movwf	??_main+9
  1504  024F  0837               	movf	??_main+8,w
  1505  0250  0086               	movwf	6
  1506  0251  0838               	movf	??_main+9,w
  1507  0252  0087               	movwf	7
  1508  0253  0830               	movf	??_main+1,w
  1509  0254  0081               	movwf	1
  1510  0255  3001               	movlw	1
  1511  0256  00AF               	movwf	??_main
  1512  0257  082F               	movf	??_main,w
  1513  0258  07E5               	addwf	main@i,f
  1514  0259  3011               	movlw	17
  1515  025A  0265               	subwf	main@i,w
  1516  025B  1C03               	skipc
  1517  025C  2925               	goto	l1153
  1518  025D                     l148:	
  1519                           
  1520                           ;ver0.0_20140727.c: 149: }
  1521                           ;ver0.0_20140727.c: 150: for(i=1;i<17;i++){
  1522  025D  01E5               	clrf	main@i
  1523  025E  0AE5               	incf	main@i,f
  1524  025F  3011               	movlw	17
  1525  0260  0265               	subwf	main@i,w
  1526  0261  1803               	btfsc	3,0
  1527  0262  2B76               	goto	l142
  1528  0263                     l1169:	
  1529                           
  1530                           ;ver0.0_20140727.c: 152: putdata[i][0]=0xff&0b11111110;
  1531  0263  0865               	movf	main@i,w
  1532  0264  00AF               	movwf	??_main
  1533  0265  01B0               	clrf	??_main+1
  1534  0266  082F               	movf	??_main,w
  1535  0267  00A0               	movwf	___wmul@multiplier
  1536  0268  0830               	movf	??_main+1,w
  1537  0269  00A1               	movwf	___wmul@multiplier+1
  1538  026A  3005               	movlw	5
  1539  026B  00A2               	movwf	___wmul@multiplicand
  1540  026C  3000               	movlw	0
  1541  026D  00A3               	movwf	___wmul@multiplicand+1
  1542  026E  3184  24D0  3180   	fcall	___wmul
  1543  0271  3096               	movlw	150
  1544  0272  0020               	movlb	0	; select bank0
  1545  0273  00B1               	movwf	??_main+2
  1546  0274  3023               	movlw	35
  1547  0275  00B2               	movwf	??_main+3
  1548  0276  0820               	movf	?___wmul,w
  1549  0277  0731               	addwf	??_main+2,w
  1550  0278  00B3               	movwf	??_main+4
  1551  0279  0821               	movf	?___wmul+1,w
  1552  027A  3D32               	addwfc	??_main+3,w
  1553  027B  00B4               	movwf	??_main+5
  1554  027C  0833               	movf	??_main+4,w
  1555  027D  0086               	movwf	6
  1556  027E  0834               	movf	??_main+5,w
  1557  027F  0087               	movwf	7
  1558  0280  30FE               	movlw	254
  1559  0281  0081               	movwf	1
  1560                           
  1561                           ;ver0.0_20140727.c: 154: putdata[i][2]=0xff&0b00001111;
  1562  0282  0865               	movf	main@i,w
  1563  0283  00AF               	movwf	??_main
  1564  0284  01B0               	clrf	??_main+1
  1565  0285  082F               	movf	??_main,w
  1566  0286  00A0               	movwf	___wmul@multiplier
  1567  0287  0830               	movf	??_main+1,w
  1568  0288  00A1               	movwf	___wmul@multiplier+1
  1569  0289  3005               	movlw	5
  1570  028A  00A2               	movwf	___wmul@multiplicand
  1571  028B  3000               	movlw	0
  1572  028C  00A3               	movwf	___wmul@multiplicand+1
  1573  028D  3184  24D0  3180   	fcall	___wmul
  1574  0290  0020               	movlb	0	; select bank0
  1575  0291  0820               	movf	?___wmul,w
  1576  0292  3E02               	addlw	2
  1577  0293  00B1               	movwf	??_main+2
  1578  0294  3000               	movlw	0
  1579  0295  3D21               	addwfc	?___wmul+1,w
  1580  0296  00B2               	movwf	??_main+3
  1581  0297  3096               	movlw	150
  1582  0298  00B3               	movwf	??_main+4
  1583  0299  3023               	movlw	35
  1584  029A  00B4               	movwf	??_main+5
  1585  029B  0831               	movf	??_main+2,w
  1586  029C  0733               	addwf	??_main+4,w
  1587  029D  00B5               	movwf	??_main+6
  1588  029E  0832               	movf	??_main+3,w
  1589  029F  3D34               	addwfc	??_main+5,w
  1590  02A0  00B6               	movwf	??_main+7
  1591  02A1  0835               	movf	??_main+6,w
  1592  02A2  0086               	movwf	6
  1593  02A3  0836               	movf	??_main+7,w
  1594  02A4  0087               	movwf	7
  1595  02A5  300F               	movlw	15
  1596  02A6  0081               	movwf	1
  1597                           
  1598                           ;ver0.0_20140727.c: 156: putdata[i][3]=(0xff&0b00000001)|((0xff&0b10000000)>>6);
  1599  02A7  0865               	movf	main@i,w
  1600  02A8  00AF               	movwf	??_main
  1601  02A9  01B0               	clrf	??_main+1
  1602  02AA  082F               	movf	??_main,w
  1603  02AB  00A0               	movwf	___wmul@multiplier
  1604  02AC  0830               	movf	??_main+1,w
  1605  02AD  00A1               	movwf	___wmul@multiplier+1
  1606  02AE  3005               	movlw	5
  1607  02AF  00A2               	movwf	___wmul@multiplicand
  1608  02B0  3000               	movlw	0
  1609  02B1  00A3               	movwf	___wmul@multiplicand+1
  1610  02B2  3184  24D0  3180   	fcall	___wmul
  1611  02B5  0020               	movlb	0	; select bank0
  1612  02B6  0820               	movf	?___wmul,w
  1613  02B7  3E03               	addlw	3
  1614  02B8  00B1               	movwf	??_main+2
  1615  02B9  3000               	movlw	0
  1616  02BA  3D21               	addwfc	?___wmul+1,w
  1617  02BB  00B2               	movwf	??_main+3
  1618  02BC  3096               	movlw	150
  1619  02BD  00B3               	movwf	??_main+4
  1620  02BE  3023               	movlw	35
  1621  02BF  00B4               	movwf	??_main+5
  1622  02C0  0831               	movf	??_main+2,w
  1623  02C1  0733               	addwf	??_main+4,w
  1624  02C2  00B5               	movwf	??_main+6
  1625  02C3  0832               	movf	??_main+3,w
  1626  02C4  3D34               	addwfc	??_main+5,w
  1627  02C5  00B6               	movwf	??_main+7
  1628  02C6  0835               	movf	??_main+6,w
  1629  02C7  0086               	movwf	6
  1630  02C8  0836               	movf	??_main+7,w
  1631  02C9  0087               	movwf	7
  1632  02CA  3003               	movlw	3
  1633  02CB  0081               	movwf	1
  1634                           
  1635                           ;ver0.0_20140727.c: 157: if(i==16)
  1636  02CC  0865               	movf	main@i,w
  1637  02CD  3A10               	xorlw	16
  1638  02CE  1D03               	skipz
  1639  02CF  2AF2               	goto	l154
  1640                           
  1641                           ;ver0.0_20140727.c: 158: putdata[i][3]=putdata[i][3]|0b10110000;
  1642  02D0  0865               	movf	main@i,w
  1643  02D1  00AF               	movwf	??_main
  1644  02D2  01B0               	clrf	??_main+1
  1645  02D3  082F               	movf	??_main,w
  1646  02D4  00A0               	movwf	___wmul@multiplier
  1647  02D5  0830               	movf	??_main+1,w
  1648  02D6  00A1               	movwf	___wmul@multiplier+1
  1649  02D7  3005               	movlw	5
  1650  02D8  00A2               	movwf	___wmul@multiplicand
  1651  02D9  3000               	movlw	0
  1652  02DA  00A3               	movwf	___wmul@multiplicand+1
  1653  02DB  3184  24D0  3180   	fcall	___wmul
  1654  02DE  0020               	movlb	0	; select bank0
  1655  02DF  0820               	movf	?___wmul,w
  1656  02E0  3E03               	addlw	3
  1657  02E1  00B1               	movwf	??_main+2
  1658  02E2  3000               	movlw	0
  1659  02E3  3D21               	addwfc	?___wmul+1,w
  1660  02E4  00B2               	movwf	??_main+3
  1661  02E5  3096               	movlw	150
  1662  02E6  00B3               	movwf	??_main+4
  1663  02E7  3023               	movlw	35
  1664  02E8  00B4               	movwf	??_main+5
  1665  02E9  0831               	movf	??_main+2,w
  1666  02EA  0733               	addwf	??_main+4,w
  1667  02EB  0086               	movwf	6
  1668  02EC  0832               	movf	??_main+3,w
  1669  02ED  3D34               	addwfc	??_main+5,w
  1670  02EE  0087               	movwf	7
  1671  02EF  0801               	movf	1,w
  1672  02F0  38B0               	iorlw	176
  1673  02F1  2B15               	goto	L4
  1674  02F2                     l154:	
  1675                           
  1676                           ;ver0.0_20140727.c: 159: else if(i%2==0)
  1677  02F2  1865               	btfsc	main@i,0
  1678  02F3  2B3B               	goto	l155
  1679                           
  1680                           ;ver0.0_20140727.c: 160: putdata[i][3]=putdata[i][3]|0b10010000;
  1681  02F4  0865               	movf	main@i,w
  1682  02F5  00AF               	movwf	??_main
  1683  02F6  01B0               	clrf	??_main+1
  1684  02F7  082F               	movf	??_main,w
  1685  02F8  00A0               	movwf	___wmul@multiplier
  1686  02F9  0830               	movf	??_main+1,w
  1687  02FA  00A1               	movwf	___wmul@multiplier+1
  1688  02FB  3005               	movlw	5
  1689  02FC  00A2               	movwf	___wmul@multiplicand
  1690  02FD  3000               	movlw	0
  1691  02FE  00A3               	movwf	___wmul@multiplicand+1
  1692  02FF  3184  24D0  3180   	fcall	___wmul
  1693  0302  0020               	movlb	0	; select bank0
  1694  0303  0820               	movf	?___wmul,w
  1695  0304  3E03               	addlw	3
  1696  0305  00B1               	movwf	??_main+2
  1697  0306  3000               	movlw	0
  1698  0307  3D21               	addwfc	?___wmul+1,w
  1699  0308  00B2               	movwf	??_main+3
  1700  0309  3096               	movlw	150
  1701  030A  00B3               	movwf	??_main+4
  1702  030B  3023               	movlw	35
  1703  030C  00B4               	movwf	??_main+5
  1704  030D  0831               	movf	??_main+2,w
  1705  030E  0733               	addwf	??_main+4,w
  1706  030F  0086               	movwf	6
  1707  0310  0832               	movf	??_main+3,w
  1708  0311  3D34               	addwfc	??_main+5,w
  1709  0312  0087               	movwf	7
  1710  0313  0801               	movf	1,w
  1711  0314  3890               	iorlw	144
  1712  0315                     L4:	
  1713  0315  00B5               	movwf	??_main+6
  1714  0316  0865               	movf	main@i,w
  1715  0317  00B6               	movwf	??_main+7
  1716  0318  01B7               	clrf	??_main+8
  1717  0319  0836               	movf	??_main+7,w
  1718  031A  00A0               	movwf	___wmul@multiplier
  1719  031B  0837               	movf	??_main+8,w
  1720  031C  00A1               	movwf	___wmul@multiplier+1
  1721  031D  3005               	movlw	5
  1722  031E  00A2               	movwf	___wmul@multiplicand
  1723  031F  3000               	movlw	0
  1724  0320  00A3               	movwf	___wmul@multiplicand+1
  1725  0321  3184  24D0  3180   	fcall	___wmul
  1726  0324  0020               	movlb	0	; select bank0
  1727  0325  0820               	movf	?___wmul,w
  1728  0326  3E03               	addlw	3
  1729  0327  00B8               	movwf	??_main+9
  1730  0328  3000               	movlw	0
  1731  0329  3D21               	addwfc	?___wmul+1,w
  1732  032A  00B9               	movwf	??_main+10
  1733  032B  3096               	movlw	150
  1734  032C  00BA               	movwf	??_main+11
  1735  032D  3023               	movlw	35
  1736  032E  00BB               	movwf	??_main+12
  1737  032F  0838               	movf	??_main+9,w
  1738  0330  073A               	addwf	??_main+11,w
  1739  0331  00BC               	movwf	??_main+13
  1740  0332  0839               	movf	??_main+10,w
  1741  0333  3D3B               	addwfc	??_main+12,w
  1742  0334  00BD               	movwf	??_main+14
  1743  0335  083C               	movf	??_main+13,w
  1744  0336  0086               	movwf	6
  1745  0337  083D               	movf	??_main+14,w
  1746  0338  0087               	movwf	7
  1747  0339  0835               	movf	??_main+6,w
  1748  033A  0081               	movwf	1
  1749  033B                     l155:	
  1750                           
  1751                           ;ver0.0_20140727.c: 162: putdata[i][4]=(getKeeping[i][1]&0b01110000)>>4;
  1752  033B  1403               	setc
  1753  033C  0D65               	rlf	main@i,w
  1754  033D  3E3E               	addlw	main@getKeeping& (0+255)
  1755  033E  0086               	movwf	6
  1756  033F  0187               	clrf	7
  1757  0340  0801               	movf	1,w
  1758  0341  00AF               	movwf	??_main
  1759  0342  3004               	movlw	4
  1760  0343                     u935:	
  1761  0343  36AF               	lsrf	??_main,f
  1762  0344  0B89               	decfsz	9,f
  1763  0345  2B43               	goto	u935
  1764  0346  082F               	movf	??_main,w
  1765  0347  3907               	andlw	7
  1766  0348  00B0               	movwf	??_main+1
  1767  0349  0865               	movf	main@i,w
  1768  034A  00B1               	movwf	??_main+2
  1769  034B  01B2               	clrf	??_main+3
  1770  034C  0831               	movf	??_main+2,w
  1771  034D  00A0               	movwf	___wmul@multiplier
  1772  034E  0832               	movf	??_main+3,w
  1773  034F  00A1               	movwf	___wmul@multiplier+1
  1774  0350  3005               	movlw	5
  1775  0351  00A2               	movwf	___wmul@multiplicand
  1776  0352  3000               	movlw	0
  1777  0353  00A3               	movwf	___wmul@multiplicand+1
  1778  0354  3184  24D0  3180   	fcall	___wmul
  1779  0357  0020               	movlb	0	; select bank0
  1780  0358  0820               	movf	?___wmul,w
  1781  0359  3E04               	addlw	4
  1782  035A  00B3               	movwf	??_main+4
  1783  035B  3000               	movlw	0
  1784  035C  3D21               	addwfc	?___wmul+1,w
  1785  035D  00B4               	movwf	??_main+5
  1786  035E  3096               	movlw	150
  1787  035F  00B5               	movwf	??_main+6
  1788  0360  3023               	movlw	35
  1789  0361  00B6               	movwf	??_main+7
  1790  0362  0833               	movf	??_main+4,w
  1791  0363  0735               	addwf	??_main+6,w
  1792  0364  00B7               	movwf	??_main+8
  1793  0365  0834               	movf	??_main+5,w
  1794  0366  3D36               	addwfc	??_main+7,w
  1795  0367  00B8               	movwf	??_main+9
  1796  0368  0837               	movf	??_main+8,w
  1797  0369  0086               	movwf	6
  1798  036A  0838               	movf	??_main+9,w
  1799  036B  0087               	movwf	7
  1800  036C  0830               	movf	??_main+1,w
  1801  036D  0081               	movwf	1
  1802  036E  3001               	movlw	1
  1803  036F  00AF               	movwf	??_main
  1804  0370  082F               	movf	??_main,w
  1805  0371  07E5               	addwf	main@i,f
  1806  0372  3011               	movlw	17
  1807  0373  0265               	subwf	main@i,w
  1808  0374  1C03               	skipc
  1809  0375  2A63               	goto	l1169
  1810  0376                     l142:	
  1811                           
  1812                           ;ver0.0_20140727.c: 163: }
  1813                           ;ver0.0_20140727.c: 164: }
  1814                           ;ver0.0_20140727.c: 165: GIE=1;
  1815  0376  178B               	bsf	11,7	;volatile
  1816  0377                     l157:	
  1817                           ;ver0.0_20140727.c: 166: while(1);
  1818                           
  1819  0377  2B77               	goto	l157
  1820  0378                     __end_of_main:	
  1821                           
  1822                           	psect	text1
  1823  0481                     __ptext1:	
  1824 ;; *************** function _x2 *****************
  1825 ;; Defined at:
  1826 ;;		line 57 in file "ver0.0_20140727.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  num             1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  num             1   14[BANK0 ] unsigned char 
  1831 ;;  ret             1   13[BANK0 ] unsigned char 
  1832 ;;  i               1   12[BANK0 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      unsigned char 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1844 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1845 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1846 ;;Total ram usage:        6 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    4
  1849 ;; This function calls:
  1850 ;;		___awdiv
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _x2
  1858  0481                     _x2:	
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _x2: [wreg+status,2+status,0+pclath+cstack]
  1862                           ;x2@num stored from wreg
  1863  0481  0020               	movlb	0	; select bank0
  1864  0482  00AE               	movwf	x2@num
  1865                           
  1866                           ;ver0.0_20140727.c: 58: char i,ret=0;
  1867  0483  01AD               	clrf	x2@ret
  1868                           
  1869                           ;ver0.0_20140727.c: 59: if(num%2)
  1870  0484  1C2E               	btfss	x2@num,0
  1871  0485  2C88               	goto	l1023
  1872                           
  1873                           ;ver0.0_20140727.c: 60: ret=1;
  1874  0486  01AD               	clrf	x2@ret
  1875  0487  0AAD               	incf	x2@ret,f
  1876  0488                     l1023:	
  1877                           
  1878                           ;ver0.0_20140727.c: 61: num=7-num/2;
  1879  0488  3002               	movlw	2
  1880  0489  00A0               	movwf	___awdiv@divisor
  1881  048A  3000               	movlw	0
  1882  048B  00A1               	movwf	___awdiv@divisor+1
  1883  048C  082E               	movf	x2@num,w
  1884  048D  00A9               	movwf	??_x2
  1885  048E  01AA               	clrf	??_x2+1
  1886  048F  0829               	movf	??_x2,w
  1887  0490  00A2               	movwf	___awdiv@dividend
  1888  0491  082A               	movf	??_x2+1,w
  1889  0492  00A3               	movwf	___awdiv@dividend+1
  1890  0493  3184  242D  3184   	fcall	___awdiv
  1891  0496  0020               	movlb	0	; select bank0
  1892  0497  0820               	movf	?___awdiv,w
  1893  0498  3AFF               	xorlw	255
  1894  0499  3E01               	addlw	1
  1895  049A  3E07               	addlw	7
  1896  049B  00AB               	movwf	??_x2+2
  1897  049C  082B               	movf	??_x2+2,w
  1898  049D  00AE               	movwf	x2@num
  1899                           
  1900                           ;ver0.0_20140727.c: 62: for(i=0;i<num;i++)
  1901  049E  01AC               	clrf	x2@i
  1902  049F                     l1029:	
  1903  049F  082E               	movf	x2@num,w
  1904  04A0  022C               	subwf	x2@i,w
  1905  04A1  1803               	btfsc	3,0
  1906  04A2  2CAC               	goto	l1031
  1907                           
  1908                           ;ver0.0_20140727.c: 63: ret=ret*2;
  1909  04A3  352D               	lslf	x2@ret,w
  1910  04A4  00A9               	movwf	??_x2
  1911  04A5  0829               	movf	??_x2,w
  1912  04A6  00AD               	movwf	x2@ret
  1913  04A7  3001               	movlw	1
  1914  04A8  00A9               	movwf	??_x2
  1915  04A9  0829               	movf	??_x2,w
  1916  04AA  07AC               	addwf	x2@i,f
  1917  04AB  2C9F               	goto	l1029
  1918  04AC                     l1031:	
  1919                           
  1920                           ;ver0.0_20140727.c: 64: return ret;
  1921  04AC  082D               	movf	x2@ret,w
  1922  04AD  0008               	return
  1923  04AE                     __end_of_x2:	
  1924                           
  1925                           	psect	text2
  1926  042D                     __ptext2:	
  1927 ;; *************** function ___awdiv *****************
  1928 ;; Defined at:
  1929 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awdiv.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  divisor         2    0[BANK0 ] int 
  1932 ;;  dividend        2    2[BANK0 ] int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  quotient        2    7[BANK0 ] int 
  1935 ;;  sign            1    6[BANK0 ] unsigned char 
  1936 ;;  counter         1    5[BANK0 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    0[BANK0 ] int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1947 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;Total ram usage:        9 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    3
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_x2
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function ___awdiv
  1962  042D                     ___awdiv:	
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1966  042D  0020               	movlb	0	; select bank0
  1967  042E  01A6               	clrf	___awdiv@sign
  1968  042F  1FA1               	btfss	___awdiv@divisor+1,7
  1969  0430  2C38               	goto	l923
  1970  0431  09A0               	comf	___awdiv@divisor,f
  1971  0432  09A1               	comf	___awdiv@divisor+1,f
  1972  0433  0AA0               	incf	___awdiv@divisor,f
  1973  0434  1903               	skipnz
  1974  0435  0AA1               	incf	___awdiv@divisor+1,f
  1975  0436  01A6               	clrf	___awdiv@sign
  1976  0437  0AA6               	incf	___awdiv@sign,f
  1977  0438                     l923:	
  1978  0438  1FA3               	btfss	___awdiv@dividend+1,7
  1979  0439  2C43               	goto	l929
  1980  043A  09A2               	comf	___awdiv@dividend,f
  1981  043B  09A3               	comf	___awdiv@dividend+1,f
  1982  043C  0AA2               	incf	___awdiv@dividend,f
  1983  043D  1903               	skipnz
  1984  043E  0AA3               	incf	___awdiv@dividend+1,f
  1985  043F  3001               	movlw	1
  1986  0440  00A4               	movwf	??___awdiv
  1987  0441  0824               	movf	??___awdiv,w
  1988  0442  06A6               	xorwf	___awdiv@sign,f
  1989  0443                     l929:	
  1990  0443  01A7               	clrf	___awdiv@quotient
  1991  0444  01A8               	clrf	___awdiv@quotient+1
  1992  0445  0821               	movf	___awdiv@divisor+1,w
  1993  0446  0420               	iorwf	___awdiv@divisor,w
  1994  0447  1903               	skipnz
  1995  0448  2C72               	goto	l951
  1996  0449  01A5               	clrf	___awdiv@counter
  1997  044A  0AA5               	incf	___awdiv@counter,f
  1998  044B                     l939:	
  1999  044B  1BA1               	btfsc	___awdiv@divisor+1,7
  2000  044C  2C57               	goto	l941
  2001  044D  3001               	movlw	1
  2002  044E                     u525:	
  2003  044E  35A0               	lslf	___awdiv@divisor,f
  2004  044F  0DA1               	rlf	___awdiv@divisor+1,f
  2005  0450  0B89               	decfsz	9,f
  2006  0451  2C4E               	goto	u525
  2007  0452  3001               	movlw	1
  2008  0453  00A4               	movwf	??___awdiv
  2009  0454  0824               	movf	??___awdiv,w
  2010  0455  07A5               	addwf	___awdiv@counter,f
  2011  0456  2C4B               	goto	l939
  2012  0457                     l941:	
  2013  0457  3001               	movlw	1
  2014  0458                     u545:	
  2015  0458  35A7               	lslf	___awdiv@quotient,f
  2016  0459  0DA8               	rlf	___awdiv@quotient+1,f
  2017  045A  0B89               	decfsz	9,f
  2018  045B  2C58               	goto	u545
  2019  045C  0821               	movf	___awdiv@divisor+1,w
  2020  045D  0223               	subwf	___awdiv@dividend+1,w
  2021  045E  1D03               	skipz
  2022  045F  2C62               	goto	u555
  2023  0460  0820               	movf	___awdiv@divisor,w
  2024  0461  0222               	subwf	___awdiv@dividend,w
  2025  0462                     u555:	
  2026  0462  1C03               	skipc
  2027  0463  2C69               	goto	l947
  2028  0464  0820               	movf	___awdiv@divisor,w
  2029  0465  02A2               	subwf	___awdiv@dividend,f
  2030  0466  0821               	movf	___awdiv@divisor+1,w
  2031  0467  3BA3               	subwfb	___awdiv@dividend+1,f
  2032  0468  1427               	bsf	___awdiv@quotient,0
  2033  0469                     l947:	
  2034  0469  3001               	movlw	1
  2035  046A                     u565:	
  2036  046A  36A1               	lsrf	___awdiv@divisor+1,f
  2037  046B  0CA0               	rrf	___awdiv@divisor,f
  2038  046C  0B89               	decfsz	9,f
  2039  046D  2C6A               	goto	u565
  2040  046E  3001               	movlw	1
  2041  046F  02A5               	subwf	___awdiv@counter,f
  2042  0470  1D03               	btfss	3,2
  2043  0471  2C57               	goto	l941
  2044  0472                     l951:	
  2045  0472  0826               	movf	___awdiv@sign,w
  2046  0473  1903               	btfsc	3,2
  2047  0474  2C7A               	goto	l955
  2048  0475  09A7               	comf	___awdiv@quotient,f
  2049  0476  09A8               	comf	___awdiv@quotient+1,f
  2050  0477  0AA7               	incf	___awdiv@quotient,f
  2051  0478  1903               	skipnz
  2052  0479  0AA8               	incf	___awdiv@quotient+1,f
  2053  047A                     l955:	
  2054  047A  0828               	movf	___awdiv@quotient+1,w
  2055  047B  01A1               	clrf	?___awdiv+1
  2056  047C  07A1               	addwf	?___awdiv+1,f
  2057  047D  0827               	movf	___awdiv@quotient,w
  2058  047E  01A0               	clrf	?___awdiv
  2059  047F  07A0               	addwf	?___awdiv,f
  2060  0480  0008               	return
  2061  0481                     __end_of___awdiv:	
  2062                           
  2063                           	psect	text3
  2064  04AE                     __ptext3:	
  2065 ;; *************** function _setpin *****************
  2066 ;; Defined at:
  2067 ;;		line 9 in file "sorce.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;		None               void
  2074 ;; Registers used:
  2075 ;;		wreg, status,2
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    3
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function _setpin
  2097  04AE                     _setpin:	
  2098                           
  2099                           ;sorce.c: 10: OSCCON = 0b01110000 ;
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _setpin: [wreg+status,2]
  2103  04AE  3070               	movlw	112
  2104  04AF  0021               	movlb	1	; select bank1
  2105  04B0  0099               	movwf	25	;volatile
  2106                           
  2107                           ;sorce.c: 11: ANSELA = 0b00000000 ;
  2108  04B1  0023               	movlb	3	; select bank3
  2109  04B2  018C               	clrf	12	;volatile
  2110                           
  2111                           ;sorce.c: 12: ANSELB = 0b00000000 ;
  2112  04B3  018D               	clrf	13	;volatile
  2113                           
  2114                           ;sorce.c: 13: ANSELD = 0x00 ;
  2115  04B4  018F               	clrf	15	;volatile
  2116                           
  2117                           ;sorce.c: 14: ANSELE = 0b00000000 ;
  2118  04B5  0190               	clrf	16	;volatile
  2119                           
  2120                           ;sorce.c: 16: TRISA = 0b00000000 ;
  2121  04B6  0021               	movlb	1	; select bank1
  2122  04B7  018C               	clrf	12	;volatile
  2123                           
  2124                           ;sorce.c: 17: TRISB = 0b00000000 ;
  2125  04B8  018D               	clrf	13	;volatile
  2126                           
  2127                           ;sorce.c: 18: TRISC = 0b10110000 ;
  2128  04B9  30B0               	movlw	176
  2129  04BA  008E               	movwf	14	;volatile
  2130                           
  2131                           ;sorce.c: 19: TRISD = 0b00001100 ;
  2132  04BB  300C               	movlw	12
  2133  04BC  008F               	movwf	15	;volatile
  2134                           
  2135                           ;sorce.c: 20: TRISE = 0X00 ;
  2136  04BD  0190               	clrf	16	;volatile
  2137                           
  2138                           ;sorce.c: 22: PORTA = 0b00000000 ;
  2139  04BE  0020               	movlb	0	; select bank0
  2140  04BF  018C               	clrf	12	;volatile
  2141                           
  2142                           ;sorce.c: 23: PORTB = 0b00000000 ;
  2143  04C0  018D               	clrf	13	;volatile
  2144                           
  2145                           ;sorce.c: 24: PORTC = 0b10000000 ;
  2146  04C1  3080               	movlw	128
  2147  04C2  008E               	movwf	14	;volatile
  2148                           
  2149                           ;sorce.c: 25: PORTD = 0b00000000 ;
  2150  04C3  018F               	clrf	15	;volatile
  2151                           
  2152                           ;sorce.c: 27: CCP2CON=0x00;
  2153  04C4  0025               	movlb	5	; select bank5
  2154  04C5  019A               	clrf	26	;volatile
  2155                           
  2156                           ;sorce.c: 28: CCP1CON=0x00;
  2157  04C6  0193               	clrf	19	;volatile
  2158                           
  2159                           ;sorce.c: 30: CPSCON0 =0x00;
  2160  04C7  0020               	movlb	0	; select bank0
  2161  04C8  019E               	clrf	30	;volatile
  2162                           
  2163                           ;sorce.c: 31: CPSCON1 =0x00;
  2164  04C9  019F               	clrf	31	;volatile
  2165                           
  2166                           ;sorce.c: 32: LATD =0x00;
  2167  04CA  0022               	movlb	2	; select bank2
  2168  04CB  018F               	clrf	15	;volatile
  2169                           
  2170                           ;sorce.c: 33: LCDCON =0x00;
  2171  04CC  002F               	movlb	15	; select bank15
  2172  04CD  0191               	clrf	17	;volatile
  2173                           
  2174                           ;sorce.c: 34: LCDSE2 =0x00;
  2175  04CE  019A               	clrf	26	;volatile
  2176  04CF  0008               	return
  2177  04D0                     __end_of_setpin:	
  2178                           
  2179                           	psect	text4
  2180  04D0                     __ptext4:	
  2181 ;; *************** function ___wmul *****************
  2182 ;; Defined at:
  2183 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2186 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  product         2    4[BANK0 ] unsigned int 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    0[BANK0 ] unsigned int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function ___wmul
  2214  04D0                     ___wmul:	
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2218  04D0  0020               	movlb	0	; select bank0
  2219  04D1  01A4               	clrf	___wmul@product
  2220  04D2  01A5               	clrf	___wmul@product+1
  2221  04D3                     l1037:	
  2222  04D3  1C20               	btfss	___wmul@multiplier,0
  2223  04D4  2CD9               	goto	l266
  2224  04D5  0822               	movf	___wmul@multiplicand,w
  2225  04D6  07A4               	addwf	___wmul@product,f
  2226  04D7  0823               	movf	___wmul@multiplicand+1,w
  2227  04D8  3DA5               	addwfc	___wmul@product+1,f
  2228  04D9                     l266:	
  2229  04D9  3001               	movlw	1
  2230  04DA                     u675:	
  2231  04DA  35A2               	lslf	___wmul@multiplicand,f
  2232  04DB  0DA3               	rlf	___wmul@multiplicand+1,f
  2233  04DC  0B89               	decfsz	9,f
  2234  04DD  2CDA               	goto	u675
  2235  04DE  3001               	movlw	1
  2236  04DF                     u685:	
  2237  04DF  36A1               	lsrf	___wmul@multiplier+1,f
  2238  04E0  0CA0               	rrf	___wmul@multiplier,f
  2239  04E1  0B89               	decfsz	9,f
  2240  04E2  2CDF               	goto	u685
  2241  04E3  0821               	movf	___wmul@multiplier+1,w
  2242  04E4  0420               	iorwf	___wmul@multiplier,w
  2243  04E5  1D03               	skipz
  2244  04E6  2CD3               	goto	l1037
  2245  04E7  0825               	movf	___wmul@product+1,w
  2246  04E8  01A1               	clrf	?___wmul+1
  2247  04E9  07A1               	addwf	?___wmul+1,f
  2248  04EA  0824               	movf	___wmul@product,w
  2249  04EB  01A0               	clrf	?___wmul
  2250  04EC  07A0               	addwf	?___wmul,f
  2251  04ED  0008               	return
  2252  04EE                     __end_of___wmul:	
  2253                           
  2254                           	psect	text5
  2255  050B                     __ptext5:	
  2256 ;; *************** function _E2promRead *****************
  2257 ;; Defined at:
  2258 ;;		line 3 in file "sorce.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  adr             1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  adr             1    2[BANK0 ] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;Total ram usage:        3 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _E2promRead
  2288  050B                     _E2promRead:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in _E2promRead: [wreg]
  2292                           ;E2promRead@adr stored from wreg
  2293  050B  0020               	movlb	0	; select bank0
  2294  050C  00A2               	movwf	E2promRead@adr
  2295                           
  2296                           ;sorce.c: 5: EEADR = adr;
  2297  050D  0822               	movf	E2promRead@adr,w
  2298  050E  00A0               	movwf	??_E2promRead
  2299  050F  01A1               	clrf	??_E2promRead+1
  2300  0510  0820               	movf	??_E2promRead,w
  2301  0511  0023               	movlb	3	; select bank3
  2302  0512  0091               	movwf	17	;volatile
  2303  0513  0020               	movlb	0	; select bank0
  2304  0514  0821               	movf	??_E2promRead+1,w
  2305  0515  0023               	movlb	3	; select bank3
  2306  0516  0092               	movwf	18	;volatile
  2307                           
  2308                           ;sorce.c: 6: RD = 1;
  2309  0517  1415               	bsf	21,0	;volsfr
  2310                           
  2311                           ;sorce.c: 7: return( EEDATA );
  2312  0518  0813               	movf	19,w	;volatile
  2313  0519  0008               	return
  2314  051A                     __end_of_E2promRead:	
  2315                           
  2316                           	psect	intentry
  2317  0004                     __pintentry:	
  2318 ;; *************** function _InterTimer *****************
  2319 ;; Defined at:
  2320 ;;		line 42 in file "ver0.0_20140727.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    2
  2341 ;; This function calls:
  2342 ;;		_change
  2343 ;; This function is called by:
  2344 ;;		Interrupt level 1
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348  0004                     _InterTimer:	
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2352  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2353  0005  3180               	pagesel	$
  2354  0006  0020               	movlb	0	; select bank0
  2355  0007  087F               	movf	127,w
  2356  0008  00FC               	movwf	??_InterTimer
  2357                           
  2358                           ;ver0.0_20140727.c: 44: if (TMR0IF == 1) {
  2359  0009  1D0B               	btfss	11,2	;volatile
  2360  000A  2816               	goto	i1l125
  2361                           
  2362                           ;ver0.0_20140727.c: 45: TMR0 = 61 ;
  2363  000B  303D               	movlw	61
  2364  000C  0095               	movwf	21	;volatile
  2365                           
  2366                           ;ver0.0_20140727.c: 50: change();
  2367  000D  3183  2378  3180   	fcall	_change
  2368                           
  2369                           ;ver0.0_20140727.c: 51: if(RCIF)
  2370  0010  0020               	movlb	0	; select bank0
  2371  0011  1E91               	btfss	17,5	;volatile
  2372  0012  2815               	goto	i1l124
  2373                           
  2374                           ;ver0.0_20140727.c: 52: reservingNow=1;
  2375  0013  01E6               	clrf	_reservingNow
  2376  0014  0AE6               	incf	_reservingNow,f
  2377  0015                     i1l124:	
  2378                           
  2379                           ;ver0.0_20140727.c: 54: TMR0IF = 0 ;
  2380  0015  110B               	bcf	11,2	;volatile
  2381  0016                     i1l125:	
  2382  0016  087C               	movf	??_InterTimer,w
  2383  0017  00FF               	movwf	127
  2384  0018  107E               	bcf	126,0	;clear compiler interrupt flag
  2385  0019  0009               	retfie
  2386  001A                     __end_of_InterTimer:	
  2387                           
  2388                           	psect	text7
  2389  0378                     __ptext7:	
  2390 ;; *************** function _change *****************
  2391 ;; Defined at:
  2392 ;;		line 25 in file "ver0.0_20140727.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2408 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2410 ;;Total ram usage:        6 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    1
  2413 ;; This function calls:
  2414 ;;		i1___wmul
  2415 ;; This function is called by:
  2416 ;;		_InterTimer
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _change
  2422  0378                     _change:	
  2423                           
  2424                           ;ver0.0_20140727.c: 26: ledcount++;
  2425                           
  2426                           ;incstack = 0
  2427                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2428  0378  3001               	movlw	1
  2429  0379  00F6               	movwf	??_change
  2430  037A  0876               	movf	??_change,w
  2431  037B  07FD               	addwf	_ledcount,f
  2432                           
  2433                           ;ver0.0_20140727.c: 28: PORTA=putdata[ledcount][0];
  2434  037C  087D               	movf	_ledcount,w
  2435  037D  00F6               	movwf	??_change
  2436  037E  01F7               	clrf	??_change+1
  2437  037F  0876               	movf	??_change,w
  2438  0380  00F0               	movwf	i1___wmul@multiplier
  2439  0381  0877               	movf	??_change+1,w
  2440  0382  00F1               	movwf	i1___wmul@multiplier+1
  2441  0383  3005               	movlw	5
  2442  0384  00F2               	movwf	i1___wmul@multiplicand
  2443  0385  3000               	movlw	0
  2444  0386  00F3               	movwf	i1___wmul@multiplicand+1
  2445  0387  3184  24EE  3183   	fcall	i1___wmul
  2446  038A  3096               	movlw	150
  2447  038B  00F8               	movwf	??_change+2
  2448  038C  3023               	movlw	35
  2449  038D  00F9               	movwf	??_change+3
  2450  038E  0870               	movf	?i1___wmul,w
  2451  038F  0778               	addwf	??_change+2,w
  2452  0390  0086               	movwf	6
  2453  0391  0871               	movf	?i1___wmul+1,w
  2454  0392  3D79               	addwfc	??_change+3,w
  2455  0393  0087               	movwf	7
  2456  0394  0801               	movf	1,w
  2457  0395  0020               	movlb	0	; select bank0
  2458  0396  008C               	movwf	12	;volatile
  2459                           
  2460                           ;ver0.0_20140727.c: 29: PORTB=putdata[ledcount][1];
  2461  0397  087D               	movf	_ledcount,w
  2462  0398  00F6               	movwf	??_change
  2463  0399  01F7               	clrf	??_change+1
  2464  039A  0876               	movf	??_change,w
  2465  039B  00F0               	movwf	i1___wmul@multiplier
  2466  039C  0877               	movf	??_change+1,w
  2467  039D  00F1               	movwf	i1___wmul@multiplier+1
  2468  039E  3005               	movlw	5
  2469  039F  00F2               	movwf	i1___wmul@multiplicand
  2470  03A0  3000               	movlw	0
  2471  03A1  00F3               	movwf	i1___wmul@multiplicand+1
  2472  03A2  3184  24EE  3183   	fcall	i1___wmul
  2473  03A5  0870               	movf	?i1___wmul,w
  2474  03A6  3E01               	addlw	1
  2475  03A7  00F8               	movwf	??_change+2
  2476  03A8  3000               	movlw	0
  2477  03A9  3D71               	addwfc	?i1___wmul+1,w
  2478  03AA  00F9               	movwf	??_change+3
  2479  03AB  3096               	movlw	150
  2480  03AC  00FA               	movwf	??_change+4
  2481  03AD  3023               	movlw	35
  2482  03AE  00FB               	movwf	??_change+5
  2483  03AF  0878               	movf	??_change+2,w
  2484  03B0  077A               	addwf	??_change+4,w
  2485  03B1  0086               	movwf	6
  2486  03B2  0879               	movf	??_change+3,w
  2487  03B3  3D7B               	addwfc	??_change+5,w
  2488  03B4  0087               	movwf	7
  2489  03B5  0801               	movf	1,w
  2490  03B6  0020               	movlb	0	; select bank0
  2491  03B7  008D               	movwf	13	;volatile
  2492                           
  2493                           ;ver0.0_20140727.c: 30: PORTC=putdata[ledcount][2];
  2494  03B8  087D               	movf	_ledcount,w
  2495  03B9  00F6               	movwf	??_change
  2496  03BA  01F7               	clrf	??_change+1
  2497  03BB  0876               	movf	??_change,w
  2498  03BC  00F0               	movwf	i1___wmul@multiplier
  2499  03BD  0877               	movf	??_change+1,w
  2500  03BE  00F1               	movwf	i1___wmul@multiplier+1
  2501  03BF  3005               	movlw	5
  2502  03C0  00F2               	movwf	i1___wmul@multiplicand
  2503  03C1  3000               	movlw	0
  2504  03C2  00F3               	movwf	i1___wmul@multiplicand+1
  2505  03C3  3184  24EE  3183   	fcall	i1___wmul
  2506  03C6  0870               	movf	?i1___wmul,w
  2507  03C7  3E02               	addlw	2
  2508  03C8  00F8               	movwf	??_change+2
  2509  03C9  3000               	movlw	0
  2510  03CA  3D71               	addwfc	?i1___wmul+1,w
  2511  03CB  00F9               	movwf	??_change+3
  2512  03CC  3096               	movlw	150
  2513  03CD  00FA               	movwf	??_change+4
  2514  03CE  3023               	movlw	35
  2515  03CF  00FB               	movwf	??_change+5
  2516  03D0  0878               	movf	??_change+2,w
  2517  03D1  077A               	addwf	??_change+4,w
  2518  03D2  0086               	movwf	6
  2519  03D3  0879               	movf	??_change+3,w
  2520  03D4  3D7B               	addwfc	??_change+5,w
  2521  03D5  0087               	movwf	7
  2522  03D6  0801               	movf	1,w
  2523  03D7  0020               	movlb	0	; select bank0
  2524  03D8  008E               	movwf	14	;volatile
  2525                           
  2526                           ;ver0.0_20140727.c: 31: PORTD=putdata[ledcount][3];
  2527  03D9  087D               	movf	_ledcount,w
  2528  03DA  00F6               	movwf	??_change
  2529  03DB  01F7               	clrf	??_change+1
  2530  03DC  0876               	movf	??_change,w
  2531  03DD  00F0               	movwf	i1___wmul@multiplier
  2532  03DE  0877               	movf	??_change+1,w
  2533  03DF  00F1               	movwf	i1___wmul@multiplier+1
  2534  03E0  3005               	movlw	5
  2535  03E1  00F2               	movwf	i1___wmul@multiplicand
  2536  03E2  3000               	movlw	0
  2537  03E3  00F3               	movwf	i1___wmul@multiplicand+1
  2538  03E4  3184  24EE  3183   	fcall	i1___wmul
  2539  03E7  0870               	movf	?i1___wmul,w
  2540  03E8  3E03               	addlw	3
  2541  03E9  00F8               	movwf	??_change+2
  2542  03EA  3000               	movlw	0
  2543  03EB  3D71               	addwfc	?i1___wmul+1,w
  2544  03EC  00F9               	movwf	??_change+3
  2545  03ED  3096               	movlw	150
  2546  03EE  00FA               	movwf	??_change+4
  2547  03EF  3023               	movlw	35
  2548  03F0  00FB               	movwf	??_change+5
  2549  03F1  0878               	movf	??_change+2,w
  2550  03F2  077A               	addwf	??_change+4,w
  2551  03F3  0086               	movwf	6
  2552  03F4  0879               	movf	??_change+3,w
  2553  03F5  3D7B               	addwfc	??_change+5,w
  2554  03F6  0087               	movwf	7
  2555  03F7  0801               	movf	1,w
  2556  03F8  0020               	movlb	0	; select bank0
  2557  03F9  008F               	movwf	15	;volatile
  2558                           
  2559                           ;ver0.0_20140727.c: 32: PORTE=putdata[ledcount][4];
  2560  03FA  087D               	movf	_ledcount,w
  2561  03FB  00F6               	movwf	??_change
  2562  03FC  01F7               	clrf	??_change+1
  2563  03FD  0876               	movf	??_change,w
  2564  03FE  00F0               	movwf	i1___wmul@multiplier
  2565  03FF  0877               	movf	??_change+1,w
  2566  0400  00F1               	movwf	i1___wmul@multiplier+1
  2567  0401  3005               	movlw	5
  2568  0402  00F2               	movwf	i1___wmul@multiplicand
  2569  0403  3000               	movlw	0
  2570  0404  00F3               	movwf	i1___wmul@multiplicand+1
  2571  0405  3184  24EE  3183   	fcall	i1___wmul
  2572  0408  0870               	movf	?i1___wmul,w
  2573  0409  3E04               	addlw	4
  2574  040A  00F8               	movwf	??_change+2
  2575  040B  3000               	movlw	0
  2576  040C  3D71               	addwfc	?i1___wmul+1,w
  2577  040D  00F9               	movwf	??_change+3
  2578  040E  3096               	movlw	150
  2579  040F  00FA               	movwf	??_change+4
  2580  0410  3023               	movlw	35
  2581  0411  00FB               	movwf	??_change+5
  2582  0412  0878               	movf	??_change+2,w
  2583  0413  077A               	addwf	??_change+4,w
  2584  0414  0086               	movwf	6
  2585  0415  0879               	movf	??_change+3,w
  2586  0416  3D7B               	addwfc	??_change+5,w
  2587  0417  0087               	movwf	7
  2588  0418  0801               	movf	1,w
  2589  0419  0020               	movlb	0	; select bank0
  2590  041A  0090               	movwf	16	;volatile
  2591                           
  2592                           ;ver0.0_20140727.c: 34: if(ledcount==16)
  2593  041B  087D               	movf	_ledcount,w
  2594  041C  3A10               	xorlw	16
  2595  041D  1903               	btfsc	3,2
  2596                           
  2597                           ;ver0.0_20140727.c: 35: ledcount=0;
  2598  041E  01FD               	clrf	_ledcount
  2599                           
  2600                           ;ver0.0_20140727.c: 36: _delay((unsigned long)((500)*(32000000/4000.0)));
  2601  041F  3015               	movlw	21
  2602  0420  00F8               	movwf	??_change+2
  2603  0421  304B               	movlw	75
  2604  0422  00F7               	movwf	??_change+1
  2605  0423  30D1               	movlw	209
  2606  0424  00F6               	movwf	??_change
  2607  0425                     u95_27:	
  2608  0425  0BF6               	decfsz	??_change,f
  2609  0426  2C25               	goto	u95_27
  2610  0427  0BF7               	decfsz	??_change+1,f
  2611  0428  2C25               	goto	u95_27
  2612  0429  0BF8               	decfsz	??_change+2,f
  2613  042A  2C25               	goto	u95_27
  2614  042B  0000               	nop
  2615  042C  0008               	return
  2616  042D                     __end_of_change:	
  2617                           
  2618                           	psect	text8
  2619  04EE                     __ptext8:	
  2620 ;; *************** function i1___wmul *****************
  2621 ;; Defined at:
  2622 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  multiplier      2    0[COMMON] unsigned int 
  2625 ;;  multiplicand    2    2[COMMON] unsigned int 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  __wmul          2    4[COMMON] unsigned int 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  2    0[COMMON] unsigned int 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;Total ram usage:        6 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_change
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function i1___wmul
  2652  04EE                     i1___wmul:	
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2656  04EE  01F4               	clrf	i1___wmul@product
  2657  04EF  01F5               	clrf	i1___wmul@product+1
  2658  04F0                     i1l961:	
  2659  04F0  1C70               	btfss	i1___wmul@multiplier,0
  2660  04F1  2CF6               	goto	i1l266
  2661  04F2  0872               	movf	i1___wmul@multiplicand,w
  2662  04F3  07F4               	addwf	i1___wmul@product,f
  2663  04F4  0873               	movf	i1___wmul@multiplicand+1,w
  2664  04F5  3DF5               	addwfc	i1___wmul@product+1,f
  2665  04F6                     i1l266:	
  2666  04F6  3001               	movlw	1
  2667  04F7                     u60_25:	
  2668  04F7  35F2               	lslf	i1___wmul@multiplicand,f
  2669  04F8  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2670  04F9  0B89               	decfsz	9,f
  2671  04FA  2CF7               	goto	u60_25
  2672  04FB  3001               	movlw	1
  2673  04FC                     u61_25:	
  2674  04FC  36F1               	lsrf	i1___wmul@multiplier+1,f
  2675  04FD  0CF0               	rrf	i1___wmul@multiplier,f
  2676  04FE  0B89               	decfsz	9,f
  2677  04FF  2CFC               	goto	u61_25
  2678  0500  0871               	movf	i1___wmul@multiplier+1,w
  2679  0501  0470               	iorwf	i1___wmul@multiplier,w
  2680  0502  1D03               	skipz
  2681  0503  2CF0               	goto	i1l961
  2682  0504  0875               	movf	i1___wmul@product+1,w
  2683  0505  01F1               	clrf	?i1___wmul+1
  2684  0506  07F1               	addwf	?i1___wmul+1,f
  2685  0507  0874               	movf	i1___wmul@product,w
  2686  0508  01F0               	clrf	?i1___wmul
  2687  0509  07F0               	addwf	?i1___wmul,f
  2688  050A  0008               	return
  2689  050B                     __end_ofi1___wmul:	
  2690  007E                     btemp	set	126	;btemp
  2691  007E                     pic14e$flags	set	126
  2692  007E                     wtemp	set	126
  2693  007E                     wtemp0	set	126
  2694  0080                     wtemp1	set	128
  2695  0082                     wtemp2	set	130
  2696  0084                     wtemp3	set	132
  2697  0086                     wtemp4	set	134
  2698  0088                     wtemp5	set	136
  2699  007F                     wtemp6	set	127
  2700  007E                     ttemp	set	126
  2701  007E                     ttemp0	set	126
  2702  0081                     ttemp1	set	129
  2703  0084                     ttemp2	set	132
  2704  0087                     ttemp3	set	135
  2705  007F                     ttemp4	set	127
  2706  007E                     ltemp	set	126
  2707  007E                     ltemp0	set	126
  2708  0082                     ltemp1	set	130
  2709  0086                     ltemp2	set	134
  2710  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     70      72
    BANK1            80     70      70
    BANK2            80      0      48
    BANK3            80      0      48
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    _InterTimer->_change
    _change->i1___wmul

Critical Paths under _main in BANK0

    _main->_x2
    _x2->___awdiv

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               157   157      0    3994
                                             15 BANK0     55    55      0
                                              0 BANK1     70    70      0
                         _E2promRead
                             ___wmul
                             _setpin
                                 _x2
 ---------------------------------------------------------------------------------
 (1) _x2                                                   6     6      0     544
                                              9 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    2164
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           1     1      0     352
                                             12 COMMON     1     1      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               6     6      0     352
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   ___wmul
   _setpin
   _x2
     ___awdiv

 _InterTimer (ROOT)
   _change
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      30       9       60.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Sep  2 19:47:02 2014

            ?_E2promRead 0070              __CFG_CP$OFF 0000                       _RD 0CA8  
           ___awdiv@sign 0026                       _x2 0481      ___wmul@multiplicand 0022  
       i1___wmul@product 0074              __CFG_LVP$ON 0000                      ?_x2 0070  
                    l150 0222                      l142 0376                      l144 011F  
                    l154 02F2                      l155 033B                      l148 025D  
                    l157 0377                      l149 01D9                      l266 04D9  
                    l923 0438                      l941 0457                      l951 0472  
                    l929 0443                      l955 047A                      l947 0469  
                    l939 044B                      _GIE 005F             __CFG_CPD$OFF 0000  
                    u525 044E                      u720 005D                      u545 0458  
                    u555 0462                      u565 046A                      u805 00EE  
                    u815 0101                      u675 04DA                      u685 04DF  
                    u935 0343                      u855 0180                      u885 022A  
                    x2@i 002C                      _led 01A0             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_IESO$ON 0000                     ??_x2 0029  
            main@getdata 00A0                     l1031 04AC                     l1023 0488  
                   l1131 00E6                     l1123 00DC                     l1037 04D3  
                   l1029 049F                     l1117 00CC                     l1153 0125  
                   l1145 0117                     l1137 00EB                     l1091 0080  
                   l1169 0263                     l1097 00B3                     _LATD 010F  
                   _RCIF 008D                     _TMR0 0015                     _TRMT 0CF1  
                   _WPUB 020D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 004E              main@onetime 005F                     _time 0067  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   _stoc 0120                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 001A                     ttemp 007E  
                   wtemp 007E            __CFG_PLLEN$ON 0000                    ?_main 0070  
        __end_of___awdiv 0481                    _EEADR 0191            __CFG_WDTE$OFF 0000  
        ___awdiv@divisor 0020                    i1l124 0015                    i1l125 0016  
                  i1l266 04F6                    i1l961 04F0          ___awdiv@counter 0025  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PORTD 000F                    _PORTE 0010                    u60_25 04F7  
                  u61_25 04FC                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TRISD 008F                    _TRISE 0090  
                  u95_27 0425                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000                    x2@ret 002D                    x2@num 002E  
                  main@i 0065                    main@j 0064                    main@n 0062  
    __size_of_E2promRead 000F         __end_ofi1___wmul 050B                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
    i1___wmul@multiplier 0070                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 001C             __end_of_main 0378                   ??_main 002F  
             _InterTimer 0004                   _EEDATA 0193         ___awdiv@dividend 0022  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   _LCDCON 0791                   _LCDSE2 079A  
                 _OSCCON 0099                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISC6 0476                   _TRISC7 0477                   _nWPUEN 04AF  
                 ___wmul 04D0                ??___awdiv 0024           __CFG_STVREN$ON 0000  
                 _change 0378            main@resetFlug 0060         ___awdiv@quotient 0027  
                 _setpin 04AE            E2promRead@adr 0022  __end_of__initialization 004A  
         __pcstackCOMMON 0070             ??_E2promRead 0020               __end_of_x2 04AE  
            ?_InterTimer 0070                ?i1___wmul 0070           main@getKeeping 003E  
             __pbssBANK0 0066               __pbssBANK2 0120               __pbssBANK3 01A0  
             __pbssBANK4 0220       __end_of_E2promRead 051A          __CFG_VCAPEN$OFF 0000  
             __pmaintext 004E                  ?___wmul 0020                  ?_change 0070  
             __pintentry 0004                  _CCP1CON 0293                  _CCP2CON 029A  
                _BAUDCON 019F                  ?_setpin 0070               ??i1___wmul 0074  
                _CPSCON0 001E                  _CPSCON1 001F           main@individual 0061  
    __size_of_InterTimer 0016                  ___awdiv 042D          __size_of___wmul 001E  
        __size_of_change 00B5                  __ptext0 0000                  __ptext1 0481  
                __ptext2 042D                  __ptext3 04AE                  __ptext4 04D0  
                __ptext5 050B                  __ptext7 0378                  __ptext8 04EE  
        __size_of_setpin 0022                  _putdata 2396                  clrloop0 051B  
   end_of_initialization 004A    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
             main@getNum 005E           __end_of___wmul 04EE           __end_of_change 042D  
           ??_InterTimer 007C           __end_of_setpin 04D0      start_initialization 001C  
      __size_ofi1___wmul 001D       __end_of_InterTimer 001A                 ??___wmul 0024  
               ??_change 0076                 ??_setpin 0020              __pbssBIGRAM 2396  
            __pbssCOMMON 007D                ___latbits 0003            __pcstackBANK0 0020  
          __pcstackBANK1 00A0       main@gettingSuccess 0063                 ?___awdiv 0020  
            __size_of_x2 002D           ___wmul@product 0024                clear_ram0 051A  
              main@F3517 0220        ___wmul@multiplier 0020                 i1___wmul 04EE  
       __size_of___awdiv 0054                 _ledcount 007D            __size_of_main 032A  
             _E2promRead 050B             _reservingNow 0066              pic14e$flags 007E  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
