

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Aug 25 17:30:48 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0068                     _RB0	set	104
   570  0069                     _RB1	set	105
   571  006A                     _RB2	set	106
   572  006B                     _RB3	set	107
   573  006C                     _RB4	set	108
   574  006D                     _RB5	set	109
   575  006E                     _RB6	set	110
   576  006F                     _RB7	set	111
   577  0070                     _RC0	set	112
   578  0071                     _RC1	set	113
   579  0072                     _RC2	set	114
   580  0073                     _RC3	set	115
   581  008D                     _RCIF	set	141
   582  0080                     _RE0	set	128
   583  0081                     _RE1	set	129
   584  0082                     _RE2	set	130
   585  005D                     _TMR0IE	set	93
   586  005A                     _TMR0IF	set	90
   587  0095                     _OPTION_REG	set	149
   588  0099                     _OSCCON	set	153
   589  008C                     _TRISA	set	140
   590  008D                     _TRISB	set	141
   591  008E                     _TRISC	set	142
   592  008F                     _TRISD	set	143
   593  0090                     _TRISE	set	144
   594  0476                     _TRISC6	set	1142
   595  0477                     _TRISC7	set	1143
   596  04AF                     _nWPUEN	set	1199
   597  018C                     _ANSELA	set	396
   598  018D                     _ANSELB	set	397
   599  018F                     _ANSELD	set	399
   600  0190                     _ANSELE	set	400
   601  019F                     _BAUDCON	set	415
   602  0199                     _RCREG	set	409
   603  019D                     _RCSTA	set	413
   604  019B                     _SPBRG	set	411
   605  019A                     _TXREG	set	410
   606  019E                     _TXSTA	set	414
   607  0CF1                     _TRMT	set	3313
   608  020D                     _WPUB	set	525
   609                           
   610                           	psect	text0
   611  0000                     __ptext0:	
   612                           ; #config settings
   613                           
   614                           
   615                           ;psect for function _no0
   616  0000                     
   617                           	psect	cinit
   618  001F                     start_initialization:	
   619  001F                     __initialization:	
   620                           
   621                           ; Clear objects allocated to COMMON
   622  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   623                           
   624                           ; Clear objects allocated to BANK0
   625  0020  3020               	movlw	low __pbssBANK0
   626  0021  0084               	movwf	4
   627  0022  3000               	movlw	high __pbssBANK0
   628  0023  0085               	movwf	5
   629  0024  3030               	movlw	48
   630  0025  3182  22EC  3180   	fcall	clear_ram0
   631                           
   632                           ; Clear objects allocated to BANK1
   633  0028  30A0               	movlw	low __pbssBANK1
   634  0029  0084               	movwf	4
   635  002A  3000               	movlw	high __pbssBANK1
   636  002B  0085               	movwf	5
   637  002C  3030               	movlw	48
   638  002D  3182  22EC         	fcall	clear_ram0
   639  002F                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  002F                     __end_of__initialization:	
   643  002F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   644  0030  0020               	movlb	0
   645  0031  3180  2833         	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMMON
   648  0077                     __pbssCOMMON:	
   649  0077                     _time:	
   650  0077                     	ds	1
   651                           
   652                           	psect	bssBANK0
   653  0020                     __pbssBANK0:	
   654  0020                     _led:	
   655  0020                     	ds	48
   656                           
   657                           	psect	bssBANK1
   658  00A0                     __pbssBANK1:	
   659  00A0                     _stoc:	
   660  00A0                     	ds	48
   661                           
   662                           	psect	clrtext
   663  02EC                     clear_ram0:	
   664                           ;	Called with FSR0 containing the base address, and
   665                           ;	WREG with the size to clear
   666                           
   667  02EC  0064               	clrwdt	;clear the watchdog before getting into this loop
   668  02ED                     clrloop0:	
   669  02ED  0180               	clrf	0	;clear RAM location pointed to by FSR
   670  02EE  3101               	addfsr 0,1
   671  02EF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   672  02F0  2AED               	goto	clrloop0	;have we reached the end yet?
   673  02F1  3400               	retlw	0	;all done for this memory range, return
   674                           
   675                           	psect	cstackCOMMON
   676  0070                     __pcstackCOMMON:	
   677  0070                     ?_putch:	
   678  0070                     ??_putch:	
   679                           ; 0 bytes @ 0x0
   680                           
   681  0070                     ?_waitstart:	
   682                           ; 0 bytes @ 0x0
   683                           
   684  0070                     ?_setdata:	
   685                           ; 0 bytes @ 0x0
   686                           
   687  0070                     ?_no0:	
   688                           ; 0 bytes @ 0x0
   689                           
   690  0070                     ?_no1:	
   691                           ; 0 bytes @ 0x0
   692                           
   693  0070                     ?_no2:	
   694                           ; 0 bytes @ 0x0
   695                           
   696  0070                     ?_no3:	
   697                           ; 0 bytes @ 0x0
   698                           
   699  0070                     ?_noxinit:	
   700                           ; 0 bytes @ 0x0
   701                           
   702  0070                     ??_noxinit:	
   703                           ; 0 bytes @ 0x0
   704                           
   705  0070                     ?_setpin:	
   706                           ; 0 bytes @ 0x0
   707                           
   708  0070                     ?_changeLED:	
   709                           ; 0 bytes @ 0x0
   710                           
   711  0070                     ?_InterTimer:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ?_waitdelay:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_main:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ?_getch:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     putch@Data:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 1 bytes @ 0x0
   728  0070                     	ds	2
   729  0072                     ??_no0:	
   730  0072                     ??_no1:	
   731                           ; 0 bytes @ 0x2
   732                           
   733  0072                     ??_no2:	
   734                           ; 0 bytes @ 0x2
   735                           
   736  0072                     ??_no3:	
   737                           ; 0 bytes @ 0x2
   738                           
   739  0072                     ??_changeLED:	
   740                           ; 0 bytes @ 0x2
   741                           
   742                           
   743                           ; 0 bytes @ 0x2
   744  0072                     	ds	2
   745  0074                     ??_InterTimer:	
   746                           
   747                           ; 0 bytes @ 0x4
   748  0074                     	ds	2
   749  0076                     ??_waitstart:	
   750  0076                     ??_getch:	
   751                           ; 0 bytes @ 0x6
   752                           
   753  0076                     ??_countup:	
   754                           ; 0 bytes @ 0x6
   755                           
   756  0076                     ??_setpin:	
   757                           ; 0 bytes @ 0x6
   758                           
   759  0076                     ?___bmul:	
   760                           ; 0 bytes @ 0x6
   761                           
   762  0076                     waitstart@ch:	
   763                           ; 1 bytes @ 0x6
   764                           
   765  0076                     ___bmul@multiplicand:	
   766                           ; 1 bytes @ 0x6
   767                           
   768                           
   769                           ; 1 bytes @ 0x6
   770  0076                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773  0050                     __pcstackBANK0:	
   774  0050                     ??_waitdelay:	
   775  0050                     ??___bmul:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0050                     ?_countup:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0050                     countup@j:	
   782                           ; 2 bytes @ 0x0
   783                           
   784                           
   785                           ; 1 bytes @ 0x0
   786  0050                     	ds	1
   787  0051                     ___bmul@product:	
   788                           
   789                           ; 1 bytes @ 0x1
   790  0051                     	ds	1
   791  0052                     countup@i:	
   792  0052                     ___bmul@multiplier:	
   793                           ; 1 bytes @ 0x2
   794                           
   795                           
   796                           ; 1 bytes @ 0x2
   797  0052                     	ds	1
   798  0053                     ??_setdata:	
   799                           
   800                           ; 0 bytes @ 0x3
   801  0053                     	ds	5
   802  0058                     setdata@i:	
   803                           
   804                           ; 1 bytes @ 0x8
   805  0058                     	ds	1
   806  0059                     setdata@j:	
   807                           
   808                           ; 1 bytes @ 0x9
   809  0059                     	ds	1
   810  005A                     ??_main:	
   811                           
   812                           ; 0 bytes @ 0xA
   813  005A                     	ds	3
   814  005D                     main@stoclocal:	
   815                           
   816                           ; 1 bytes @ 0xD
   817  005D                     	ds	1
   818  005E                     main@j:	
   819                           
   820                           ; 1 bytes @ 0xE
   821  005E                     	ds	1
   822  005F                     main@i:	
   823                           
   824                           ; 1 bytes @ 0xF
   825  005F                     	ds	1
   826                           
   827                           	psect	maintext
   828  0033                     __pmaintext:	
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   831 ;;
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 57 in file "ver0.0_20140727.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  test           32    0        unsigned char [4][8]
   839 ;;  i               1   15[BANK0 ] unsigned char 
   840 ;;  j               1   14[BANK0 ] unsigned char 
   841 ;;  stoclocal       1   13[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 17F/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   855 ;;Total ram usage:        6 bytes
   856 ;; Hardware stack levels required when called:    5
   857 ;; This function calls:
   858 ;;		___bmul
   859 ;;		_countup
   860 ;;		_getch
   861 ;;		_setdata
   862 ;;		_setpin
   863 ;;		_waitdelay
   864 ;;		_waitstart
   865 ;; This function is called by:
   866 ;;		Startup code after reset
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _main
   872  0033                     _main:	
   873                           
   874                           ;ver0.0_20140727.c: 59: char i=1,j;
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   878  0033  0020               	movlb	0	; select bank0
   879  0034  01DF               	clrf	main@i
   880  0035  0ADF               	incf	main@i,f
   881                           
   882                           ;ver0.0_20140727.c: 60: unsigned char stoclocal;
   883                           ;ver0.0_20140727.c: 61: char test[8][4];
   884                           ;ver0.0_20140727.c: 62: setpin();
   885  0036  3182  2291  3180   	fcall	_setpin
   886                           
   887                           ;ver0.0_20140727.c: 63: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   888  0039  0021               	movlb	1	; select bank1
   889  003A  178E               	bsf	14,7	;volatile
   890  003B  130E               	bcf	14,6	;volatile
   891  003C  3033               	movlw	51
   892  003D  0023               	movlb	3	; select bank3
   893  003E  009B               	movwf	27	;volatile
   894  003F  3090               	movlw	144
   895  0040  009D               	movwf	29	;volatile
   896  0041  3024               	movlw	36
   897  0042  009E               	movwf	30	;volatile
   898  0043  019F               	clrf	31	;volatile
   899                           
   900                           ;ver0.0_20140727.c: 65: OPTION_REG = 0b00000110 ;
   901  0044  3006               	movlw	6
   902  0045  0021               	movlb	1	; select bank1
   903  0046  0095               	movwf	21	;volatile
   904                           
   905                           ;ver0.0_20140727.c: 66: TMR0 = 61 ;
   906  0047  303D               	movlw	61
   907  0048  0020               	movlb	0	; select bank0
   908  0049  0095               	movwf	21	;volatile
   909                           
   910                           ;ver0.0_20140727.c: 67: TMR0IF = 0 ;
   911  004A  110B               	bcf	11,2	;volatile
   912                           
   913                           ;ver0.0_20140727.c: 68: time = 0 ;
   914  004B  01F7               	clrf	_time
   915                           
   916                           ;ver0.0_20140727.c: 69: TMR0IE = 1 ;
   917  004C  168B               	bsf	11,5	;volatile
   918                           
   919                           ;ver0.0_20140727.c: 70: WPUB = 0xC0;
   920  004D  30C0               	movlw	192
   921  004E  0024               	movlb	4	; select bank4
   922  004F  008D               	movwf	13	;volatile
   923                           
   924                           ;ver0.0_20140727.c: 71: nWPUEN = 0;
   925  0050  0021               	movlb	1	; select bank1
   926  0051  1395               	bcf	21,7	;volatile
   927                           
   928                           ;ver0.0_20140727.c: 72: GIE = 0 ;
   929  0052  138B               	bcf	11,7	;volatile
   930                           
   931                           ;ver0.0_20140727.c: 73: RA1=1;
   932  0053  0020               	movlb	0	; select bank0
   933  0054  148C               	bsf	12,1	;volatile
   934                           
   935                           ;ver0.0_20140727.c: 74: RA2=1;
   936  0055  150C               	bsf	12,2	;volatile
   937                           
   938                           ;ver0.0_20140727.c: 75: RA3=1;
   939  0056  158C               	bsf	12,3	;volatile
   940                           
   941                           ;ver0.0_20140727.c: 76: RA4=1;
   942  0057  160C               	bsf	12,4	;volatile
   943                           
   944                           ;ver0.0_20140727.c: 77: RA5=1;
   945  0058  168C               	bsf	12,5	;volatile
   946                           
   947                           ;ver0.0_20140727.c: 78: RB0=1;
   948  0059  140D               	bsf	13,0	;volatile
   949                           
   950                           ;ver0.0_20140727.c: 79: RB1=1;
   951  005A  148D               	bsf	13,1	;volatile
   952                           
   953                           ;ver0.0_20140727.c: 80: RB2=1;
   954  005B  150D               	bsf	13,2	;volatile
   955                           
   956                           ;ver0.0_20140727.c: 81: RB3=1;
   957  005C  158D               	bsf	13,3	;volatile
   958                           
   959                           ;ver0.0_20140727.c: 82: RB4=1;
   960  005D  160D               	bsf	13,4	;volatile
   961                           
   962                           ;ver0.0_20140727.c: 83: RB5=1;
   963  005E  168D               	bsf	13,5	;volatile
   964                           
   965                           ;ver0.0_20140727.c: 84: RB6=1;
   966  005F  170D               	bsf	13,6	;volatile
   967                           
   968                           ;ver0.0_20140727.c: 85: RB7=1;
   969  0060  178D               	bsf	13,7	;volatile
   970                           
   971                           ;ver0.0_20140727.c: 86: RE0=1;
   972  0061  1410               	bsf	16,0	;volatile
   973                           
   974                           ;ver0.0_20140727.c: 87: RE1=1;
   975  0062  1490               	bsf	16,1	;volatile
   976                           
   977                           ;ver0.0_20140727.c: 88: RE2=1;
   978  0063  1510               	bsf	16,2	;volatile
   979                           
   980                           ;ver0.0_20140727.c: 90: PORTA=0xFF;
   981  0064  30FF               	movlw	255
   982  0065  008C               	movwf	12	;volatile
   983                           
   984                           ;ver0.0_20140727.c: 91: PORTB=0xFF;
   985  0066  30FF               	movlw	255
   986  0067  008D               	movwf	13	;volatile
   987                           
   988                           ;ver0.0_20140727.c: 92: PORTC=0xFF;
   989  0068  30FF               	movlw	255
   990  0069  008E               	movwf	14	;volatile
   991                           
   992                           ;ver0.0_20140727.c: 93: PORTD=0xFF;
   993  006A  30FF               	movlw	255
   994  006B  008F               	movwf	15	;volatile
   995                           
   996                           ;ver0.0_20140727.c: 94: PORTE=0xFF;
   997  006C  30FF               	movlw	255
   998  006D  0090               	movwf	16	;volatile
   999                           
  1000                           ;ver0.0_20140727.c: 95: PORTB=0x00;
  1001  006E  018D               	clrf	13	;volatile
  1002                           
  1003                           ;ver0.0_20140727.c: 103: ANSELD=0x00;
  1004  006F  0023               	movlb	3	; select bank3
  1005  0070  018F               	clrf	15	;volatile
  1006                           
  1007                           ;ver0.0_20140727.c: 106: switch(i){
  1008                           
  1009                           ;ver0.0_20140727.c: 104: while(1){
  1010  0071  2893               	goto	l1649
  1011  0072                     l250:	
  1012                           ;ver0.0_20140727.c: 107: case 1:RB7=1; break;
  1013                           
  1014  0072  178D               	bsf	13,7	;volatile
  1015  0073  2889               	goto	l1651
  1016  0074                     l252:	
  1017                           ;ver0.0_20140727.c: 108: case 3:RB6=1; break;
  1018                           
  1019  0074  170D               	bsf	13,6	;volatile
  1020  0075  2889               	goto	l1651
  1021  0076                     l253:	
  1022                           ;ver0.0_20140727.c: 109: case 5:RB5=1; break;
  1023                           
  1024  0076  168D               	bsf	13,5	;volatile
  1025  0077  2889               	goto	l1651
  1026  0078                     l254:	
  1027                           ;ver0.0_20140727.c: 110: case 7:RB4=1; break;
  1028                           
  1029  0078  160D               	bsf	13,4	;volatile
  1030  0079  2889               	goto	l1651
  1031  007A                     l255:	
  1032                           ;ver0.0_20140727.c: 111: case 9:RB3=1; break;
  1033                           
  1034  007A  158D               	bsf	13,3	;volatile
  1035  007B  2889               	goto	l1651
  1036  007C                     l256:	
  1037                           ;ver0.0_20140727.c: 112: case 11:RB2=1; break;
  1038                           
  1039  007C  150D               	bsf	13,2	;volatile
  1040  007D  2889               	goto	l1651
  1041  007E                     l257:	
  1042                           ;ver0.0_20140727.c: 113: case 13:RB1=1; break;
  1043                           
  1044  007E  148D               	bsf	13,1	;volatile
  1045  007F  2889               	goto	l1651
  1046  0080                     l258:	
  1047                           ;ver0.0_20140727.c: 114: case 15:RB0=1; break;
  1048                           
  1049  0080  140D               	bsf	13,0	;volatile
  1050  0081  2889               	goto	l1651
  1051  0082                     l1639:	
  1052                           ;ver0.0_20140727.c: 115: case 16:i=0;PORTB=0x00;PORTD=0b00111111;break;
  1053                           
  1054  0082  01DF               	clrf	main@i
  1055  0083  018D               	clrf	13	;volatile
  1056  0084  303F               	movlw	63
  1057  0085  2888               	goto	L1
  1058  0086                     l1643:	
  1059                           ;ver0.0_20140727.c: 116: default:PORTB=0x00;PORTD=0x0b00011111;break;
  1060                           
  1061  0086  018D               	clrf	13	;volatile
  1062  0087  3011               	movlw	17
  1063  0088                     L1:	
  1064  0088  008F               	movwf	15	;volatile
  1065  0089                     l1651:	
  1066                           ;ver0.0_20140727.c: 117: }
  1067                           
  1068                           
  1069                           ;ver0.0_20140727.c: 118: waitdelay();
  1070  0089  3182  22CB  3180   	fcall	_waitdelay
  1071                           
  1072                           ;ver0.0_20140727.c: 119: PORTD=0b00001111;
  1073  008C  300F               	movlw	15
  1074  008D  0020               	movlb	0	; select bank0
  1075  008E  008F               	movwf	15	;volatile
  1076                           
  1077                           ;ver0.0_20140727.c: 120: i++;
  1078  008F  3001               	movlw	1
  1079  0090  00DA               	movwf	??_main
  1080  0091  085A               	movf	??_main,w
  1081  0092  07DF               	addwf	main@i,f
  1082  0093                     l1649:	
  1083  0093  0020               	movlb	0	; select bank0
  1084  0094  085F               	movf	main@i,w
  1085                           
  1086                           ; Switch size 1, requested type "space"
  1087                           ; Number of cases is 9, Range of values is 1 to 16
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte           28    15 (average)
  1091                           ; direct_byte           41     9 (fixed)
  1092                           ; jumptable            263     9 (fixed)
  1093                           ;	Chosen strategy is simple_byte
  1094  0095  3A01               	xorlw	1	; case 1
  1095  0096  1903               	skipnz
  1096  0097  2872               	goto	l250
  1097  0098  3A02               	xorlw	2	; case 3
  1098  0099  1903               	skipnz
  1099  009A  2874               	goto	l252
  1100  009B  3A06               	xorlw	6	; case 5
  1101  009C  1903               	skipnz
  1102  009D  2876               	goto	l253
  1103  009E  3A02               	xorlw	2	; case 7
  1104  009F  1903               	skipnz
  1105  00A0  2878               	goto	l254
  1106  00A1  3A0E               	xorlw	14	; case 9
  1107  00A2  1903               	skipnz
  1108  00A3  287A               	goto	l255
  1109  00A4  3A02               	xorlw	2	; case 11
  1110  00A5  1903               	skipnz
  1111  00A6  287C               	goto	l256
  1112  00A7  3A06               	xorlw	6	; case 13
  1113  00A8  1903               	skipnz
  1114  00A9  287E               	goto	l257
  1115  00AA  3A02               	xorlw	2	; case 15
  1116  00AB  1903               	skipnz
  1117  00AC  2880               	goto	l258
  1118  00AD  3A1F               	xorlw	31	; case 16
  1119  00AE  1903               	skipnz
  1120  00AF  2882               	goto	l1639
  1121  00B0  2886               	goto	l1643
  1122  00B1  2889               	goto	l1651
  1123  00B2                     l1657:	
  1124                           ;ver0.0_20140727.c: 121: }
  1125                           ;ver0.0_20140727.c: 136: while(1) {
  1126                           
  1127                           
  1128                           ;ver0.0_20140727.c: 137: waitstart();
  1129  00B2  3182  2278  3180   	fcall	_waitstart
  1130                           
  1131                           ;ver0.0_20140727.c: 138: for(i=0;i<16;i++){
  1132  00B5  0020               	movlb	0	; select bank0
  1133  00B6  01DF               	clrf	main@i
  1134  00B7  3010               	movlw	16
  1135  00B8  025F               	subwf	main@i,w
  1136  00B9  1803               	btfsc	3,0
  1137  00BA  292A               	goto	l1693
  1138  00BB                     l1665:	
  1139                           
  1140                           ;ver0.0_20140727.c: 139: for(j=0;j<3;j++){
  1141  00BB  01DE               	clrf	main@j
  1142  00BC  3003               	movlw	3
  1143  00BD  025E               	subwf	main@j,w
  1144  00BE  1803               	btfsc	3,0
  1145  00BF  2922               	goto	l1689
  1146  00C0                     l1671:	
  1147                           
  1148                           ;ver0.0_20140727.c: 140: if((stoclocal=getch())==0x0D){
  1149  00C0  3182  22DE  3180   	fcall	_getch
  1150  00C3  0020               	movlb	0	; select bank0
  1151  00C4  00DA               	movwf	??_main
  1152  00C5  085A               	movf	??_main,w
  1153  00C6  00DD               	movwf	main@stoclocal
  1154  00C7  085D               	movf	main@stoclocal,w
  1155  00C8  3A0D               	xorlw	13
  1156  00C9  1D03               	skipz
  1157  00CA  2906               	goto	l1683
  1158                           
  1159                           ;ver0.0_20140727.c: 141: stoc[i][j]=0x0D;
  1160  00CB  300D               	movlw	13
  1161  00CC  00DA               	movwf	??_main
  1162  00CD  3003               	movlw	3
  1163  00CE  00DB               	movwf	??_main+1
  1164  00CF  085B               	movf	??_main+1,w
  1165  00D0  00F6               	movwf	___bmul@multiplicand
  1166  00D1  085F               	movf	main@i,w
  1167  00D2  3182  22A9  3180   	fcall	___bmul
  1168  00D5  3EA0               	addlw	_stoc& (0+255)
  1169  00D6  0020               	movlb	0	; select bank0
  1170  00D7  075E               	addwf	main@j,w
  1171  00D8  00DC               	movwf	??_main+2
  1172  00D9  085C               	movf	??_main+2,w
  1173  00DA  0086               	movwf	6
  1174  00DB  0187               	clrf	7
  1175  00DC  085A               	movf	??_main,w
  1176  00DD  0081               	movwf	1
  1177                           
  1178                           ;ver0.0_20140727.c: 142: if(countup(&i,&j));
  1179  00DE  305E               	movlw	main@j& (0+255)
  1180  00DF  00DA               	movwf	??_main
  1181  00E0  085A               	movf	??_main,w
  1182  00E1  00D0               	movwf	countup@j
  1183  00E2  305F               	movlw	main@i& (0+255)
  1184  00E3  3182  224A  3180   	fcall	_countup
  1185  00E6  0020               	movlb	0	; select bank0
  1186  00E7  0851               	movf	?_countup+1,w
  1187  00E8  0450               	iorwf	?_countup,w
  1188  00E9  1D03               	btfss	3,2
  1189  00EA  2919               	goto	l1685
  1190                           
  1191                           ;ver0.0_20140727.c: 143: else if((stoclocal=getch())==0x0A){
  1192  00EB  3182  22DE  3180   	fcall	_getch
  1193  00EE  0020               	movlb	0	; select bank0
  1194  00EF  00DA               	movwf	??_main
  1195  00F0  085A               	movf	??_main,w
  1196  00F1  00DD               	movwf	main@stoclocal
  1197  00F2  085D               	movf	main@stoclocal,w
  1198  00F3  3A0A               	xorlw	10
  1199  00F4  1D03               	skipz
  1200  00F5  2919               	goto	l1685
  1201                           
  1202                           ;ver0.0_20140727.c: 144: if(0xDD!=getch()){
  1203  00F6  3182  22DE  3180   	fcall	_getch
  1204  00F9  3ADD               	xorlw	221
  1205  00FA  1903               	skipnz
  1206  00FB  2919               	goto	l1685
  1207                           
  1208                           ;ver0.0_20140727.c: 145: i=16;
  1209  00FC  3010               	movlw	16
  1210  00FD  0020               	movlb	0	; select bank0
  1211  00FE  00DA               	movwf	??_main
  1212  00FF  085A               	movf	??_main,w
  1213  0100  00DF               	movwf	main@i
  1214                           
  1215                           ;ver0.0_20140727.c: 146: j=3;
  1216  0101  3003               	movlw	3
  1217  0102  00DA               	movwf	??_main
  1218  0103  085A               	movf	??_main,w
  1219  0104  00DE               	movwf	main@j
  1220                           
  1221                           ;ver0.0_20140727.c: 150: }
  1222                           ;ver0.0_20140727.c: 151: }
  1223                           
  1224                           ;ver0.0_20140727.c: 147: }
  1225                           ;ver0.0_20140727.c: 148: }else{
  1226  0105  2919               	goto	l1685
  1227  0106                     l1683:	
  1228                           
  1229                           ;ver0.0_20140727.c: 152: else
  1230                           ;ver0.0_20140727.c: 153: stoc[i][j]=stoclocal;
  1231  0106  085D               	movf	main@stoclocal,w
  1232  0107  00DA               	movwf	??_main
  1233  0108  3003               	movlw	3
  1234  0109  00DB               	movwf	??_main+1
  1235  010A  085B               	movf	??_main+1,w
  1236  010B  00F6               	movwf	___bmul@multiplicand
  1237  010C  085F               	movf	main@i,w
  1238  010D  3182  22A9  3180   	fcall	___bmul
  1239  0110  3EA0               	addlw	_stoc& (0+255)
  1240  0111  0020               	movlb	0	; select bank0
  1241  0112  075E               	addwf	main@j,w
  1242  0113  00DC               	movwf	??_main+2
  1243  0114  085C               	movf	??_main+2,w
  1244  0115  0086               	movwf	6
  1245  0116  0187               	clrf	7
  1246  0117  085A               	movf	??_main,w
  1247  0118  0081               	movwf	1
  1248  0119                     l1685:	
  1249  0119  3001               	movlw	1
  1250  011A  0020               	movlb	0	; select bank0
  1251  011B  00DA               	movwf	??_main
  1252  011C  085A               	movf	??_main,w
  1253  011D  07DE               	addwf	main@j,f
  1254  011E  3003               	movlw	3
  1255  011F  025E               	subwf	main@j,w
  1256  0120  1C03               	skipc
  1257  0121  28C0               	goto	l1671
  1258  0122                     l1689:	
  1259  0122  3001               	movlw	1
  1260  0123  00DA               	movwf	??_main
  1261  0124  085A               	movf	??_main,w
  1262  0125  07DF               	addwf	main@i,f
  1263  0126  3010               	movlw	16
  1264  0127  025F               	subwf	main@i,w
  1265  0128  1C03               	skipc
  1266  0129  28BB               	goto	l1665
  1267  012A                     l1693:	
  1268                           
  1269                           ;ver0.0_20140727.c: 154: }
  1270                           ;ver0.0_20140727.c: 155: }
  1271                           ;ver0.0_20140727.c: 156: if(i>16);
  1272  012A  3011               	movlw	17
  1273  012B  025F               	subwf	main@i,w
  1274  012C  1803               	btfsc	3,0
  1275  012D  28B2               	goto	l1657
  1276                           
  1277                           ;ver0.0_20140727.c: 157: else{
  1278                           ;ver0.0_20140727.c: 158: if(0x0D==getch()){
  1279  012E  3182  22DE  3180   	fcall	_getch
  1280  0131  3A0D               	xorlw	13
  1281  0132  1D03               	skipz
  1282  0133  28B2               	goto	l1657
  1283                           
  1284                           ;ver0.0_20140727.c: 159: if(0x0A==getch()){
  1285  0134  3182  22DE  3180   	fcall	_getch
  1286  0137  3A0A               	xorlw	10
  1287  0138  1D03               	skipz
  1288  0139  28B2               	goto	l1657
  1289                           
  1290                           ;ver0.0_20140727.c: 160: if(0xDD!=getch())
  1291  013A  3182  22DE  3180   	fcall	_getch
  1292  013D  3ADD               	xorlw	221
  1293  013E  1903               	skipnz
  1294  013F  28B2               	goto	l1657
  1295                           
  1296                           ;ver0.0_20140727.c: 161: setdata();
  1297  0140  3181  2144  3180   	fcall	_setdata
  1298  0143  28B2               	goto	l1657
  1299  0144                     __end_of_main:	
  1300                           
  1301                           	psect	text1
  1302  0278                     __ptext1:	
  1303 ;; *************** function _waitstart *****************
  1304 ;; Defined at:
  1305 ;;		line 189 in file "ver0.0_20140727.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  ch              1    6[COMMON] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, pclath, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    4
  1326 ;; This function calls:
  1327 ;;		_getch
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _waitstart
  1335  0278                     _waitstart:	
  1336                           
  1337                           ;ver0.0_20140727.c: 190: char ch=1;
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _waitstart: [wreg+status,2+status,0+pclath+cstack]
  1341  0278  01F6               	clrf	waitstart@ch
  1342  0279  0AF6               	incf	waitstart@ch,f
  1343  027A                     l1305:	
  1344                           ;ver0.0_20140727.c: 192: while(getch()==0xFF);
  1345                           
  1346                           ;ver0.0_20140727.c: 191: do{
  1347                           
  1348  027A  3182  22DE  3182   	fcall	_getch
  1349  027D  3AFF               	xorlw	255
  1350  027E  1903               	skipnz
  1351  027F  2A7A               	goto	l1305
  1352                           
  1353                           ;ver0.0_20140727.c: 193: if(0x53==getch()){
  1354  0280  3182  22DE  3182   	fcall	_getch
  1355  0283  3A53               	xorlw	83
  1356  0284  1D03               	skipz
  1357  0285  2A8D               	goto	l1313
  1358                           
  1359                           ;ver0.0_20140727.c: 194: if(0x54==getch())
  1360  0286  3182  22DE  3182   	fcall	_getch
  1361  0289  3A54               	xorlw	84
  1362  028A  1D03               	skipz
  1363  028B  2A8D               	goto	l1313
  1364                           
  1365                           ;ver0.0_20140727.c: 195: ch=0;
  1366  028C  01F6               	clrf	waitstart@ch
  1367  028D                     l1313:	
  1368                           
  1369                           ;ver0.0_20140727.c: 196: }
  1370                           ;ver0.0_20140727.c: 197: }while(ch);
  1371  028D  08F6               	movf	waitstart@ch,f
  1372  028E  1903               	btfsc	3,2
  1373  028F  0008               	return
  1374  0290  2A7A               	goto	l1305
  1375  0291                     __end_of_waitstart:	
  1376                           
  1377                           	psect	text2
  1378  02DE                     __ptext2:	
  1379 ;; *************** function _getch *****************
  1380 ;; Defined at:
  1381 ;;		line 9 in file "uart.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    3
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;;		_waitstart
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _getch
  1412  02DE                     _getch:	
  1413  02DE                     l323:	
  1414                           ;uart.c: 10: while(!RCIF){}
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _getch: [wreg]
  1418                           
  1419  02DE  0020               	movlb	0	; select bank0
  1420  02DF  1E91               	btfss	17,5	;volatile
  1421  02E0  2ADE               	goto	l323
  1422                           
  1423                           ;uart.c: 11: RCIF=0;
  1424  02E1  1291               	bcf	17,5	;volatile
  1425                           
  1426                           ;uart.c: 12: return RCREG;
  1427  02E2  0023               	movlb	3	; select bank3
  1428  02E3  0819               	movf	25,w	;volatile
  1429  02E4  0008               	return
  1430  02E5                     __end_of_getch:	
  1431                           
  1432                           	psect	text3
  1433  02CB                     __ptext3:	
  1434 ;; *************** function _waitdelay *****************
  1435 ;; Defined at:
  1436 ;;		line 54 in file "ver0.0_20140727.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    3
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _waitdelay
  1466  02CB                     _waitdelay:	
  1467                           
  1468                           ;ver0.0_20140727.c: 55: _delay((unsigned long)((1)*(32000000/4000.0)));
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _waitdelay: [wreg]
  1472  02CB  300B               	movlw	11
  1473  02CC  0020               	movlb	0	; select bank0
  1474  02CD  00D1               	movwf	??_waitdelay+1
  1475  02CE  3062               	movlw	98
  1476  02CF  00D0               	movwf	??_waitdelay
  1477  02D0                     u1227:	
  1478  02D0  0BD0               	decfsz	??_waitdelay,f
  1479  02D1  2AD0               	goto	u1227
  1480  02D2  0BD1               	decfsz	??_waitdelay+1,f
  1481  02D3  2AD0               	goto	u1227
  1482  02D4  0000               	nop
  1483  02D5  0008               	return
  1484  02D6                     __end_of_waitdelay:	
  1485                           
  1486                           	psect	text4
  1487  0291                     __ptext4:	
  1488 ;; *************** function _setpin *****************
  1489 ;; Defined at:
  1490 ;;		line 62 in file "sorce.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;		None               void
  1497 ;; Registers used:
  1498 ;;		wreg, status,2
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    3
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           
  1519                           ;psect for function _setpin
  1520  0291                     _setpin:	
  1521                           
  1522                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1523                           
  1524                           ;incstack = 0
  1525                           ; Regs used in _setpin: [wreg+status,2]
  1526  0291  3070               	movlw	112
  1527  0292  0021               	movlb	1	; select bank1
  1528  0293  0099               	movwf	25	;volatile
  1529                           
  1530                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1531  0294  0023               	movlb	3	; select bank3
  1532  0295  018C               	clrf	12	;volatile
  1533                           
  1534                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1535  0296  018D               	clrf	13	;volatile
  1536                           
  1537                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1538  0297  018F               	clrf	15	;volatile
  1539                           
  1540                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1541  0298  0190               	clrf	16	;volatile
  1542                           
  1543                           ;sorce.c: 69: TRISA = 0b00000000 ;
  1544  0299  0021               	movlb	1	; select bank1
  1545  029A  018C               	clrf	12	;volatile
  1546                           
  1547                           ;sorce.c: 70: TRISB = 0b00000000 ;
  1548  029B  018D               	clrf	13	;volatile
  1549                           
  1550                           ;sorce.c: 71: TRISC = 0b10110000 ;
  1551  029C  30B0               	movlw	176
  1552  029D  008E               	movwf	14	;volatile
  1553                           
  1554                           ;sorce.c: 72: TRISD = 0b00001100 ;
  1555  029E  300C               	movlw	12
  1556  029F  008F               	movwf	15	;volatile
  1557                           
  1558                           ;sorce.c: 73: TRISE = 0X00 ;
  1559  02A0  0190               	clrf	16	;volatile
  1560                           
  1561                           ;sorce.c: 75: PORTA = 0b00000000 ;
  1562  02A1  0020               	movlb	0	; select bank0
  1563  02A2  018C               	clrf	12	;volatile
  1564                           
  1565                           ;sorce.c: 76: PORTB = 0b00000000 ;
  1566  02A3  018D               	clrf	13	;volatile
  1567                           
  1568                           ;sorce.c: 77: PORTC = 0b10000000 ;
  1569  02A4  3080               	movlw	128
  1570  02A5  008E               	movwf	14	;volatile
  1571                           
  1572                           ;sorce.c: 78: PORTD = 0b00000000 ;
  1573  02A6  018F               	clrf	15	;volatile
  1574                           
  1575                           ;sorce.c: 79: PORTE=0x00;
  1576  02A7  0190               	clrf	16	;volatile
  1577  02A8  0008               	return
  1578  02A9                     __end_of_setpin:	
  1579                           
  1580                           	psect	text5
  1581  0144                     __ptext5:	
  1582 ;; *************** function _setdata *****************
  1583 ;; Defined at:
  1584 ;;		line 182 in file "ver0.0_20140727.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;		None
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  j               1    9[BANK0 ] unsigned char 
  1589 ;;  i               1    8[BANK0 ] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1601 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1602 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1603 ;;Total ram usage:        7 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    4
  1606 ;; This function calls:
  1607 ;;		___bmul
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _setdata
  1615  0144                     _setdata:	
  1616                           
  1617                           ;ver0.0_20140727.c: 183: char i,j;
  1618                           ;ver0.0_20140727.c: 184: for(i=0;i<16;i++){
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _setdata: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1622  0144  0020               	movlb	0	; select bank0
  1623  0145  01D8               	clrf	setdata@i
  1624  0146                     L2:	
  1625  0146  3010               	movlw	16
  1626  0147  0258               	subwf	setdata@i,w
  1627  0148  1803               	btfsc	3,0
  1628  0149  0008               	return
  1629                           
  1630                           ;ver0.0_20140727.c: 185: for(j=0;j<3;j++)
  1631  014A  01D9               	clrf	setdata@j
  1632  014B  3003               	movlw	3
  1633  014C  0259               	subwf	setdata@j,w
  1634  014D  1803               	btfsc	3,0
  1635  014E  2979               	goto	l1557
  1636  014F                     l1551:	
  1637                           
  1638                           ;ver0.0_20140727.c: 186: led[i][j]=stoc[i][j];
  1639  014F  3003               	movlw	3
  1640  0150  00D3               	movwf	??_setdata
  1641  0151  0853               	movf	??_setdata,w
  1642  0152  00F6               	movwf	___bmul@multiplicand
  1643  0153  0858               	movf	setdata@i,w
  1644  0154  3182  22A9  3181   	fcall	___bmul
  1645  0157  3EA0               	addlw	_stoc& (0+255)
  1646  0158  0020               	movlb	0	; select bank0
  1647  0159  0759               	addwf	setdata@j,w
  1648  015A  00D4               	movwf	??_setdata+1
  1649  015B  0854               	movf	??_setdata+1,w
  1650  015C  0086               	movwf	6
  1651  015D  0187               	clrf	7
  1652  015E  0801               	movf	1,w
  1653  015F  00D5               	movwf	??_setdata+2
  1654  0160  3003               	movlw	3
  1655  0161  00D6               	movwf	??_setdata+3
  1656  0162  0856               	movf	??_setdata+3,w
  1657  0163  00F6               	movwf	___bmul@multiplicand
  1658  0164  0858               	movf	setdata@i,w
  1659  0165  3182  22A9  3181   	fcall	___bmul
  1660  0168  3E20               	addlw	_led& (0+255)
  1661  0169  0020               	movlb	0	; select bank0
  1662  016A  0759               	addwf	setdata@j,w
  1663  016B  00D7               	movwf	??_setdata+4
  1664  016C  0857               	movf	??_setdata+4,w
  1665  016D  0086               	movwf	6
  1666  016E  0187               	clrf	7
  1667  016F  0855               	movf	??_setdata+2,w
  1668  0170  0081               	movwf	1
  1669  0171  3001               	movlw	1
  1670  0172  00D3               	movwf	??_setdata
  1671  0173  0853               	movf	??_setdata,w
  1672  0174  07D9               	addwf	setdata@j,f
  1673  0175  3003               	movlw	3
  1674  0176  0259               	subwf	setdata@j,w
  1675  0177  1C03               	skipc
  1676  0178  294F               	goto	l1551
  1677  0179                     l1557:	
  1678  0179  3001               	movlw	1
  1679  017A  00D3               	movwf	??_setdata
  1680  017B  0853               	movf	??_setdata,w
  1681  017C  07D8               	addwf	setdata@i,f
  1682  017D  2946               	goto	L2
  1683  017E                     __end_of_setdata:	
  1684                           
  1685                           	psect	text6
  1686  02A9                     __ptext6:	
  1687 ;; *************** function ___bmul *****************
  1688 ;; Defined at:
  1689 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul8.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  multiplier      1    wreg     unsigned char 
  1692 ;;  multiplicand    1    6[COMMON] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1695 ;;  product         1    1[BANK0 ] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1705 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;Total ram usage:        4 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    3
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;;		_setdata
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function ___bmul
  1722  02A9                     ___bmul:	
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1726                           ;___bmul@multiplier stored from wreg
  1727  02A9  0020               	movlb	0	; select bank0
  1728  02AA  00D2               	movwf	___bmul@multiplier
  1729  02AB  01D1               	clrf	___bmul@product
  1730  02AC                     l1503:	
  1731  02AC  1C52               	btfss	___bmul@multiplier,0
  1732  02AD  2AB2               	goto	l1507
  1733  02AE  0876               	movf	___bmul@multiplicand,w
  1734  02AF  00D0               	movwf	??___bmul
  1735  02B0  0850               	movf	??___bmul,w
  1736  02B1  07D1               	addwf	___bmul@product,f
  1737  02B2                     l1507:	
  1738  02B2  1003               	clrc
  1739  02B3  0DF6               	rlf	___bmul@multiplicand,f
  1740  02B4  1003               	clrc
  1741  02B5  0CD2               	rrf	___bmul@multiplier,f
  1742  02B6  08D2               	movf	___bmul@multiplier,f
  1743  02B7  1D03               	skipz
  1744  02B8  2AAC               	goto	l1503
  1745  02B9  0851               	movf	___bmul@product,w
  1746  02BA  0008               	return
  1747  02BB                     __end_of___bmul:	
  1748                           
  1749                           	psect	text7
  1750  024A                     __ptext7:	
  1751 ;; *************** function _countup *****************
  1752 ;; Defined at:
  1753 ;;		line 167 in file "ver0.0_20140727.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  i               1    wreg     PTR unsigned char 
  1756 ;;		 -> main@i(1), 
  1757 ;;  j               1    0[BANK0 ] PTR unsigned char 
  1758 ;;		 -> main@j(1), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  i               1    2[BANK0 ] PTR unsigned char 
  1761 ;;		 -> main@i(1), 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    0[BANK0 ] int 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1775 ;;Total ram usage:        4 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    3
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _countup
  1787  024A                     _countup:	
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _countup: [wreg+fsr1l+fsr1h+status,2+status,0]
  1791                           ;countup@i stored from wreg
  1792  024A  0020               	movlb	0	; select bank0
  1793  024B  00D2               	movwf	countup@i
  1794                           
  1795                           ;ver0.0_20140727.c: 168: if(*j<3-1)
  1796  024C  0850               	movf	countup@j,w
  1797  024D  0086               	movwf	6
  1798  024E  0187               	clrf	7
  1799  024F  3002               	movlw	2
  1800  0250  0201               	subwf	1,w
  1801  0251  1803               	skipnc
  1802  0252  2A58               	goto	l1523
  1803                           
  1804                           ;ver0.0_20140727.c: 169: *j++;
  1805  0253  3001               	movlw	1
  1806  0254  00F6               	movwf	??_countup
  1807  0255  0876               	movf	??_countup,w
  1808  0256  07D0               	addwf	countup@j,f
  1809  0257  2A75               	goto	l1535
  1810  0258                     l1523:	
  1811                           
  1812                           ;ver0.0_20140727.c: 170: else{
  1813                           ;ver0.0_20140727.c: 171: if(*i<16-1){
  1814  0258  0852               	movf	countup@i,w
  1815  0259  0086               	movwf	6
  1816  025A  0187               	clrf	7
  1817  025B  300F               	movlw	15
  1818  025C  0201               	subwf	1,w
  1819  025D  1803               	skipnc
  1820  025E  2A68               	goto	l1529
  1821                           
  1822                           ;ver0.0_20140727.c: 172: *j=0;
  1823  025F  0850               	movf	countup@j,w
  1824  0260  0086               	movwf	6
  1825  0261  0187               	clrf	7
  1826  0262  0181               	clrf	1
  1827                           
  1828                           ;ver0.0_20140727.c: 173: *i++;
  1829  0263  3001               	movlw	1
  1830  0264  00F6               	movwf	??_countup
  1831  0265  0876               	movf	??_countup,w
  1832  0266  07D2               	addwf	countup@i,f
  1833                           
  1834                           ;ver0.0_20140727.c: 174: }else{
  1835  0267  2A75               	goto	l1535
  1836  0268                     l1529:	
  1837                           
  1838                           ;ver0.0_20140727.c: 175: *j++;
  1839  0268  3001               	movlw	1
  1840  0269  00F6               	movwf	??_countup
  1841  026A  0876               	movf	??_countup,w
  1842  026B  07D0               	addwf	countup@j,f
  1843                           
  1844                           ;ver0.0_20140727.c: 176: *i++;
  1845  026C  3001               	movlw	1
  1846  026D  00F6               	movwf	??_countup
  1847  026E  0876               	movf	??_countup,w
  1848  026F  07D2               	addwf	countup@i,f
  1849                           
  1850                           ;ver0.0_20140727.c: 177: return 1;
  1851  0270  3001               	movlw	1
  1852  0271  00D0               	movwf	?_countup
  1853  0272  3000               	movlw	0
  1854  0273  00D1               	movwf	?_countup+1
  1855  0274  0008               	return
  1856  0275                     l1535:	
  1857                           
  1858                           ;ver0.0_20140727.c: 178: }
  1859                           ;ver0.0_20140727.c: 179: }
  1860                           ;ver0.0_20140727.c: 180: return 0;
  1861  0275  01D0               	clrf	?_countup
  1862  0276  01D1               	clrf	?_countup+1
  1863  0277  0008               	return
  1864  0278                     __end_of_countup:	
  1865                           
  1866                           	psect	intentry
  1867  0004                     __pintentry:	
  1868 ;; *************** function _InterTimer *****************
  1869 ;; Defined at:
  1870 ;;		line 41 in file "ver0.0_20140727.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;Total ram usage:        2 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    2
  1891 ;; This function calls:
  1892 ;;		_changeLED
  1893 ;;		_putch
  1894 ;; This function is called by:
  1895 ;;		Interrupt level 1
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899  0004                     _InterTimer:	
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _InterTimer: [wreg+status,2+status,0+pclath+cstack]
  1903  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1904  0005  3180               	pagesel	$
  1905  0006  0020               	movlb	0	; select bank0
  1906  0007  087F               	movf	127,w
  1907  0008  00F5               	movwf	??_InterTimer+1
  1908                           
  1909                           ;ver0.0_20140727.c: 43: if (TMR0IF == 1) {
  1910  0009  1D0B               	btfss	11,2	;volatile
  1911  000A  2818               	goto	i1l242
  1912                           
  1913                           ;ver0.0_20140727.c: 44: TMR0 = 61 ;
  1914  000B  303D               	movlw	61
  1915  000C  0095               	movwf	21	;volatile
  1916                           
  1917                           ;ver0.0_20140727.c: 45: time++ ;
  1918  000D  3001               	movlw	1
  1919  000E  00F4               	movwf	??_InterTimer
  1920  000F  0874               	movf	??_InterTimer,w
  1921  0010  07F7               	addwf	_time,f
  1922                           
  1923                           ;ver0.0_20140727.c: 46: changeLED();
  1924  0011  3182  22BB  3180   	fcall	_changeLED
  1925                           
  1926                           ;ver0.0_20140727.c: 47: putch(0x09);
  1927  0014  3009               	movlw	9
  1928  0015  3182  22E5         	fcall	_putch
  1929                           
  1930                           ;ver0.0_20140727.c: 48: TMR0IF = 0 ;
  1931  0017  110B               	bcf	11,2	;volatile
  1932  0018                     i1l242:	
  1933  0018  0875               	movf	??_InterTimer+1,w
  1934  0019  0020               	movlb	0	; select bank0
  1935  001A  00FF               	movwf	127
  1936  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  1937  001C  0009               	retfie
  1938  001D                     __end_of_InterTimer:	
  1939                           
  1940                           	psect	text9
  1941  02E5                     __ptext9:	
  1942 ;; *************** function _putch *****************
  1943 ;; Defined at:
  1944 ;;		line 4 in file "uart.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  Data            1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  Data            1    0[COMMON] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;		None               void
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_InterTimer
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _putch
  1973  02E5                     _putch:	
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _putch: [wreg]
  1977                           ;putch@Data stored from wreg
  1978  02E5  00F0               	movwf	putch@Data
  1979  02E6                     i1l317:	
  1980                           ;uart.c: 5: while(!TRMT){}
  1981                           
  1982  02E6  0023               	movlb	3	; select bank3
  1983  02E7  1C9E               	btfss	30,1	;volatile
  1984  02E8  2AE6               	goto	i1l317
  1985                           
  1986                           ;uart.c: 6: TXREG = Data;
  1987  02E9  0870               	movf	putch@Data,w
  1988  02EA  009A               	movwf	26	;volatile
  1989  02EB  0008               	return
  1990  02EC                     __end_of_putch:	
  1991                           
  1992                           	psect	text10
  1993  02BB                     __ptext10:	
  1994 ;; *************** function _changeLED *****************
  1995 ;; Defined at:
  1996 ;;		line 25 in file "ver0.0_20140727.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    1
  2017 ;; This function calls:
  2018 ;;		_no0
  2019 ;;		_no1
  2020 ;;		_no2
  2021 ;;		_no3
  2022 ;;		_noxinit
  2023 ;; This function is called by:
  2024 ;;		_InterTimer
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _changeLED
  2030  02BB                     _changeLED:	
  2031                           
  2032                           ;ver0.0_20140727.c: 26: if(time==0)
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _changeLED: [wreg+status,2+status,0+pclath+cstack]
  2036  02BB  08F7               	movf	_time,f
  2037  02BC  1D03               	skipz
  2038  02BD  2AC1               	goto	i1l1033
  2039                           
  2040                           ;ver0.0_20140727.c: 27: noxinit();
  2041  02BE  3182  22D6         	fcall	_noxinit
  2042  02C0  0008               	return
  2043  02C1                     i1l1033:	
  2044                           ;ver0.0_20140727.c: 28: else if(0==0)
  2045                           
  2046                           
  2047                           ;ver0.0_20140727.c: 29: no0(time);
  2048  02C1  0877               	movf	_time,w
  2049  02C2  00F2               	movwf	??_changeLED
  2050  02C3  01F3               	clrf	??_changeLED+1
  2051  02C4  0872               	movf	??_changeLED,w
  2052  02C5  00F0               	movwf	?_no0
  2053  02C6  0873               	movf	??_changeLED+1,w
  2054  02C7  00F1               	movwf	?_no0+1
  2055  02C8  3182  2217         	fcall	_no0
  2056                           
  2057                           ;ver0.0_20140727.c: 30: else if(0==1)
  2058  02CA  0008               	return
  2059  02CB                     __end_of_changeLED:	
  2060                           ;ver0.0_20140727.c: 35: no3(time);
  2061                           
  2062                           ;ver0.0_20140727.c: 34: else if(0==3)
  2063                           
  2064                           ;ver0.0_20140727.c: 33: no2(time);
  2065                           
  2066                           ;ver0.0_20140727.c: 32: else if(0==2)
  2067                           
  2068                           ;ver0.0_20140727.c: 31: no1(time);
  2069                           
  2070                           
  2071                           	psect	text11
  2072  02D6                     __ptext11:	
  2073 ;; *************** function _noxinit *****************
  2074 ;; Defined at:
  2075 ;;		line 55 in file "sorce.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;		None               void
  2082 ;; Registers used:
  2083 ;;		wreg
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_changeLED
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _noxinit
  2104  02D6                     _noxinit:	
  2105                           
  2106                           ;sorce.c: 56: PORTA=0xFF;
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _noxinit: [wreg]
  2110  02D6  30FF               	movlw	255
  2111  02D7  0020               	movlb	0	; select bank0
  2112  02D8  008C               	movwf	12	;volatile
  2113                           
  2114                           ;sorce.c: 57: RC2=1;
  2115  02D9  150E               	bsf	14,2	;volatile
  2116                           
  2117                           ;sorce.c: 58: RC1=1;
  2118  02DA  148E               	bsf	14,1	;volatile
  2119                           
  2120                           ;sorce.c: 59: RC3=1;
  2121  02DB  158E               	bsf	14,3	;volatile
  2122                           
  2123                           ;sorce.c: 60: RC0=1;
  2124  02DC  140E               	bsf	14,0	;volatile
  2125  02DD  0008               	return
  2126  02DE                     __end_of_noxinit:	
  2127                           
  2128                           	psect	text12
  2129  017E                     __ptext12:	
  2130 ;; *************** function _no3 *****************
  2131 ;; Defined at:
  2132 ;;		line 42 in file "sorce.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;		None               void
  2139 ;; Registers used:
  2140 ;;		wreg
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;Total ram usage:        2 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_changeLED
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _no3
  2161  017E                     _no3:	
  2162                           
  2163                           ;sorce.c: 43: if(led[12][0]<time) RA2=0;
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _no3: [wreg]
  2167  017E  0877               	movf	_time,w
  2168  017F  0020               	movlb	0	; select bank0
  2169  0180  0244               	subwf	_led+36,w
  2170  0181  1C03               	btfss	3,0
  2171  0182  110C               	bcf	12,2	;volatile
  2172                           
  2173                           ;sorce.c: 44: if(led[12][1]<time) RA0=0;
  2174  0183  0877               	movf	_time,w
  2175  0184  0245               	subwf	_led+37,w
  2176  0185  1C03               	btfss	3,0
  2177  0186  100C               	bcf	12,0	;volatile
  2178                           
  2179                           ;sorce.c: 45: if(led[12][2]<time) RA3=0;
  2180  0187  0877               	movf	_time,w
  2181  0188  0246               	subwf	_led+38,w
  2182  0189  1C03               	btfss	3,0
  2183  018A  118C               	bcf	12,3	;volatile
  2184                           
  2185                           ;sorce.c: 46: if(led[13][0]<time) RA1=0;
  2186  018B  0877               	movf	_time,w
  2187  018C  0247               	subwf	_led+39,w
  2188  018D  1C03               	btfss	3,0
  2189  018E  108C               	bcf	12,1	;volatile
  2190                           
  2191                           ;sorce.c: 47: if(led[13][1]<time) RA5=0;
  2192  018F  0877               	movf	_time,w
  2193  0190  0248               	subwf	_led+40,w
  2194  0191  1C03               	btfss	3,0
  2195  0192  128C               	bcf	12,5	;volatile
  2196                           
  2197                           ;sorce.c: 48: if(led[13][2]<time) RA4=0;
  2198  0193  0877               	movf	_time,w
  2199  0194  0249               	subwf	_led+41,w
  2200  0195  1C03               	btfss	3,0
  2201  0196  120C               	bcf	12,4	;volatile
  2202                           
  2203                           ;sorce.c: 49: if(led[14][0]<time) RC2=0;
  2204  0197  0877               	movf	_time,w
  2205  0198  024A               	subwf	_led+42,w
  2206  0199  1C03               	btfss	3,0
  2207  019A  110E               	bcf	14,2	;volatile
  2208                           
  2209                           ;sorce.c: 50: if(led[14][1]<time) RA7=0;
  2210  019B  0877               	movf	_time,w
  2211  019C  024B               	subwf	_led+43,w
  2212  019D  1C03               	btfss	3,0
  2213  019E  138C               	bcf	12,7	;volatile
  2214                           
  2215                           ;sorce.c: 51: if(led[14][2]<time) RA6=0;
  2216  019F  0877               	movf	_time,w
  2217  01A0  024C               	subwf	_led+44,w
  2218  01A1  1C03               	btfss	3,0
  2219  01A2  130C               	bcf	12,6	;volatile
  2220                           
  2221                           ;sorce.c: 52: if(led[15][0]<time) RC1=0;
  2222  01A3  0877               	movf	_time,w
  2223  01A4  024D               	subwf	_led+45,w
  2224  01A5  1C03               	btfss	3,0
  2225  01A6  108E               	bcf	14,1	;volatile
  2226                           
  2227                           ;sorce.c: 53: if(led[15][1]<time) RC3=0;
  2228  01A7  0877               	movf	_time,w
  2229  01A8  024E               	subwf	_led+46,w
  2230  01A9  1C03               	btfss	3,0
  2231  01AA  118E               	bcf	14,3	;volatile
  2232                           
  2233                           ;sorce.c: 54: if(led[15][2]<time) RC0=0;
  2234  01AB  0877               	movf	_time,w
  2235  01AC  024F               	subwf	_led+47,w
  2236  01AD  1803               	skipnc
  2237  01AE  0008               	return
  2238  01AF  100E               	bcf	14,0	;volatile
  2239  01B0  0008               	return
  2240  01B1                     __end_of_no3:	
  2241                           
  2242                           	psect	text13
  2243  01B1                     __ptext13:	
  2244 ;; *************** function _no2 *****************
  2245 ;; Defined at:
  2246 ;;		line 29 in file "sorce.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;		None               void
  2253 ;; Registers used:
  2254 ;;		wreg
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_changeLED
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _no2
  2275  01B1                     _no2:	
  2276                           
  2277                           ;sorce.c: 30: if(led[8][0]<time) RA2=0;
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _no2: [wreg]
  2281  01B1  0877               	movf	_time,w
  2282  01B2  0020               	movlb	0	; select bank0
  2283  01B3  0238               	subwf	_led+24,w
  2284  01B4  1C03               	btfss	3,0
  2285  01B5  110C               	bcf	12,2	;volatile
  2286                           
  2287                           ;sorce.c: 31: if(led[8][1]<time) RA0=0;
  2288  01B6  0877               	movf	_time,w
  2289  01B7  0239               	subwf	_led+25,w
  2290  01B8  1C03               	btfss	3,0
  2291  01B9  100C               	bcf	12,0	;volatile
  2292                           
  2293                           ;sorce.c: 32: if(led[8][2]<time) RA3=0;
  2294  01BA  0877               	movf	_time,w
  2295  01BB  023A               	subwf	_led+26,w
  2296  01BC  1C03               	btfss	3,0
  2297  01BD  118C               	bcf	12,3	;volatile
  2298                           
  2299                           ;sorce.c: 33: if(led[9][0]<time) RA1=0;
  2300  01BE  0877               	movf	_time,w
  2301  01BF  023B               	subwf	_led+27,w
  2302  01C0  1C03               	btfss	3,0
  2303  01C1  108C               	bcf	12,1	;volatile
  2304                           
  2305                           ;sorce.c: 34: if(led[9][1]<time) RA5=0;
  2306  01C2  0877               	movf	_time,w
  2307  01C3  023C               	subwf	_led+28,w
  2308  01C4  1C03               	btfss	3,0
  2309  01C5  128C               	bcf	12,5	;volatile
  2310                           
  2311                           ;sorce.c: 35: if(led[9][2]<time) RA4=0;
  2312  01C6  0877               	movf	_time,w
  2313  01C7  023D               	subwf	_led+29,w
  2314  01C8  1C03               	btfss	3,0
  2315  01C9  120C               	bcf	12,4	;volatile
  2316                           
  2317                           ;sorce.c: 36: if(led[10][0]<time) RC2=0;
  2318  01CA  0877               	movf	_time,w
  2319  01CB  023E               	subwf	_led+30,w
  2320  01CC  1C03               	btfss	3,0
  2321  01CD  110E               	bcf	14,2	;volatile
  2322                           
  2323                           ;sorce.c: 37: if(led[10][1]<time) RA7=0;
  2324  01CE  0877               	movf	_time,w
  2325  01CF  023F               	subwf	_led+31,w
  2326  01D0  1C03               	btfss	3,0
  2327  01D1  138C               	bcf	12,7	;volatile
  2328                           
  2329                           ;sorce.c: 38: if(led[10][2]<time) RA6=0;
  2330  01D2  0877               	movf	_time,w
  2331  01D3  0240               	subwf	_led+32,w
  2332  01D4  1C03               	btfss	3,0
  2333  01D5  130C               	bcf	12,6	;volatile
  2334                           
  2335                           ;sorce.c: 39: if(led[11][0]<time) RC1=0;
  2336  01D6  0877               	movf	_time,w
  2337  01D7  0241               	subwf	_led+33,w
  2338  01D8  1C03               	btfss	3,0
  2339  01D9  108E               	bcf	14,1	;volatile
  2340                           
  2341                           ;sorce.c: 40: if(led[11][1]<time) RC3=0;
  2342  01DA  0877               	movf	_time,w
  2343  01DB  0242               	subwf	_led+34,w
  2344  01DC  1C03               	btfss	3,0
  2345  01DD  118E               	bcf	14,3	;volatile
  2346                           
  2347                           ;sorce.c: 41: if(led[11][2]<time) RC0=0;
  2348  01DE  0877               	movf	_time,w
  2349  01DF  0243               	subwf	_led+35,w
  2350  01E0  1803               	skipnc
  2351  01E1  0008               	return
  2352  01E2  100E               	bcf	14,0	;volatile
  2353  01E3  0008               	return
  2354  01E4                     __end_of_no2:	
  2355                           
  2356                           	psect	text14
  2357  01E4                     __ptext14:	
  2358 ;; *************** function _no1 *****************
  2359 ;; Defined at:
  2360 ;;		line 16 in file "sorce.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_changeLED
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _no1
  2389  01E4                     _no1:	
  2390                           
  2391                           ;sorce.c: 17: if(led[4][0]<time) RA2=0;
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _no1: [wreg]
  2395  01E4  0877               	movf	_time,w
  2396  01E5  0020               	movlb	0	; select bank0
  2397  01E6  022C               	subwf	_led+12,w
  2398  01E7  1C03               	btfss	3,0
  2399  01E8  110C               	bcf	12,2	;volatile
  2400                           
  2401                           ;sorce.c: 18: if(led[4][1]<time) RA0=0;
  2402  01E9  0877               	movf	_time,w
  2403  01EA  022D               	subwf	_led+13,w
  2404  01EB  1C03               	btfss	3,0
  2405  01EC  100C               	bcf	12,0	;volatile
  2406                           
  2407                           ;sorce.c: 19: if(led[4][2]<time) RA3=0;
  2408  01ED  0877               	movf	_time,w
  2409  01EE  022E               	subwf	_led+14,w
  2410  01EF  1C03               	btfss	3,0
  2411  01F0  118C               	bcf	12,3	;volatile
  2412                           
  2413                           ;sorce.c: 20: if(led[5][0]<time) RA1=0;
  2414  01F1  0877               	movf	_time,w
  2415  01F2  022F               	subwf	_led+15,w
  2416  01F3  1C03               	btfss	3,0
  2417  01F4  108C               	bcf	12,1	;volatile
  2418                           
  2419                           ;sorce.c: 21: if(led[5][1]<time) RA5=0;
  2420  01F5  0877               	movf	_time,w
  2421  01F6  0230               	subwf	_led+16,w
  2422  01F7  1C03               	btfss	3,0
  2423  01F8  128C               	bcf	12,5	;volatile
  2424                           
  2425                           ;sorce.c: 22: if(led[5][2]<time) RA4=0;
  2426  01F9  0877               	movf	_time,w
  2427  01FA  0231               	subwf	_led+17,w
  2428  01FB  1C03               	btfss	3,0
  2429  01FC  120C               	bcf	12,4	;volatile
  2430                           
  2431                           ;sorce.c: 23: if(led[6][0]<time) RC2=0;
  2432  01FD  0877               	movf	_time,w
  2433  01FE  0232               	subwf	_led+18,w
  2434  01FF  1C03               	btfss	3,0
  2435  0200  110E               	bcf	14,2	;volatile
  2436                           
  2437                           ;sorce.c: 24: if(led[6][1]<time) RA7=0;
  2438  0201  0877               	movf	_time,w
  2439  0202  0233               	subwf	_led+19,w
  2440  0203  1C03               	btfss	3,0
  2441  0204  138C               	bcf	12,7	;volatile
  2442                           
  2443                           ;sorce.c: 25: if(led[6][2]<time) RA6=0;
  2444  0205  0877               	movf	_time,w
  2445  0206  0234               	subwf	_led+20,w
  2446  0207  1C03               	btfss	3,0
  2447  0208  130C               	bcf	12,6	;volatile
  2448                           
  2449                           ;sorce.c: 26: if(led[7][0]<time) RC1=0;
  2450  0209  0877               	movf	_time,w
  2451  020A  0235               	subwf	_led+21,w
  2452  020B  1C03               	btfss	3,0
  2453  020C  108E               	bcf	14,1	;volatile
  2454                           
  2455                           ;sorce.c: 27: if(led[7][1]<time) RC3=0;
  2456  020D  0877               	movf	_time,w
  2457  020E  0236               	subwf	_led+22,w
  2458  020F  1C03               	btfss	3,0
  2459  0210  118E               	bcf	14,3	;volatile
  2460                           
  2461                           ;sorce.c: 28: if(led[7][2]<time) RC0=0;
  2462  0211  0877               	movf	_time,w
  2463  0212  0237               	subwf	_led+23,w
  2464  0213  1803               	skipnc
  2465  0214  0008               	return
  2466  0215  100E               	bcf	14,0	;volatile
  2467  0216  0008               	return
  2468  0217                     __end_of_no1:	
  2469                           
  2470                           	psect	text15
  2471  0217                     __ptext15:	
  2472 ;; *************** function _no0 *****************
  2473 ;; Defined at:
  2474 ;;		line 3 in file "sorce.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;Total ram usage:        2 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_changeLED
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _no0
  2503  0217                     _no0:	
  2504                           
  2505                           ;sorce.c: 4: if(led[0][0]<time)RA2=0;
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _no0: [wreg]
  2509  0217  0877               	movf	_time,w
  2510  0218  0020               	movlb	0	; select bank0
  2511  0219  0220               	subwf	_led,w
  2512  021A  1C03               	btfss	3,0
  2513  021B  110C               	bcf	12,2	;volatile
  2514                           
  2515                           ;sorce.c: 5: if(led[0][1]<time) RA0=0;
  2516  021C  0877               	movf	_time,w
  2517  021D  0221               	subwf	_led+1,w
  2518  021E  1C03               	btfss	3,0
  2519  021F  100C               	bcf	12,0	;volatile
  2520                           
  2521                           ;sorce.c: 6: if(led[0][2]<time) RA3=0;
  2522  0220  0877               	movf	_time,w
  2523  0221  0222               	subwf	_led+2,w
  2524  0222  1C03               	btfss	3,0
  2525  0223  118C               	bcf	12,3	;volatile
  2526                           
  2527                           ;sorce.c: 7: if(led[1][0]<time) RA1=0;
  2528  0224  0877               	movf	_time,w
  2529  0225  0223               	subwf	_led+3,w
  2530  0226  1C03               	btfss	3,0
  2531  0227  108C               	bcf	12,1	;volatile
  2532                           
  2533                           ;sorce.c: 8: if(led[1][1]<time) RA5=0;
  2534  0228  0877               	movf	_time,w
  2535  0229  0224               	subwf	_led+4,w
  2536  022A  1C03               	btfss	3,0
  2537  022B  128C               	bcf	12,5	;volatile
  2538                           
  2539                           ;sorce.c: 9: if(led[1][2]<time) RA4=0;
  2540  022C  0877               	movf	_time,w
  2541  022D  0225               	subwf	_led+5,w
  2542  022E  1C03               	btfss	3,0
  2543  022F  120C               	bcf	12,4	;volatile
  2544                           
  2545                           ;sorce.c: 10: if(led[2][0]<time) RC2=0;
  2546  0230  0877               	movf	_time,w
  2547  0231  0226               	subwf	_led+6,w
  2548  0232  1C03               	btfss	3,0
  2549  0233  110E               	bcf	14,2	;volatile
  2550                           
  2551                           ;sorce.c: 11: if(led[2][1]<time) RA7=0;
  2552  0234  0877               	movf	_time,w
  2553  0235  0227               	subwf	_led+7,w
  2554  0236  1C03               	btfss	3,0
  2555  0237  138C               	bcf	12,7	;volatile
  2556                           
  2557                           ;sorce.c: 12: if(led[2][2]<time) RA6=0;
  2558  0238  0877               	movf	_time,w
  2559  0239  0228               	subwf	_led+8,w
  2560  023A  1C03               	btfss	3,0
  2561  023B  130C               	bcf	12,6	;volatile
  2562                           
  2563                           ;sorce.c: 13: if(led[3][0]<time) RC1=0;
  2564  023C  0877               	movf	_time,w
  2565  023D  0229               	subwf	_led+9,w
  2566  023E  1C03               	btfss	3,0
  2567  023F  108E               	bcf	14,1	;volatile
  2568                           
  2569                           ;sorce.c: 14: if(led[3][1]<time) RC3=0;
  2570  0240  0877               	movf	_time,w
  2571  0241  022A               	subwf	_led+10,w
  2572  0242  1C03               	btfss	3,0
  2573  0243  118E               	bcf	14,3	;volatile
  2574                           
  2575                           ;sorce.c: 15: if(led[3][2]<time) RC0=0;
  2576  0244  0877               	movf	_time,w
  2577  0245  022B               	subwf	_led+11,w
  2578  0246  1803               	skipnc
  2579  0247  0008               	return
  2580  0248  100E               	bcf	14,0	;volatile
  2581  0249  0008               	return
  2582  024A                     __end_of_no0:	
  2583  007E                     btemp	set	126	;btemp
  2584  007E                     pic14e$flags	set	126
  2585  007E                     wtemp	set	126
  2586  007E                     wtemp0	set	126
  2587  0080                     wtemp1	set	128
  2588  0082                     wtemp2	set	130
  2589  0084                     wtemp3	set	132
  2590  0086                     wtemp4	set	134
  2591  0088                     wtemp5	set	136
  2592  007F                     wtemp6	set	127
  2593  007E                     ttemp	set	126
  2594  007E                     ttemp0	set	126
  2595  0081                     ttemp1	set	129
  2596  0084                     ttemp2	set	132
  2597  0087                     ttemp3	set	135
  2598  007F                     ttemp4	set	127
  2599  007E                     ltemp	set	126
  2600  007E                     ltemp0	set	126
  2601  0082                     ltemp1	set	130
  2602  0086                     ltemp2	set	134
  2603  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     16      64
    BANK1            80      0      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    countup@i	PTR unsigned char  size(1) Largest target is 1
		 -> main@i(BANK0[1]), 

    countup@j	PTR unsigned char  size(1) Largest target is 1
		 -> main@j(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->_countup
    _main->_waitstart
    _setdata->___bmul

Critical Paths under _InterTimer in COMMON

    _InterTimer->_changeLED
    _changeLED->_no0
    _changeLED->_no1
    _changeLED->_no2
    _changeLED->_no3

Critical Paths under _main in BANK0

    _main->_setdata
    _setdata->___bmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    1484
                                             10 BANK0      6     6      0
                             ___bmul
                            _countup
                              _getch
                            _setdata
                             _setpin
                          _waitdelay
                          _waitstart
 ---------------------------------------------------------------------------------
 (1) _waitstart                                            1     1      0      24
                                              6 COMMON     1     1      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitdelay                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setdata                                              7     7      0     536
                                              3 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     276
                                              6 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _countup                                              4     2      2     200
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0      15
                                              4 COMMON     2     2      0
                          _changeLED
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _changeLED                                            2     2      0       0
                                              2 COMMON     2     2      0
                                _no0
                                _no1
                                _no2
                                _no3
                            _noxinit
 ---------------------------------------------------------------------------------
 (5) _noxinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _no3                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no2                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no1                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no0                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _countup
   _getch
   _setdata
     ___bmul
   _setpin
   _waitdelay
   _waitstart
     _getch

 _InterTimer (ROOT)
   _changeLED
     _no0
     _no1
     _no2
     _no3
     _noxinit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Aug 25 17:30:48 2014

         ___bmul@product 0051              __CFG_CP$OFF 0000              __CFG_LVP$ON 0000  
                    l250 0072                      l323 02DE                      l252 0074  
                    l253 0076                      l254 0078                      l255 007A  
                    l256 007C                      l257 007E                      l258 0080  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RC0 0070                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RC2 0072                      _RB4 006C  
                    _RA6 0066                      _RC3 0073                      _RB5 006D  
                    _RA7 0067                      _RE0 0080                      _RB6 006E  
                    _RE1 0081                      _RB7 006F                      _RE2 0082  
           __CFG_CPD$OFF 0000                      _no0 0217                      _no1 01E4  
                    _no2 01B1                      _no3 017E                      _led 0020  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
                   l1313 028D                     l1305 027A                     ?_no0 0070  
                   l1503 02AC                     ?_no1 0070                     ?_no2 0070  
                   ?_no3 0070                     l1523 0258                     l1507 02B2  
                   l1535 0275                     l1551 014F                     l1529 0268  
                   l1643 0086                     l1651 0089                     l1557 0179  
                   l1671 00C0                     l1639 0082                     l1665 00BB  
                   l1657 00B2                     l1649 0093                     l1683 0106  
                   l1685 0119                     l1693 012A                     l1689 0122  
                   u1227 02D0                     _RCIF 008D                     _TMR0 0015  
                   _TRMT 0CF1                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0033                     _time 0077  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   _stoc 00A0                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 001D                     ttemp 007E  
                   wtemp 007E        ___bmul@multiplier 0052                    ??_no0 0072  
                  ??_no1 0072                    ??_no2 0072                    ??_no3 0072  
          __CFG_PLLEN$ON 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l242 0018                    i1l317 02E6                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _PORTE 0010                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TRISD 008F                    _TRISE 0090  
                  _TXREG 019A                    _TXSTA 019E            __CFG_PWRTE$ON 0000  
        __end_of_countup 0278                    _getch 02DE                    _putch 02E5  
                  main@i 005F                    main@j 005E          __end_of_setdata 017E  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080          __end_of_noxinit 02DE                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 001F             __end_of_main 0144                   ??_main 005A  
             _InterTimer 0004                   ?_getch 0070                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   i1l1033 02C1                   _OSCCON 0099  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TRISC6 0476  
                 _TRISC7 0477                   _nWPUEN 04AF                   ___bmul 02A9  
         __CFG_STVREN$ON 0000                   _setpin 0291                ??_countup 0076  
              ??_setdata 0053                ??_noxinit 0070            main@stoclocal 005D  
__end_of__initialization 002F      ___bmul@multiplicand 0076           __pcstackCOMMON 0070  
     __size_of_changeLED 0010            __end_of_getch 02E5            __end_of_putch 02EC  
            ?_InterTimer 0070                  ??_getch 0076                  ??_putch 0070  
             __pbssBANK0 0020               __pbssBANK1 00A0          __CFG_VCAPEN$OFF 0000  
             __pmaintext 0033                  ?___bmul 0076               __pintentry 0004  
                _BAUDCON 019F                  ?_setpin 0070       __size_of_waitdelay 000B  
     __size_of_waitstart 0019        __end_of_changeLED 02CB      __size_of_InterTimer 0019  
        __size_of___bmul 0012                  __ptext0 0000                  __ptext1 0278  
                __ptext2 02DE                  __ptext3 02CB                  __ptext4 0291  
                __ptext5 0144                  __ptext6 02A9                  __ptext7 024A  
                __ptext9 02E5          __size_of_setpin 0018                  _countup 024A  
           __size_of_no0 0033             __size_of_no1 0033             __size_of_no2 0033  
           __size_of_no3 0033                  _setdata 0144                  _noxinit 02D6  
                clrloop0 02ED     end_of_initialization 002F        __end_of_waitdelay 02D6  
      __end_of_waitstart 0291         __CFG_FOSC$INTOSC 0000              waitstart@ch 0076  
         __end_of___bmul 02BB             ??_InterTimer 0074           __end_of_setpin 02A9  
    start_initialization 001F              __end_of_no0 024A              __end_of_no1 0217  
            __end_of_no2 01E4              __end_of_no3 01B1       __end_of_InterTimer 001D  
               ??___bmul 0050                 ??_setpin 0076              __pbssCOMMON 0077  
              ___latbits 0003            __pcstackBANK0 0050                _changeLED 02BB  
               ?_countup 0050                 ?_setdata 0070                 ?_noxinit 0070  
         __size_of_getch 0007           __size_of_putch 0007               ?_changeLED 0070  
              clear_ram0 02EC                _waitdelay 02CB                _waitstart 0278  
             ?_waitdelay 0070               ?_waitstart 0070         __size_of_countup 002E  
               __ptext10 02BB                 __ptext11 02D6                 __ptext12 017E  
               __ptext13 01B1                 __ptext14 01E4                 __ptext15 0217  
       __size_of_setdata 003A         __size_of_noxinit 0008            __size_of_main 0111  
            ??_changeLED 0072                putch@Data 0070                 countup@i 0052  
               countup@j 0050              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000                 setdata@i 0058                 setdata@j 0059  
            ??_waitdelay 0050              ??_waitstart 0076               _OPTION_REG 0095  
