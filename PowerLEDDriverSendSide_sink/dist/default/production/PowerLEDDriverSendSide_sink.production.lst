

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Sep 28 16:18:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x620,48
    26                           	dabs	1,0x5C6,42
    27                           	dabs	1,0x2396,0,_putdata
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;_putdata
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0070                     _RC0	set	112
   570  0071                     _RC1	set	113
   571  0072                     _RC2	set	114
   572  0073                     _RC3	set	115
   573  008D                     _RCIF	set	141
   574  007E                     _RD6	set	126
   575  005D                     _TMR0IE	set	93
   576  005A                     _TMR0IF	set	90
   577  0095                     _OPTION_REG	set	149
   578  0099                     _OSCCON	set	153
   579  008C                     _TRISA	set	140
   580  008D                     _TRISB	set	141
   581  008E                     _TRISC	set	142
   582  008F                     _TRISD	set	143
   583  0090                     _TRISE	set	144
   584  0476                     _TRISC6	set	1142
   585  0477                     _TRISC7	set	1143
   586  04AF                     _nWPUEN	set	1199
   587  0191                     _EEADR	set	401
   588  018C                     _ANSELA	set	396
   589  018D                     _ANSELB	set	397
   590  018F                     _ANSELD	set	399
   591  0190                     _ANSELE	set	400
   592  019F                     _BAUDCON	set	415
   593  0193                     _EEDATA	set	403
   594  0199                     _RCREG	set	409
   595  019D                     _RCSTA	set	413
   596  019B                     _SPBRG	set	411
   597  019A                     _TXREG	set	410
   598  019E                     _TXSTA	set	414
   599  0CA8                     _RD	set	3240
   600  0CF1                     _TRMT	set	3313
   601  020D                     _WPUB	set	525
   602                           
   603                           	psect	text0
   604  0000                     __ptext0:	
   605                           ; #config settings
   606                           
   607                           
   608                           ;psect for function i1___wmul
   609  0000                     
   610                           	psect	cinit
   611  001C                     start_initialization:	
   612  001C                     __initialization:		;BIGRAM
   613                           
   614                           ; Clear objects allocated to BIGRAM
   615  001C  3096               	movlw	low (0+9110)
   616  001D  0084               	movwf	4
   617  001E  3023               	movlw	high (0+9110)
   618  001F  0085               	movwf	5
   619  0020  305A               	movlw	90
   620  0021  00FE               	movwf	btemp
   621  0022  3000               	movlw	0
   622  0023  00FF               	movwf	btemp+1
   623  0024  3184  241E  3180   	fcall	clear_ram0
   624                           
   625                           ; Clear objects allocated to COMMON
   626  0027  01FD               	clrf	__pbssCOMMON& (0+127)
   627                           
   628                           ; Clear objects allocated to BANK0
   629  0028  01E6               	clrf	__pbssBANK0& (0+127)
   630  0029  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   631                           
   632                           ; Clear objects allocated to BANK2
   633  002A  3020               	movlw	low __pbssBANK2
   634  002B  0084               	movwf	4
   635  002C  3001               	movlw	high __pbssBANK2
   636  002D  0085               	movwf	5
   637  002E  3030               	movlw	48
   638  002F  00FE               	movwf	btemp
   639  0030  3000               	movlw	0
   640  0031  00FF               	movwf	btemp+1
   641  0032  3184  241E  3180   	fcall	clear_ram0
   642                           
   643                           ; Clear objects allocated to BANK3
   644  0035  30A0               	movlw	low __pbssBANK3
   645  0036  0084               	movwf	4
   646  0037  3001               	movlw	high __pbssBANK3
   647  0038  0085               	movwf	5
   648  0039  3030               	movlw	48
   649  003A  00FE               	movwf	btemp
   650  003B  3000               	movlw	0
   651  003C  00FF               	movwf	btemp+1
   652  003D  3184  241E  3180   	fcall	clear_ram0
   653                           
   654                           ; Clear objects allocated to BANK4
   655  0040  3020               	movlw	low __pbssBANK4
   656  0041  0084               	movwf	4
   657  0042  3002               	movlw	high __pbssBANK4
   658  0043  0085               	movwf	5
   659  0044  3046               	movlw	70
   660  0045  00FE               	movwf	btemp
   661  0046  3000               	movlw	0
   662  0047  00FF               	movwf	btemp+1
   663  0048  3184  241E         	fcall	clear_ram0
   664  004A                     end_of_initialization:	
   665                           ;End of C runtime variable initialization code
   666                           
   667  004A                     __end_of__initialization:	
   668  004A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   669  004B  0020               	movlb	0
   670  004C  3180  284E         	ljmp	_main	;jump to C main() function
   671                           
   672                           	psect	bssCOMMON
   673  007D                     __pbssCOMMON:	
   674  007D                     _ledcount:	
   675  007D                     	ds	1
   676                           
   677                           	psect	bssBANK0
   678  0066                     __pbssBANK0:	
   679  0066                     _reservingNow:	
   680  0066                     	ds	1
   681  0067                     _time:	
   682  0067                     	ds	1
   683                           
   684                           	psect	bssBANK2
   685  0120                     __pbssBANK2:	
   686  0120                     _led:	
   687  0120                     	ds	48
   688                           
   689                           	psect	bssBANK3
   690  01A0                     __pbssBANK3:	
   691  01A0                     _stoc:	
   692  01A0                     	ds	48
   693                           
   694                           	psect	bssBANK4
   695  0220                     __pbssBANK4:	
   696  0220                     main@F3525:	
   697  0220                     	ds	70
   698                           
   699                           	psect	clrtext
   700  041E                     clear_ram0:	
   701                           ;	Called with FSR0 containing the base address, and
   702                           ;	btemp/btemp+1 has the size to clear
   703                           
   704  041E  0064               	clrwdt	;clear the watchdog before getting into this loop
   705  041F                     clrloop0:	
   706  041F  0180               	clrf	0	;clear RAM location pointed to by FSR
   707  0420  3101               	addfsr 0,1
   708  0421  3001               	movlw	1
   709  0422  02FE               	subwf	126,f
   710  0423  3000               	movlw	0
   711  0424  3BFF               	subwfb	127,f
   712  0425  087F               	movf	127,w
   713  0426  047E               	iorwf	126,w
   714  0427  1903               	btfsc	3,2
   715  0428  3400               	retlw	0	;all done for this memory range, return
   716  0429  2C1F               	goto	clrloop0	;have we reached the end yet?
   717                           
   718                           	psect	cstackBANK1
   719  00A0                     __pcstackBANK1:	
   720  00A0                     main@getdata:	
   721                           
   722                           ; 70 bytes @ 0x0
   723  00A0                     	ds	70
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:	
   727  0070                     ?_setpin:	
   728  0070                     ?_change:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_InterTimer:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ?_main:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_getch:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ?_x2:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_E2promRead:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?i1___wmul:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     i1___wmul@multiplier:	
   750                           ; 2 bytes @ 0x0
   751                           
   752                           
   753                           ; 2 bytes @ 0x0
   754  0070                     	ds	2
   755  0072                     i1___wmul@multiplicand:	
   756                           
   757                           ; 2 bytes @ 0x2
   758  0072                     	ds	2
   759  0074                     ??i1___wmul:	
   760  0074                     i1___wmul@product:	
   761                           ; 0 bytes @ 0x4
   762                           
   763                           
   764                           ; 2 bytes @ 0x4
   765  0074                     	ds	2
   766  0076                     ??_change:	
   767                           
   768                           ; 0 bytes @ 0x6
   769  0076                     	ds	6
   770  007C                     ??_InterTimer:	
   771                           
   772                           ; 0 bytes @ 0xC
   773  007C                     	ds	1
   774                           
   775                           	psect	cstackBANK0
   776  0020                     __pcstackBANK0:	
   777  0020                     ??_getch:	
   778  0020                     ??_setpin:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0020                     ??_E2promRead:	
   782                           ; 0 bytes @ 0x0
   783                           
   784  0020                     ?___wmul:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0020                     ?___awdiv:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0020                     ___wmul@multiplier:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0020                     ___awdiv@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0020                     	ds	2
   799  0022                     E2promRead@adr:	
   800  0022                     ___wmul@multiplicand:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0022                     ___awdiv@dividend:	
   804                           ; 2 bytes @ 0x2
   805                           
   806                           
   807                           ; 2 bytes @ 0x2
   808  0022                     	ds	2
   809  0024                     ??___wmul:	
   810  0024                     ??___awdiv:	
   811                           ; 0 bytes @ 0x4
   812                           
   813  0024                     ___wmul@product:	
   814                           ; 0 bytes @ 0x4
   815                           
   816                           
   817                           ; 2 bytes @ 0x4
   818  0024                     	ds	1
   819  0025                     ___awdiv@counter:	
   820                           
   821                           ; 1 bytes @ 0x5
   822  0025                     	ds	1
   823  0026                     ___awdiv@sign:	
   824                           
   825                           ; 1 bytes @ 0x6
   826  0026                     	ds	1
   827  0027                     ___awdiv@quotient:	
   828                           
   829                           ; 2 bytes @ 0x7
   830  0027                     	ds	2
   831  0029                     ??_x2:	
   832                           
   833                           ; 0 bytes @ 0x9
   834  0029                     	ds	3
   835  002C                     x2@i:	
   836                           
   837                           ; 1 bytes @ 0xC
   838  002C                     	ds	1
   839  002D                     x2@ret:	
   840                           
   841                           ; 1 bytes @ 0xD
   842  002D                     	ds	1
   843  002E                     x2@num:	
   844                           
   845                           ; 1 bytes @ 0xE
   846  002E                     	ds	1
   847  002F                     ??_main:	
   848                           
   849                           ; 0 bytes @ 0xF
   850  002F                     	ds	15
   851  003E                     main@getKeeping:	
   852                           
   853                           ; 32 bytes @ 0x1E
   854  003E                     	ds	32
   855  005E                     main@individual:	
   856                           
   857                           ; 1 bytes @ 0x3E
   858  005E                     	ds	1
   859  005F                     main@n:	
   860                           
   861                           ; 1 bytes @ 0x3F
   862  005F                     	ds	1
   863  0060                     main@gettingSuccess:	
   864                           
   865                           ; 1 bytes @ 0x40
   866  0060                     	ds	1
   867  0061                     main@getNum:	
   868                           
   869                           ; 1 bytes @ 0x41
   870  0061                     	ds	1
   871  0062                     main@resetFlug:	
   872                           
   873                           ; 1 bytes @ 0x42
   874  0062                     	ds	1
   875  0063                     main@j:	
   876                           
   877                           ; 1 bytes @ 0x43
   878  0063                     	ds	1
   879  0064                     main@onetime:	
   880                           
   881                           ; 1 bytes @ 0x44
   882  0064                     	ds	1
   883  0065                     main@i:	
   884                           
   885                           ; 1 bytes @ 0x45
   886  0065                     	ds	1
   887                           
   888                           	psect	maintext
   889  004E                     __pmaintext:	
   890 ;;
   891 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
   892 ;;
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 81 in file "ver0.0_20140727.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  getdata        70    0[BANK1 ] unsigned char [70]
   900 ;;  getKeeping     32   30[BANK0 ] unsigned char [2][16]
   901 ;;  test           32    0        unsigned char [4][8]
   902 ;;  i               1   69[BANK0 ] unsigned char 
   903 ;;  onetime         1   68[BANK0 ] unsigned char 
   904 ;;  j               1   67[BANK0 ] unsigned char 
   905 ;;  resetFlug       1   66[BANK0 ] unsigned char 
   906 ;;  getNum          1   65[BANK0 ] unsigned char 
   907 ;;  gettingSucce    1   64[BANK0 ] unsigned char 
   908 ;;  n               1   63[BANK0 ] unsigned char 
   909 ;;  individual      1   62[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;		None               void
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 17F/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   920 ;;      Locals:         0      40      70       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   922 ;;      Totals:         0      55      70       0       0       0       0       0       0       0       0       0       
      +0       0
   923 ;;Total ram usage:      125 bytes
   924 ;; Hardware stack levels required when called:    5
   925 ;; This function calls:
   926 ;;		_E2promRead
   927 ;;		___wmul
   928 ;;		_getch
   929 ;;		_setpin
   930 ;;		_x2
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  004E                     _main:	
   939                           
   940                           ;ver0.0_20140727.c: 83: char i,j,n,test[8][4],individual=255;
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   944  004E  30FF               	movlw	255
   945  004F  0020               	movlb	0	; select bank0
   946  0050  00AF               	movwf	??_main
   947  0051  082F               	movf	??_main,w
   948  0052  00DE               	movwf	main@individual
   949                           
   950                           ;ver0.0_20140727.c: 84: char getdata[70]={0},getKeeping[16][2],getNum=0,onetime=0,resetF
      +                          lug=0,gettingSuccess=0;
   951  0053  3020               	movlw	low main@F3525
   952  0054  0086               	movwf	6
   953  0055  3002               	movlw	high main@F3525
   954  0056  0087               	movwf	7
   955  0057  30A0               	movlw	low main@getdata
   956  0058  0084               	movwf	4
   957  0059  3000               	movlw	high main@getdata
   958  005A  0085               	movwf	5
   959  005B  3046               	movlw	70
   960  005C  00AF               	movwf	??_main
   961  005D                     u1730:	
   962  005D  0016               	moviw fsr1++
   963  005E  001A               	movwi fsr0++
   964  005F  0BAF               	decfsz	??_main,f
   965  0060  285D               	goto	u1730
   966  0061  01E1               	clrf	main@getNum
   967  0062  01E4               	clrf	main@onetime
   968  0063  01E2               	clrf	main@resetFlug
   969  0064  01E0               	clrf	main@gettingSuccess
   970                           
   971                           ;ver0.0_20140727.c: 85: setpin();
   972  0065  3183  23F7  3180   	fcall	_setpin
   973  0068                     l1585:	
   974                           ;ver0.0_20140727.c: 86: while(1){
   975                           
   976                           
   977                           ;ver0.0_20140727.c: 87: RD6=1;
   978  0068  0020               	movlb	0	; select bank0
   979  0069  170F               	bsf	15,6	;volatile
   980                           
   981                           ;ver0.0_20140727.c: 88: getch();
   982  006A  3184  242A  3180   	fcall	_getch
   983                           
   984                           ;ver0.0_20140727.c: 89: RD6=0;
   985  006D  0020               	movlb	0	; select bank0
   986  006E  130F               	bcf	15,6	;volatile
   987                           
   988                           ;ver0.0_20140727.c: 90: _delay((unsigned long)((100)*(32000000/4000.0)));
   989  006F  3005               	movlw	5
   990  0070  00B1               	movwf	??_main+2
   991  0071  300F               	movlw	15
   992  0072  00B0               	movwf	??_main+1
   993  0073  30F4               	movlw	244
   994  0074  00AF               	movwf	??_main
   995  0075                     u2007:	
   996  0075  0BAF               	decfsz	??_main,f
   997  0076  2875               	goto	u2007
   998  0077  0BB0               	decfsz	??_main+1,f
   999  0078  2875               	goto	u2007
  1000  0079  0BB1               	decfsz	??_main+2,f
  1001  007A  2875               	goto	u2007
  1002  007B  2868               	goto	l1585
  1003  007C                     l1605:	
  1004                           ;ver0.0_20140727.c: 94: for(i=0;i<16;i++)
  1005                           
  1006                           ;ver0.0_20140727.c: 93: individual=E2promRead(0x00);
  1007                           
  1008                           ;ver0.0_20140727.c: 91: }
  1009                           ;ver0.0_20140727.c: 92: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
  1010                           
  1011                           
  1012                           ;ver0.0_20140727.c: 95: putdata[i][1]=x2(i);
  1013  007C  0865               	movf	main@i,w
  1014  007D  3183  238F  3180   	fcall	_x2
  1015  0080  0020               	movlb	0	; select bank0
  1016  0081  00AF               	movwf	??_main
  1017  0082  0865               	movf	main@i,w
  1018  0083  00B0               	movwf	??_main+1
  1019  0084  01B1               	clrf	??_main+2
  1020  0085  0830               	movf	??_main+1,w
  1021  0086  00A0               	movwf	___wmul@multiplier
  1022  0087  0831               	movf	??_main+2,w
  1023  0088  00A1               	movwf	___wmul@multiplier+1
  1024  0089  3005               	movlw	5
  1025  008A  00A2               	movwf	___wmul@multiplicand
  1026  008B  3000               	movlw	0
  1027  008C  00A3               	movwf	___wmul@multiplicand+1
  1028  008D  3183  23BC  3180   	fcall	___wmul
  1029  0090  0020               	movlb	0	; select bank0
  1030  0091  0820               	movf	?___wmul,w
  1031  0092  3E01               	addlw	1
  1032  0093  00B2               	movwf	??_main+3
  1033  0094  3000               	movlw	0
  1034  0095  3D21               	addwfc	?___wmul+1,w
  1035  0096  00B3               	movwf	??_main+4
  1036  0097  3096               	movlw	150
  1037  0098  00B4               	movwf	??_main+5
  1038  0099  3023               	movlw	35
  1039  009A  00B5               	movwf	??_main+6
  1040  009B  0832               	movf	??_main+3,w
  1041  009C  0734               	addwf	??_main+5,w
  1042  009D  00B6               	movwf	??_main+7
  1043  009E  0833               	movf	??_main+4,w
  1044  009F  3D35               	addwfc	??_main+6,w
  1045  00A0  00B7               	movwf	??_main+8
  1046  00A1  0836               	movf	??_main+7,w
  1047  00A2  0086               	movwf	6
  1048  00A3  0837               	movf	??_main+8,w
  1049  00A4  0087               	movwf	7
  1050  00A5  082F               	movf	??_main,w
  1051  00A6  0081               	movwf	1
  1052  00A7  3001               	movlw	1
  1053  00A8  00AF               	movwf	??_main
  1054  00A9  082F               	movf	??_main,w
  1055  00AA  07E5               	addwf	main@i,f
  1056  00AB  3010               	movlw	16
  1057  00AC  0265               	subwf	main@i,w
  1058  00AD  1C03               	skipc
  1059  00AE  287C               	goto	l1605
  1060                           
  1061                           ;ver0.0_20140727.c: 96: OPTION_REG = 0b0000100 ;
  1062  00AF  3004               	movlw	4
  1063  00B0  0021               	movlb	1	; select bank1
  1064  00B1  0095               	movwf	21	;volatile
  1065                           
  1066                           ;ver0.0_20140727.c: 97: TMR0 = 61 ;
  1067  00B2  303D               	movlw	61
  1068  00B3  0020               	movlb	0	; select bank0
  1069  00B4  0095               	movwf	21	;volatile
  1070                           
  1071                           ;ver0.0_20140727.c: 98: TMR0IF = 0 ;
  1072  00B5  110B               	bcf	11,2	;volatile
  1073                           
  1074                           ;ver0.0_20140727.c: 99: time = 0 ;
  1075  00B6  01E7               	clrf	_time
  1076                           
  1077                           ;ver0.0_20140727.c: 100: TMR0IE = 1 ;
  1078  00B7  168B               	bsf	11,5	;volatile
  1079                           
  1080                           ;ver0.0_20140727.c: 101: WPUB = 0xC0;
  1081  00B8  30C0               	movlw	192
  1082  00B9  0024               	movlb	4	; select bank4
  1083  00BA  008D               	movwf	13	;volatile
  1084                           
  1085                           ;ver0.0_20140727.c: 102: nWPUEN = 0;
  1086  00BB  0021               	movlb	1	; select bank1
  1087  00BC  1395               	bcf	21,7	;volatile
  1088                           
  1089                           ;ver0.0_20140727.c: 107: GIE = 1 ;
  1090  00BD  178B               	bsf	11,7	;volatile
  1091  00BE                     l1625:	
  1092                           ;ver0.0_20140727.c: 108: while(1) {
  1093                           
  1094                           
  1095                           ;ver0.0_20140727.c: 110: if(getNum>69)
  1096  00BE  3046               	movlw	70
  1097  00BF  0020               	movlb	0	; select bank0
  1098  00C0  0261               	subwf	main@getNum,w
  1099  00C1  1C03               	skipc
  1100  00C2  28C5               	goto	l1629
  1101                           
  1102                           ;ver0.0_20140727.c: 111: getNum=0;
  1103  00C3  01E1               	clrf	main@getNum
  1104  00C4  28DC               	goto	l1639
  1105  00C5                     l1629:	
  1106                           
  1107                           ;ver0.0_20140727.c: 112: else if(reservingNow){
  1108  00C5  0866               	movf	_reservingNow,w
  1109  00C6  1903               	btfsc	3,2
  1110  00C7  28DC               	goto	l1639
  1111                           
  1112                           ;ver0.0_20140727.c: 113: onetime=getch();
  1113  00C8  3184  242A  3180   	fcall	_getch
  1114  00CB  0020               	movlb	0	; select bank0
  1115  00CC  00AF               	movwf	??_main
  1116  00CD  082F               	movf	??_main,w
  1117  00CE  00E4               	movwf	main@onetime
  1118                           
  1119                           ;ver0.0_20140727.c: 114: getdata[getNum]=onetime;
  1120  00CF  0864               	movf	main@onetime,w
  1121  00D0  00AF               	movwf	??_main
  1122  00D1  0861               	movf	main@getNum,w
  1123  00D2  3EA0               	addlw	main@getdata& (0+255)
  1124  00D3  0086               	movwf	6
  1125  00D4  0187               	clrf	7
  1126  00D5  082F               	movf	??_main,w
  1127  00D6  0081               	movwf	1
  1128                           
  1129                           ;ver0.0_20140727.c: 115: getNum++;
  1130  00D7  3001               	movlw	1
  1131  00D8  00AF               	movwf	??_main
  1132  00D9  082F               	movf	??_main,w
  1133  00DA  07E1               	addwf	main@getNum,f
  1134                           
  1135                           ;ver0.0_20140727.c: 116: reservingNow=0;
  1136  00DB  01E6               	clrf	_reservingNow
  1137  00DC                     l1639:	
  1138                           
  1139                           ;ver0.0_20140727.c: 117: }
  1140                           ;ver0.0_20140727.c: 118: if(onetime==0x47)
  1141  00DC  0864               	movf	main@onetime,w
  1142  00DD  3A47               	xorlw	71
  1143  00DE  1D03               	skipz
  1144  00DF  28E3               	goto	l1643
  1145                           
  1146                           ;ver0.0_20140727.c: 119: resetFlug=1;
  1147  00E0  01E2               	clrf	main@resetFlug
  1148  00E1  0AE2               	incf	main@resetFlug,f
  1149  00E2  28FA               	goto	l1661
  1150  00E3                     l1643:	
  1151                           
  1152                           ;ver0.0_20140727.c: 120: else if(resetFlug){
  1153  00E3  0862               	movf	main@resetFlug,w
  1154  00E4  1903               	btfsc	3,2
  1155  00E5  28FA               	goto	l1661
  1156                           
  1157                           ;ver0.0_20140727.c: 121: if(resetFlug==1){
  1158  00E6  0862               	movf	main@resetFlug,w
  1159  00E7  3A01               	xorlw	1
  1160  00E8  1D03               	skipz
  1161  00E9  28EF               	goto	l1653
  1162                           
  1163                           ;ver0.0_20140727.c: 122: if(onetime==0x65)
  1164  00EA  0864               	movf	main@onetime,w
  1165  00EB  3A65               	xorlw	101
  1166  00EC  1903               	btfsc	3,2
  1167  00ED  28FA               	goto	l1661
  1168  00EE  28F9               	goto	l1659
  1169  00EF                     l1653:	
  1170                           ;ver0.0_20140727.c: 126: }
  1171                           
  1172                           ;ver0.0_20140727.c: 124: else
  1173                           ;ver0.0_20140727.c: 125: resetFlug=0;
  1174                           
  1175                           
  1176                           ;ver0.0_20140727.c: 127: else if(resetFlug==2){
  1177  00EF  0862               	movf	main@resetFlug,w
  1178  00F0  3A02               	xorlw	2
  1179  00F1  1D03               	skipz
  1180  00F2  28FA               	goto	l1661
  1181                           
  1182                           ;ver0.0_20140727.c: 128: if(onetime=0x74)
  1183  00F3  3074               	movlw	116
  1184  00F4  00AF               	movwf	??_main
  1185  00F5  082F               	movf	??_main,w
  1186  00F6  00E4               	movwf	main@onetime
  1187                           
  1188                           ;ver0.0_20140727.c: 129: getNum=0;
  1189  00F7  01E1               	clrf	main@getNum
  1190  00F8  28FA               	goto	l1661
  1191  00F9                     l1659:	
  1192                           
  1193                           ;ver0.0_20140727.c: 130: else
  1194                           ;ver0.0_20140727.c: 131: resetFlug=0;
  1195  00F9  01E2               	clrf	main@resetFlug
  1196  00FA                     l1661:	
  1197                           
  1198                           ;ver0.0_20140727.c: 132: }
  1199                           ;ver0.0_20140727.c: 133: }
  1200                           ;ver0.0_20140727.c: 134: if(getNum==64){
  1201  00FA  0861               	movf	main@getNum,w
  1202  00FB  3A40               	xorlw	64
  1203  00FC  1D03               	skipz
  1204  00FD  2905               	goto	l1667
  1205                           
  1206                           ;ver0.0_20140727.c: 135: if(onetime==0x0A)
  1207  00FE  0864               	movf	main@onetime,w
  1208  00FF  3A0A               	xorlw	10
  1209  0100  1D03               	skipz
  1210  0101  2913               	goto	l1675
  1211                           
  1212                           ;ver0.0_20140727.c: 136: gettingSuccess=1;
  1213  0102  01E0               	clrf	main@gettingSuccess
  1214  0103  0AE0               	incf	main@gettingSuccess,f
  1215                           
  1216                           ;ver0.0_20140727.c: 137: }
  1217  0104  2913               	goto	l1675
  1218  0105                     l1667:	
  1219                           
  1220                           ;ver0.0_20140727.c: 138: else if(gettingSuccess==1){
  1221  0105  0860               	movf	main@gettingSuccess,w
  1222  0106  3A01               	xorlw	1
  1223  0107  1D03               	skipz
  1224  0108  2913               	goto	l1675
  1225                           
  1226                           ;ver0.0_20140727.c: 139: if(onetime==0x0B)
  1227  0109  0864               	movf	main@onetime,w
  1228  010A  3A0B               	xorlw	11
  1229  010B  1D03               	skipz
  1230  010C  2912               	goto	l1673
  1231                           
  1232                           ;ver0.0_20140727.c: 140: gettingSuccess=2;
  1233  010D  3002               	movlw	2
  1234  010E  00AF               	movwf	??_main
  1235  010F  082F               	movf	??_main,w
  1236  0110  00E0               	movwf	main@gettingSuccess
  1237  0111  2913               	goto	l1675
  1238  0112                     l1673:	
  1239                           
  1240                           ;ver0.0_20140727.c: 141: else
  1241                           ;ver0.0_20140727.c: 142: gettingSuccess=0;
  1242  0112  01E0               	clrf	main@gettingSuccess
  1243  0113                     l1675:	
  1244                           
  1245                           ;ver0.0_20140727.c: 143: }
  1246                           ;ver0.0_20140727.c: 144: if(gettingSuccess==2){
  1247  0113  0860               	movf	main@gettingSuccess,w
  1248  0114  3A02               	xorlw	2
  1249  0115  1D03               	skipz
  1250  0116  28BE               	goto	l1625
  1251                           
  1252                           ;ver0.0_20140727.c: 145: gettingSuccess=0;
  1253  0117  01E0               	clrf	main@gettingSuccess
  1254                           
  1255                           ;ver0.0_20140727.c: 146: for(i=1;i<17;i++){
  1256  0118  01E5               	clrf	main@i
  1257  0119  0AE5               	incf	main@i,f
  1258  011A  3011               	movlw	17
  1259  011B  0265               	subwf	main@i,w
  1260  011C  1803               	btfsc	3,0
  1261  011D  2957               	goto	l244
  1262  011E                     l1685:	
  1263                           
  1264                           ;ver0.0_20140727.c: 147: for(j=0;j<2;j++){
  1265  011E  01E3               	clrf	main@j
  1266  011F  3002               	movlw	2
  1267  0120  0263               	subwf	main@j,w
  1268  0121  1803               	btfsc	3,0
  1269  0122  294F               	goto	l1699
  1270  0123                     l1691:	
  1271                           
  1272                           ;ver0.0_20140727.c: 148: n=(i-1)*4+j;
  1273  0123  0865               	movf	main@i,w
  1274  0124  00AF               	movwf	??_main
  1275  0125  3001               	movlw	1
  1276  0126                     u1905:	
  1277  0126  35AF               	lslf	??_main,f
  1278  0127  3EFF               	addlw	-1
  1279  0128  1D03               	skipz
  1280  0129  2926               	goto	u1905
  1281  012A  352F               	lslf	??_main,w
  1282  012B  0763               	addwf	main@j,w
  1283  012C  3EFC               	addlw	252
  1284  012D  00B0               	movwf	??_main+1
  1285  012E  0830               	movf	??_main+1,w
  1286  012F  00DF               	movwf	main@n
  1287                           
  1288                           ;ver0.0_20140727.c: 149: getKeeping[i][j]=getdata[n];
  1289  0130  085F               	movf	main@n,w
  1290  0131  3EA0               	addlw	main@getdata& (0+255)
  1291  0132  0086               	movwf	6
  1292  0133  0187               	clrf	7
  1293  0134  0801               	movf	1,w
  1294  0135  00AF               	movwf	??_main
  1295  0136  0865               	movf	main@i,w
  1296  0137  00B0               	movwf	??_main+1
  1297  0138  3001               	movlw	1
  1298  0139                     u1915:	
  1299  0139  35B0               	lslf	??_main+1,f
  1300  013A  0B89               	decfsz	9,f
  1301  013B  2939               	goto	u1915
  1302  013C  303E               	movlw	main@getKeeping& (0+255)
  1303  013D  0730               	addwf	??_main+1,w
  1304  013E  00B1               	movwf	??_main+2
  1305  013F  0863               	movf	main@j,w
  1306  0140  0731               	addwf	??_main+2,w
  1307  0141  00B2               	movwf	??_main+3
  1308  0142  0832               	movf	??_main+3,w
  1309  0143  0086               	movwf	6
  1310  0144  0187               	clrf	7
  1311  0145  082F               	movf	??_main,w
  1312  0146  0081               	movwf	1
  1313  0147  3001               	movlw	1
  1314  0148  00AF               	movwf	??_main
  1315  0149  082F               	movf	??_main,w
  1316  014A  07E3               	addwf	main@j,f
  1317  014B  3002               	movlw	2
  1318  014C  0263               	subwf	main@j,w
  1319  014D  1C03               	skipc
  1320  014E  2923               	goto	l1691
  1321  014F                     l1699:	
  1322  014F  3001               	movlw	1
  1323  0150  00AF               	movwf	??_main
  1324  0151  082F               	movf	??_main,w
  1325  0152  07E5               	addwf	main@i,f
  1326  0153  3011               	movlw	17
  1327  0154  0265               	subwf	main@i,w
  1328  0155  1C03               	skipc
  1329  0156  291E               	goto	l1685
  1330  0157                     l244:	
  1331                           
  1332                           ;ver0.0_20140727.c: 150: }
  1333                           ;ver0.0_20140727.c: 151: }
  1334                           ;ver0.0_20140727.c: 152: for(i=1;i<17;i++){
  1335  0157  01E5               	clrf	main@i
  1336  0158  0AE5               	incf	main@i,f
  1337  0159                     L3:	
  1338  0159  3011               	movlw	17
  1339  015A  0265               	subwf	main@i,w
  1340  015B  1803               	btfsc	3,0
  1341  015C  28BE               	goto	l1625
  1342                           
  1343                           ;ver0.0_20140727.c: 154: putdata[i][0]=getKeeping[i][0]&0b11111110;
  1344  015D  3565               	lslf	main@i,w
  1345  015E  3E3E               	addlw	main@getKeeping& (0+255)
  1346  015F  0086               	movwf	6
  1347  0160  0187               	clrf	7
  1348  0161  0801               	movf	1,w
  1349  0162  39FE               	andlw	254
  1350  0163  00AF               	movwf	??_main
  1351  0164  0865               	movf	main@i,w
  1352  0165  00B0               	movwf	??_main+1
  1353  0166  01B1               	clrf	??_main+2
  1354  0167  0830               	movf	??_main+1,w
  1355  0168  00A0               	movwf	___wmul@multiplier
  1356  0169  0831               	movf	??_main+2,w
  1357  016A  00A1               	movwf	___wmul@multiplier+1
  1358  016B  3005               	movlw	5
  1359  016C  00A2               	movwf	___wmul@multiplicand
  1360  016D  3000               	movlw	0
  1361  016E  00A3               	movwf	___wmul@multiplicand+1
  1362  016F  3183  23BC  3180   	fcall	___wmul
  1363  0172  3096               	movlw	150
  1364  0173  0020               	movlb	0	; select bank0
  1365  0174  00B2               	movwf	??_main+3
  1366  0175  3023               	movlw	35
  1367  0176  00B3               	movwf	??_main+4
  1368  0177  0820               	movf	?___wmul,w
  1369  0178  0732               	addwf	??_main+3,w
  1370  0179  00B4               	movwf	??_main+5
  1371  017A  0821               	movf	?___wmul+1,w
  1372  017B  3D33               	addwfc	??_main+4,w
  1373  017C  00B5               	movwf	??_main+6
  1374  017D  0834               	movf	??_main+5,w
  1375  017E  0086               	movwf	6
  1376  017F  0835               	movf	??_main+6,w
  1377  0180  0087               	movwf	7
  1378  0181  082F               	movf	??_main,w
  1379  0182  0081               	movwf	1
  1380                           
  1381                           ;ver0.0_20140727.c: 156: putdata[i][2]=getKeeping[i][1]&0b00001111;
  1382  0183  1403               	setc
  1383  0184  0D65               	rlf	main@i,w
  1384  0185  3E3E               	addlw	main@getKeeping& (0+255)
  1385  0186  0086               	movwf	6
  1386  0187  0187               	clrf	7
  1387  0188  0801               	movf	1,w
  1388  0189  390F               	andlw	15
  1389  018A  00AF               	movwf	??_main
  1390  018B  0865               	movf	main@i,w
  1391  018C  00B0               	movwf	??_main+1
  1392  018D  01B1               	clrf	??_main+2
  1393  018E  0830               	movf	??_main+1,w
  1394  018F  00A0               	movwf	___wmul@multiplier
  1395  0190  0831               	movf	??_main+2,w
  1396  0191  00A1               	movwf	___wmul@multiplier+1
  1397  0192  3005               	movlw	5
  1398  0193  00A2               	movwf	___wmul@multiplicand
  1399  0194  3000               	movlw	0
  1400  0195  00A3               	movwf	___wmul@multiplicand+1
  1401  0196  3183  23BC  3180   	fcall	___wmul
  1402  0199  0020               	movlb	0	; select bank0
  1403  019A  0820               	movf	?___wmul,w
  1404  019B  3E02               	addlw	2
  1405  019C  00B2               	movwf	??_main+3
  1406  019D  3000               	movlw	0
  1407  019E  3D21               	addwfc	?___wmul+1,w
  1408  019F  00B3               	movwf	??_main+4
  1409  01A0  3096               	movlw	150
  1410  01A1  00B4               	movwf	??_main+5
  1411  01A2  3023               	movlw	35
  1412  01A3  00B5               	movwf	??_main+6
  1413  01A4  0832               	movf	??_main+3,w
  1414  01A5  0734               	addwf	??_main+5,w
  1415  01A6  00B6               	movwf	??_main+7
  1416  01A7  0833               	movf	??_main+4,w
  1417  01A8  3D35               	addwfc	??_main+6,w
  1418  01A9  00B7               	movwf	??_main+8
  1419  01AA  0836               	movf	??_main+7,w
  1420  01AB  0086               	movwf	6
  1421  01AC  0837               	movf	??_main+8,w
  1422  01AD  0087               	movwf	7
  1423  01AE  082F               	movf	??_main,w
  1424  01AF  0081               	movwf	1
  1425                           
  1426                           ;ver0.0_20140727.c: 158: putdata[i][3]=(getKeeping[i][0]&0b00000001)|((getKeeping[i][1]&
      +                          0b10000000)>>6);
  1427  01B0  1403               	setc
  1428  01B1  0D65               	rlf	main@i,w
  1429  01B2  3E3E               	addlw	main@getKeeping& (0+255)
  1430  01B3  0086               	movwf	6
  1431  01B4  0187               	clrf	7
  1432  01B5  0801               	movf	1,w
  1433  01B6  00AF               	movwf	??_main
  1434  01B7  3006               	movlw	6
  1435  01B8                     u1955:	
  1436  01B8  36AF               	lsrf	??_main,f
  1437  01B9  0B89               	decfsz	9,f
  1438  01BA  29B8               	goto	u1955
  1439  01BB  3002               	movlw	2
  1440  01BC  052F               	andwf	??_main,w
  1441  01BD  00B0               	movwf	??_main+1
  1442  01BE  3565               	lslf	main@i,w
  1443  01BF  3E3E               	addlw	main@getKeeping& (0+255)
  1444  01C0  0086               	movwf	6
  1445  01C1  0187               	clrf	7
  1446  01C2  0801               	movf	1,w
  1447  01C3  3901               	andlw	1
  1448  01C4  0430               	iorwf	??_main+1,w
  1449  01C5  00B1               	movwf	??_main+2
  1450  01C6  0865               	movf	main@i,w
  1451  01C7  00B2               	movwf	??_main+3
  1452  01C8  01B3               	clrf	??_main+4
  1453  01C9  0832               	movf	??_main+3,w
  1454  01CA  00A0               	movwf	___wmul@multiplier
  1455  01CB  0833               	movf	??_main+4,w
  1456  01CC  00A1               	movwf	___wmul@multiplier+1
  1457  01CD  3005               	movlw	5
  1458  01CE  00A2               	movwf	___wmul@multiplicand
  1459  01CF  3000               	movlw	0
  1460  01D0  00A3               	movwf	___wmul@multiplicand+1
  1461  01D1  3183  23BC  3180   	fcall	___wmul
  1462  01D4  0020               	movlb	0	; select bank0
  1463  01D5  0820               	movf	?___wmul,w
  1464  01D6  3E03               	addlw	3
  1465  01D7  00B4               	movwf	??_main+5
  1466  01D8  3000               	movlw	0
  1467  01D9  3D21               	addwfc	?___wmul+1,w
  1468  01DA  00B5               	movwf	??_main+6
  1469  01DB  3096               	movlw	150
  1470  01DC  00B6               	movwf	??_main+7
  1471  01DD  3023               	movlw	35
  1472  01DE  00B7               	movwf	??_main+8
  1473  01DF  0834               	movf	??_main+5,w
  1474  01E0  0736               	addwf	??_main+7,w
  1475  01E1  00B8               	movwf	??_main+9
  1476  01E2  0835               	movf	??_main+6,w
  1477  01E3  3D37               	addwfc	??_main+8,w
  1478  01E4  00B9               	movwf	??_main+10
  1479  01E5  0838               	movf	??_main+9,w
  1480  01E6  0086               	movwf	6
  1481  01E7  0839               	movf	??_main+10,w
  1482  01E8  0087               	movwf	7
  1483  01E9  0831               	movf	??_main+2,w
  1484  01EA  0081               	movwf	1
  1485                           
  1486                           ;ver0.0_20140727.c: 159: if(i==16)
  1487  01EB  0865               	movf	main@i,w
  1488  01EC  3A10               	xorlw	16
  1489  01ED  1D03               	skipz
  1490  01EE  2A11               	goto	l249
  1491                           
  1492                           ;ver0.0_20140727.c: 160: putdata[i][3]=putdata[i][3]|0b10110000;
  1493  01EF  0865               	movf	main@i,w
  1494  01F0  00AF               	movwf	??_main
  1495  01F1  01B0               	clrf	??_main+1
  1496  01F2  082F               	movf	??_main,w
  1497  01F3  00A0               	movwf	___wmul@multiplier
  1498  01F4  0830               	movf	??_main+1,w
  1499  01F5  00A1               	movwf	___wmul@multiplier+1
  1500  01F6  3005               	movlw	5
  1501  01F7  00A2               	movwf	___wmul@multiplicand
  1502  01F8  3000               	movlw	0
  1503  01F9  00A3               	movwf	___wmul@multiplicand+1
  1504  01FA  3183  23BC  3180   	fcall	___wmul
  1505  01FD  0020               	movlb	0	; select bank0
  1506  01FE  0820               	movf	?___wmul,w
  1507  01FF  3E03               	addlw	3
  1508  0200  00B1               	movwf	??_main+2
  1509  0201  3000               	movlw	0
  1510  0202  3D21               	addwfc	?___wmul+1,w
  1511  0203  00B2               	movwf	??_main+3
  1512  0204  3096               	movlw	150
  1513  0205  00B3               	movwf	??_main+4
  1514  0206  3023               	movlw	35
  1515  0207  00B4               	movwf	??_main+5
  1516  0208  0831               	movf	??_main+2,w
  1517  0209  0733               	addwf	??_main+4,w
  1518  020A  0086               	movwf	6
  1519  020B  0832               	movf	??_main+3,w
  1520  020C  3D34               	addwfc	??_main+5,w
  1521  020D  0087               	movwf	7
  1522  020E  0801               	movf	1,w
  1523  020F  38B0               	iorlw	176
  1524  0210  2A34               	goto	L2
  1525  0211                     l249:	
  1526                           
  1527                           ;ver0.0_20140727.c: 161: else if(i%2==0)
  1528  0211  1865               	btfsc	main@i,0
  1529  0212  2A5A               	goto	l250
  1530                           
  1531                           ;ver0.0_20140727.c: 162: putdata[i][3]=putdata[i][3]|0b10010000;
  1532  0213  0865               	movf	main@i,w
  1533  0214  00AF               	movwf	??_main
  1534  0215  01B0               	clrf	??_main+1
  1535  0216  082F               	movf	??_main,w
  1536  0217  00A0               	movwf	___wmul@multiplier
  1537  0218  0830               	movf	??_main+1,w
  1538  0219  00A1               	movwf	___wmul@multiplier+1
  1539  021A  3005               	movlw	5
  1540  021B  00A2               	movwf	___wmul@multiplicand
  1541  021C  3000               	movlw	0
  1542  021D  00A3               	movwf	___wmul@multiplicand+1
  1543  021E  3183  23BC  3180   	fcall	___wmul
  1544  0221  0020               	movlb	0	; select bank0
  1545  0222  0820               	movf	?___wmul,w
  1546  0223  3E03               	addlw	3
  1547  0224  00B1               	movwf	??_main+2
  1548  0225  3000               	movlw	0
  1549  0226  3D21               	addwfc	?___wmul+1,w
  1550  0227  00B2               	movwf	??_main+3
  1551  0228  3096               	movlw	150
  1552  0229  00B3               	movwf	??_main+4
  1553  022A  3023               	movlw	35
  1554  022B  00B4               	movwf	??_main+5
  1555  022C  0831               	movf	??_main+2,w
  1556  022D  0733               	addwf	??_main+4,w
  1557  022E  0086               	movwf	6
  1558  022F  0832               	movf	??_main+3,w
  1559  0230  3D34               	addwfc	??_main+5,w
  1560  0231  0087               	movwf	7
  1561  0232  0801               	movf	1,w
  1562  0233  3890               	iorlw	144
  1563  0234                     L2:	
  1564  0234  00B5               	movwf	??_main+6
  1565  0235  0865               	movf	main@i,w
  1566  0236  00B6               	movwf	??_main+7
  1567  0237  01B7               	clrf	??_main+8
  1568  0238  0836               	movf	??_main+7,w
  1569  0239  00A0               	movwf	___wmul@multiplier
  1570  023A  0837               	movf	??_main+8,w
  1571  023B  00A1               	movwf	___wmul@multiplier+1
  1572  023C  3005               	movlw	5
  1573  023D  00A2               	movwf	___wmul@multiplicand
  1574  023E  3000               	movlw	0
  1575  023F  00A3               	movwf	___wmul@multiplicand+1
  1576  0240  3183  23BC  3180   	fcall	___wmul
  1577  0243  0020               	movlb	0	; select bank0
  1578  0244  0820               	movf	?___wmul,w
  1579  0245  3E03               	addlw	3
  1580  0246  00B8               	movwf	??_main+9
  1581  0247  3000               	movlw	0
  1582  0248  3D21               	addwfc	?___wmul+1,w
  1583  0249  00B9               	movwf	??_main+10
  1584  024A  3096               	movlw	150
  1585  024B  00BA               	movwf	??_main+11
  1586  024C  3023               	movlw	35
  1587  024D  00BB               	movwf	??_main+12
  1588  024E  0838               	movf	??_main+9,w
  1589  024F  073A               	addwf	??_main+11,w
  1590  0250  00BC               	movwf	??_main+13
  1591  0251  0839               	movf	??_main+10,w
  1592  0252  3D3B               	addwfc	??_main+12,w
  1593  0253  00BD               	movwf	??_main+14
  1594  0254  083C               	movf	??_main+13,w
  1595  0255  0086               	movwf	6
  1596  0256  083D               	movf	??_main+14,w
  1597  0257  0087               	movwf	7
  1598  0258  0835               	movf	??_main+6,w
  1599  0259  0081               	movwf	1
  1600  025A                     l250:	
  1601                           
  1602                           ;ver0.0_20140727.c: 164: putdata[i][4]=(getKeeping[i][1]&0b01110000)>>4;
  1603  025A  1403               	setc
  1604  025B  0D65               	rlf	main@i,w
  1605  025C  3E3E               	addlw	main@getKeeping& (0+255)
  1606  025D  0086               	movwf	6
  1607  025E  0187               	clrf	7
  1608  025F  0801               	movf	1,w
  1609  0260  00AF               	movwf	??_main
  1610  0261  3004               	movlw	4
  1611  0262                     u1985:	
  1612  0262  36AF               	lsrf	??_main,f
  1613  0263  0B89               	decfsz	9,f
  1614  0264  2A62               	goto	u1985
  1615  0265  082F               	movf	??_main,w
  1616  0266  3907               	andlw	7
  1617  0267  00B0               	movwf	??_main+1
  1618  0268  0865               	movf	main@i,w
  1619  0269  00B1               	movwf	??_main+2
  1620  026A  01B2               	clrf	??_main+3
  1621  026B  0831               	movf	??_main+2,w
  1622  026C  00A0               	movwf	___wmul@multiplier
  1623  026D  0832               	movf	??_main+3,w
  1624  026E  00A1               	movwf	___wmul@multiplier+1
  1625  026F  3005               	movlw	5
  1626  0270  00A2               	movwf	___wmul@multiplicand
  1627  0271  3000               	movlw	0
  1628  0272  00A3               	movwf	___wmul@multiplicand+1
  1629  0273  3183  23BC  3180   	fcall	___wmul
  1630  0276  0020               	movlb	0	; select bank0
  1631  0277  0820               	movf	?___wmul,w
  1632  0278  3E04               	addlw	4
  1633  0279  00B3               	movwf	??_main+4
  1634  027A  3000               	movlw	0
  1635  027B  3D21               	addwfc	?___wmul+1,w
  1636  027C  00B4               	movwf	??_main+5
  1637  027D  3096               	movlw	150
  1638  027E  00B5               	movwf	??_main+6
  1639  027F  3023               	movlw	35
  1640  0280  00B6               	movwf	??_main+7
  1641  0281  0833               	movf	??_main+4,w
  1642  0282  0735               	addwf	??_main+6,w
  1643  0283  00B7               	movwf	??_main+8
  1644  0284  0834               	movf	??_main+5,w
  1645  0285  3D36               	addwfc	??_main+7,w
  1646  0286  00B8               	movwf	??_main+9
  1647  0287  0837               	movf	??_main+8,w
  1648  0288  0086               	movwf	6
  1649  0289  0838               	movf	??_main+9,w
  1650  028A  0087               	movwf	7
  1651  028B  0830               	movf	??_main+1,w
  1652  028C  0081               	movwf	1
  1653  028D  3001               	movlw	1
  1654  028E  00AF               	movwf	??_main
  1655  028F  082F               	movf	??_main,w
  1656  0290  07E5               	addwf	main@i,f
  1657  0291  2959               	goto	L3
  1658  0292                     __end_of_main:	
  1659                           
  1660                           	psect	text1
  1661  038F                     __ptext1:	
  1662 ;; *************** function _x2 *****************
  1663 ;; Defined at:
  1664 ;;		line 60 in file "ver0.0_20140727.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  num             1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  num             1   14[BANK0 ] unsigned char 
  1669 ;;  ret             1   13[BANK0 ] unsigned char 
  1670 ;;  i               1   12[BANK0 ] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      unsigned char 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;Total ram usage:        6 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    4
  1687 ;; This function calls:
  1688 ;;		___awdiv
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _x2
  1696  038F                     _x2:	
  1697                           
  1698                           ;incstack = 0
  1699                           ; Regs used in _x2: [wreg+status,2+status,0+pclath+cstack]
  1700                           ;x2@num stored from wreg
  1701  038F  0020               	movlb	0	; select bank0
  1702  0390  00AE               	movwf	x2@num
  1703                           
  1704                           ;ver0.0_20140727.c: 61: char i,ret=0;
  1705  0391  01AD               	clrf	x2@ret
  1706                           
  1707                           ;ver0.0_20140727.c: 62: if(num%2)
  1708  0392  1C2E               	btfss	x2@num,0
  1709  0393  2B96               	goto	l1333
  1710                           
  1711                           ;ver0.0_20140727.c: 63: ret=1;
  1712  0394  01AD               	clrf	x2@ret
  1713  0395  0AAD               	incf	x2@ret,f
  1714  0396                     l1333:	
  1715                           
  1716                           ;ver0.0_20140727.c: 64: num=7-num/2;
  1717  0396  3002               	movlw	2
  1718  0397  00A0               	movwf	___awdiv@divisor
  1719  0398  3000               	movlw	0
  1720  0399  00A1               	movwf	___awdiv@divisor+1
  1721  039A  082E               	movf	x2@num,w
  1722  039B  00A9               	movwf	??_x2
  1723  039C  01AA               	clrf	??_x2+1
  1724  039D  0829               	movf	??_x2,w
  1725  039E  00A2               	movwf	___awdiv@dividend
  1726  039F  082A               	movf	??_x2+1,w
  1727  03A0  00A3               	movwf	___awdiv@dividend+1
  1728  03A1  3183  233B  3183   	fcall	___awdiv
  1729  03A4  0020               	movlb	0	; select bank0
  1730  03A5  0820               	movf	?___awdiv,w
  1731  03A6  3AFF               	xorlw	255
  1732  03A7  3E01               	addlw	1
  1733  03A8  3E07               	addlw	7
  1734  03A9  00AB               	movwf	??_x2+2
  1735  03AA  082B               	movf	??_x2+2,w
  1736  03AB  00AE               	movwf	x2@num
  1737                           
  1738                           ;ver0.0_20140727.c: 65: for(i=0;i<num;i++)
  1739  03AC  01AC               	clrf	x2@i
  1740  03AD                     l1339:	
  1741  03AD  082E               	movf	x2@num,w
  1742  03AE  022C               	subwf	x2@i,w
  1743  03AF  1803               	btfsc	3,0
  1744  03B0  2BBA               	goto	l1341
  1745                           
  1746                           ;ver0.0_20140727.c: 66: ret=ret*2;
  1747  03B1  352D               	lslf	x2@ret,w
  1748  03B2  00A9               	movwf	??_x2
  1749  03B3  0829               	movf	??_x2,w
  1750  03B4  00AD               	movwf	x2@ret
  1751  03B5  3001               	movlw	1
  1752  03B6  00A9               	movwf	??_x2
  1753  03B7  0829               	movf	??_x2,w
  1754  03B8  07AC               	addwf	x2@i,f
  1755  03B9  2BAD               	goto	l1339
  1756  03BA                     l1341:	
  1757                           
  1758                           ;ver0.0_20140727.c: 67: return ret;
  1759  03BA  082D               	movf	x2@ret,w
  1760  03BB  0008               	return
  1761  03BC                     __end_of_x2:	
  1762                           
  1763                           	psect	text2
  1764  033B                     __ptext2:	
  1765 ;; *************** function ___awdiv *****************
  1766 ;; Defined at:
  1767 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awdiv.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  divisor         2    0[BANK0 ] int 
  1770 ;;  dividend        2    2[BANK0 ] int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  quotient        2    7[BANK0 ] int 
  1773 ;;  sign            1    6[BANK0 ] unsigned char 
  1774 ;;  counter         1    5[BANK0 ] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2    0[BANK0 ] int 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1785 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1786 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1788 ;;Total ram usage:        9 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    3
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_x2
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function ___awdiv
  1800  033B                     ___awdiv:	
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1804  033B  0020               	movlb	0	; select bank0
  1805  033C  01A6               	clrf	___awdiv@sign
  1806  033D  1FA1               	btfss	___awdiv@divisor+1,7
  1807  033E  2B46               	goto	l1241
  1808  033F  09A0               	comf	___awdiv@divisor,f
  1809  0340  09A1               	comf	___awdiv@divisor+1,f
  1810  0341  0AA0               	incf	___awdiv@divisor,f
  1811  0342  1903               	skipnz
  1812  0343  0AA1               	incf	___awdiv@divisor+1,f
  1813  0344  01A6               	clrf	___awdiv@sign
  1814  0345  0AA6               	incf	___awdiv@sign,f
  1815  0346                     l1241:	
  1816  0346  1FA3               	btfss	___awdiv@dividend+1,7
  1817  0347  2B51               	goto	l1247
  1818  0348  09A2               	comf	___awdiv@dividend,f
  1819  0349  09A3               	comf	___awdiv@dividend+1,f
  1820  034A  0AA2               	incf	___awdiv@dividend,f
  1821  034B  1903               	skipnz
  1822  034C  0AA3               	incf	___awdiv@dividend+1,f
  1823  034D  3001               	movlw	1
  1824  034E  00A4               	movwf	??___awdiv
  1825  034F  0824               	movf	??___awdiv,w
  1826  0350  06A6               	xorwf	___awdiv@sign,f
  1827  0351                     l1247:	
  1828  0351  01A7               	clrf	___awdiv@quotient
  1829  0352  01A8               	clrf	___awdiv@quotient+1
  1830  0353  0821               	movf	___awdiv@divisor+1,w
  1831  0354  0420               	iorwf	___awdiv@divisor,w
  1832  0355  1903               	skipnz
  1833  0356  2B80               	goto	l1269
  1834  0357  01A5               	clrf	___awdiv@counter
  1835  0358  0AA5               	incf	___awdiv@counter,f
  1836  0359                     l1257:	
  1837  0359  1BA1               	btfsc	___awdiv@divisor+1,7
  1838  035A  2B65               	goto	l1259
  1839  035B  3001               	movlw	1
  1840  035C                     u1045:	
  1841  035C  35A0               	lslf	___awdiv@divisor,f
  1842  035D  0DA1               	rlf	___awdiv@divisor+1,f
  1843  035E  0B89               	decfsz	9,f
  1844  035F  2B5C               	goto	u1045
  1845  0360  3001               	movlw	1
  1846  0361  00A4               	movwf	??___awdiv
  1847  0362  0824               	movf	??___awdiv,w
  1848  0363  07A5               	addwf	___awdiv@counter,f
  1849  0364  2B59               	goto	l1257
  1850  0365                     l1259:	
  1851  0365  3001               	movlw	1
  1852  0366                     u1065:	
  1853  0366  35A7               	lslf	___awdiv@quotient,f
  1854  0367  0DA8               	rlf	___awdiv@quotient+1,f
  1855  0368  0B89               	decfsz	9,f
  1856  0369  2B66               	goto	u1065
  1857  036A  0821               	movf	___awdiv@divisor+1,w
  1858  036B  0223               	subwf	___awdiv@dividend+1,w
  1859  036C  1D03               	skipz
  1860  036D  2B70               	goto	u1075
  1861  036E  0820               	movf	___awdiv@divisor,w
  1862  036F  0222               	subwf	___awdiv@dividend,w
  1863  0370                     u1075:	
  1864  0370  1C03               	skipc
  1865  0371  2B77               	goto	l1265
  1866  0372  0820               	movf	___awdiv@divisor,w
  1867  0373  02A2               	subwf	___awdiv@dividend,f
  1868  0374  0821               	movf	___awdiv@divisor+1,w
  1869  0375  3BA3               	subwfb	___awdiv@dividend+1,f
  1870  0376  1427               	bsf	___awdiv@quotient,0
  1871  0377                     l1265:	
  1872  0377  3001               	movlw	1
  1873  0378                     u1085:	
  1874  0378  36A1               	lsrf	___awdiv@divisor+1,f
  1875  0379  0CA0               	rrf	___awdiv@divisor,f
  1876  037A  0B89               	decfsz	9,f
  1877  037B  2B78               	goto	u1085
  1878  037C  3001               	movlw	1
  1879  037D  02A5               	subwf	___awdiv@counter,f
  1880  037E  1D03               	btfss	3,2
  1881  037F  2B65               	goto	l1259
  1882  0380                     l1269:	
  1883  0380  0826               	movf	___awdiv@sign,w
  1884  0381  1903               	btfsc	3,2
  1885  0382  2B88               	goto	l1273
  1886  0383  09A7               	comf	___awdiv@quotient,f
  1887  0384  09A8               	comf	___awdiv@quotient+1,f
  1888  0385  0AA7               	incf	___awdiv@quotient,f
  1889  0386  1903               	skipnz
  1890  0387  0AA8               	incf	___awdiv@quotient+1,f
  1891  0388                     l1273:	
  1892  0388  0828               	movf	___awdiv@quotient+1,w
  1893  0389  01A1               	clrf	?___awdiv+1
  1894  038A  07A1               	addwf	?___awdiv+1,f
  1895  038B  0827               	movf	___awdiv@quotient,w
  1896  038C  01A0               	clrf	?___awdiv
  1897  038D  07A0               	addwf	?___awdiv,f
  1898  038E  0008               	return
  1899  038F                     __end_of___awdiv:	
  1900                           
  1901                           	psect	text3
  1902  03F7                     __ptext3:	
  1903 ;; *************** function _setpin *****************
  1904 ;; Defined at:
  1905 ;;		line 62 in file "sorce.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;		None               void
  1912 ;; Registers used:
  1913 ;;		wreg, status,2
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _setpin
  1935  03F7                     _setpin:	
  1936                           
  1937                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _setpin: [wreg+status,2]
  1941  03F7  3070               	movlw	112
  1942  03F8  0021               	movlb	1	; select bank1
  1943  03F9  0099               	movwf	25	;volatile
  1944                           
  1945                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1946  03FA  0023               	movlb	3	; select bank3
  1947  03FB  018C               	clrf	12	;volatile
  1948                           
  1949                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1950  03FC  018D               	clrf	13	;volatile
  1951                           
  1952                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1953  03FD  018F               	clrf	15	;volatile
  1954                           
  1955                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1956  03FE  0190               	clrf	16	;volatile
  1957                           
  1958                           ;sorce.c: 69: TRISA = 0b00000000 ;
  1959  03FF  0021               	movlb	1	; select bank1
  1960  0400  018C               	clrf	12	;volatile
  1961                           
  1962                           ;sorce.c: 70: TRISB = 0b00000000 ;
  1963  0401  018D               	clrf	13	;volatile
  1964                           
  1965                           ;sorce.c: 71: TRISC = 0b10110000 ;
  1966  0402  30B0               	movlw	176
  1967  0403  008E               	movwf	14	;volatile
  1968                           
  1969                           ;sorce.c: 72: TRISD = 0b00001100 ;
  1970  0404  300C               	movlw	12
  1971  0405  008F               	movwf	15	;volatile
  1972                           
  1973                           ;sorce.c: 73: TRISE = 0X00 ;
  1974  0406  0190               	clrf	16	;volatile
  1975                           
  1976                           ;sorce.c: 75: PORTA = 0b00000000 ;
  1977  0407  0020               	movlb	0	; select bank0
  1978  0408  018C               	clrf	12	;volatile
  1979                           
  1980                           ;sorce.c: 76: PORTB = 0b00000000 ;
  1981  0409  018D               	clrf	13	;volatile
  1982                           
  1983                           ;sorce.c: 77: PORTC = 0b10000000 ;
  1984  040A  3080               	movlw	128
  1985  040B  008E               	movwf	14	;volatile
  1986                           
  1987                           ;sorce.c: 78: PORTD = 0b00000000 ;
  1988  040C  018F               	clrf	15	;volatile
  1989                           
  1990                           ;sorce.c: 79: PORTE=0x00;
  1991  040D  0190               	clrf	16	;volatile
  1992  040E  0008               	return
  1993  040F                     __end_of_setpin:	
  1994                           
  1995                           	psect	text4
  1996  042A                     __ptext4:	
  1997 ;; *************** function _getch *****************
  1998 ;; Defined at:
  1999 ;;		line 9 in file "uart.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      unsigned char 
  2006 ;; Registers used:
  2007 ;;		wreg
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    3
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _getch
  2029  042A                     _getch:	
  2030  042A                     l271:	
  2031                           ;uart.c: 10: while(!RCIF){}
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _getch: [wreg]
  2035                           
  2036  042A  0020               	movlb	0	; select bank0
  2037  042B  1E91               	btfss	17,5	;volatile
  2038  042C  2C2A               	goto	l271
  2039                           
  2040                           ;uart.c: 11: RCIF=0;
  2041  042D  1291               	bcf	17,5	;volatile
  2042                           
  2043                           ;uart.c: 12: return RCREG;
  2044  042E  0023               	movlb	3	; select bank3
  2045  042F  0819               	movf	25,w	;volatile
  2046  0430  0008               	return
  2047  0431                     __end_of_getch:	
  2048                           
  2049                           	psect	text5
  2050  03BC                     __ptext5:	
  2051 ;; *************** function ___wmul *****************
  2052 ;; Defined at:
  2053 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2056 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  product         2    4[BANK0 ] unsigned int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    0[BANK0 ] unsigned int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2068 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2069 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;Total ram usage:        6 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    3
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function ___wmul
  2084  03BC                     ___wmul:	
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2088  03BC  0020               	movlb	0	; select bank0
  2089  03BD  01A4               	clrf	___wmul@product
  2090  03BE  01A5               	clrf	___wmul@product+1
  2091  03BF                     l1359:	
  2092  03BF  1C20               	btfss	___wmul@multiplier,0
  2093  03C0  2BC5               	goto	l358
  2094  03C1  0822               	movf	___wmul@multiplicand,w
  2095  03C2  07A4               	addwf	___wmul@product,f
  2096  03C3  0823               	movf	___wmul@multiplicand+1,w
  2097  03C4  3DA5               	addwfc	___wmul@product+1,f
  2098  03C5                     l358:	
  2099  03C5  3001               	movlw	1
  2100  03C6                     u1205:	
  2101  03C6  35A2               	lslf	___wmul@multiplicand,f
  2102  03C7  0DA3               	rlf	___wmul@multiplicand+1,f
  2103  03C8  0B89               	decfsz	9,f
  2104  03C9  2BC6               	goto	u1205
  2105  03CA  3001               	movlw	1
  2106  03CB                     u1215:	
  2107  03CB  36A1               	lsrf	___wmul@multiplier+1,f
  2108  03CC  0CA0               	rrf	___wmul@multiplier,f
  2109  03CD  0B89               	decfsz	9,f
  2110  03CE  2BCB               	goto	u1215
  2111  03CF  0821               	movf	___wmul@multiplier+1,w
  2112  03D0  0420               	iorwf	___wmul@multiplier,w
  2113  03D1  1D03               	skipz
  2114  03D2  2BBF               	goto	l1359
  2115  03D3  0825               	movf	___wmul@product+1,w
  2116  03D4  01A1               	clrf	?___wmul+1
  2117  03D5  07A1               	addwf	?___wmul+1,f
  2118  03D6  0824               	movf	___wmul@product,w
  2119  03D7  01A0               	clrf	?___wmul
  2120  03D8  07A0               	addwf	?___wmul,f
  2121  03D9  0008               	return
  2122  03DA                     __end_of___wmul:	
  2123                           
  2124                           	psect	text6
  2125  040F                     __ptext6:	
  2126 ;; *************** function _E2promRead *****************
  2127 ;; Defined at:
  2128 ;;		line 75 in file "ver0.0_20140727.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  adr             1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  adr             1    2[BANK0 ] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      unsigned char 
  2135 ;; Registers used:
  2136 ;;		wreg
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:        3 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    3
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _E2promRead
  2158  040F                     _E2promRead:	
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _E2promRead: [wreg]
  2162                           ;E2promRead@adr stored from wreg
  2163  040F  0020               	movlb	0	; select bank0
  2164  0410  00A2               	movwf	E2promRead@adr
  2165                           
  2166                           ;ver0.0_20140727.c: 77: EEADR = adr;
  2167  0411  0822               	movf	E2promRead@adr,w
  2168  0412  00A0               	movwf	??_E2promRead
  2169  0413  01A1               	clrf	??_E2promRead+1
  2170  0414  0820               	movf	??_E2promRead,w
  2171  0415  0023               	movlb	3	; select bank3
  2172  0416  0091               	movwf	17	;volatile
  2173  0417  0020               	movlb	0	; select bank0
  2174  0418  0821               	movf	??_E2promRead+1,w
  2175  0419  0023               	movlb	3	; select bank3
  2176  041A  0092               	movwf	18	;volatile
  2177                           
  2178                           ;ver0.0_20140727.c: 78: RD = 1;
  2179  041B  1415               	bsf	21,0	;volsfr
  2180                           
  2181                           ;ver0.0_20140727.c: 79: return( EEDATA );
  2182  041C  0813               	movf	19,w	;volatile
  2183  041D  0008               	return
  2184  041E                     __end_of_E2promRead:	
  2185                           
  2186                           	psect	intentry
  2187  0004                     __pintentry:	
  2188 ;; *************** function _InterTimer *****************
  2189 ;; Defined at:
  2190 ;;		line 44 in file "ver0.0_20140727.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;Total ram usage:        1 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    2
  2211 ;; This function calls:
  2212 ;;		_change
  2213 ;; This function is called by:
  2214 ;;		Interrupt level 1
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218  0004                     _InterTimer:	
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2222  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2223  0005  3180               	pagesel	$
  2224  0006  0020               	movlb	0	; select bank0
  2225  0007  087F               	movf	127,w
  2226  0008  00FC               	movwf	??_InterTimer
  2227                           
  2228                           ;ver0.0_20140727.c: 46: if (TMR0IF == 1) {
  2229  0009  1D0B               	btfss	11,2	;volatile
  2230  000A  2816               	goto	i1l199
  2231                           
  2232                           ;ver0.0_20140727.c: 47: TMR0 = 61 ;
  2233  000B  303D               	movlw	61
  2234  000C  0095               	movwf	21	;volatile
  2235                           
  2236                           ;ver0.0_20140727.c: 53: change();
  2237  000D  3182  2292  3180   	fcall	_change
  2238                           
  2239                           ;ver0.0_20140727.c: 54: if(RCIF)
  2240  0010  0020               	movlb	0	; select bank0
  2241  0011  1E91               	btfss	17,5	;volatile
  2242  0012  2815               	goto	i1l198
  2243                           
  2244                           ;ver0.0_20140727.c: 55: reservingNow=1;
  2245  0013  01E6               	clrf	_reservingNow
  2246  0014  0AE6               	incf	_reservingNow,f
  2247  0015                     i1l198:	
  2248                           
  2249                           ;ver0.0_20140727.c: 57: TMR0IF = 0 ;
  2250  0015  110B               	bcf	11,2	;volatile
  2251  0016                     i1l199:	
  2252  0016  087C               	movf	??_InterTimer,w
  2253  0017  00FF               	movwf	127
  2254  0018  107E               	bcf	126,0	;clear compiler interrupt flag
  2255  0019  0009               	retfie
  2256  001A                     __end_of_InterTimer:	
  2257                           
  2258                           	psect	text8
  2259  0292                     __ptext8:	
  2260 ;; *************** function _change *****************
  2261 ;; Defined at:
  2262 ;;		line 28 in file "ver0.0_20140727.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2278 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2279 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2280 ;;Total ram usage:        6 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		i1___wmul
  2285 ;; This function is called by:
  2286 ;;		_InterTimer
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _change
  2292  0292                     _change:	
  2293                           
  2294                           ;ver0.0_20140727.c: 29: ledcount++;
  2295                           
  2296                           ;incstack = 0
  2297                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2298  0292  3001               	movlw	1
  2299  0293  00F6               	movwf	??_change
  2300  0294  0876               	movf	??_change,w
  2301  0295  07FD               	addwf	_ledcount,f
  2302                           
  2303                           ;ver0.0_20140727.c: 31: PORTA=putdata[ledcount][0];
  2304  0296  087D               	movf	_ledcount,w
  2305  0297  00F6               	movwf	??_change
  2306  0298  01F7               	clrf	??_change+1
  2307  0299  0876               	movf	??_change,w
  2308  029A  00F0               	movwf	i1___wmul@multiplier
  2309  029B  0877               	movf	??_change+1,w
  2310  029C  00F1               	movwf	i1___wmul@multiplier+1
  2311  029D  3005               	movlw	5
  2312  029E  00F2               	movwf	i1___wmul@multiplicand
  2313  029F  3000               	movlw	0
  2314  02A0  00F3               	movwf	i1___wmul@multiplicand+1
  2315  02A1  3183  23DA  3182   	fcall	i1___wmul
  2316  02A4  3096               	movlw	150
  2317  02A5  00F8               	movwf	??_change+2
  2318  02A6  3023               	movlw	35
  2319  02A7  00F9               	movwf	??_change+3
  2320  02A8  0870               	movf	?i1___wmul,w
  2321  02A9  0778               	addwf	??_change+2,w
  2322  02AA  0086               	movwf	6
  2323  02AB  0871               	movf	?i1___wmul+1,w
  2324  02AC  3D79               	addwfc	??_change+3,w
  2325  02AD  0087               	movwf	7
  2326  02AE  0801               	movf	1,w
  2327  02AF  0020               	movlb	0	; select bank0
  2328  02B0  008C               	movwf	12	;volatile
  2329                           
  2330                           ;ver0.0_20140727.c: 32: PORTB=putdata[ledcount][1];
  2331  02B1  087D               	movf	_ledcount,w
  2332  02B2  00F6               	movwf	??_change
  2333  02B3  01F7               	clrf	??_change+1
  2334  02B4  0876               	movf	??_change,w
  2335  02B5  00F0               	movwf	i1___wmul@multiplier
  2336  02B6  0877               	movf	??_change+1,w
  2337  02B7  00F1               	movwf	i1___wmul@multiplier+1
  2338  02B8  3005               	movlw	5
  2339  02B9  00F2               	movwf	i1___wmul@multiplicand
  2340  02BA  3000               	movlw	0
  2341  02BB  00F3               	movwf	i1___wmul@multiplicand+1
  2342  02BC  3183  23DA  3182   	fcall	i1___wmul
  2343  02BF  0870               	movf	?i1___wmul,w
  2344  02C0  3E01               	addlw	1
  2345  02C1  00F8               	movwf	??_change+2
  2346  02C2  3000               	movlw	0
  2347  02C3  3D71               	addwfc	?i1___wmul+1,w
  2348  02C4  00F9               	movwf	??_change+3
  2349  02C5  3096               	movlw	150
  2350  02C6  00FA               	movwf	??_change+4
  2351  02C7  3023               	movlw	35
  2352  02C8  00FB               	movwf	??_change+5
  2353  02C9  0878               	movf	??_change+2,w
  2354  02CA  077A               	addwf	??_change+4,w
  2355  02CB  0086               	movwf	6
  2356  02CC  0879               	movf	??_change+3,w
  2357  02CD  3D7B               	addwfc	??_change+5,w
  2358  02CE  0087               	movwf	7
  2359  02CF  0801               	movf	1,w
  2360  02D0  0020               	movlb	0	; select bank0
  2361  02D1  008D               	movwf	13	;volatile
  2362                           
  2363                           ;ver0.0_20140727.c: 33: PORTC=putdata[ledcount][2];
  2364  02D2  087D               	movf	_ledcount,w
  2365  02D3  00F6               	movwf	??_change
  2366  02D4  01F7               	clrf	??_change+1
  2367  02D5  0876               	movf	??_change,w
  2368  02D6  00F0               	movwf	i1___wmul@multiplier
  2369  02D7  0877               	movf	??_change+1,w
  2370  02D8  00F1               	movwf	i1___wmul@multiplier+1
  2371  02D9  3005               	movlw	5
  2372  02DA  00F2               	movwf	i1___wmul@multiplicand
  2373  02DB  3000               	movlw	0
  2374  02DC  00F3               	movwf	i1___wmul@multiplicand+1
  2375  02DD  3183  23DA  3182   	fcall	i1___wmul
  2376  02E0  0870               	movf	?i1___wmul,w
  2377  02E1  3E02               	addlw	2
  2378  02E2  00F8               	movwf	??_change+2
  2379  02E3  3000               	movlw	0
  2380  02E4  3D71               	addwfc	?i1___wmul+1,w
  2381  02E5  00F9               	movwf	??_change+3
  2382  02E6  3096               	movlw	150
  2383  02E7  00FA               	movwf	??_change+4
  2384  02E8  3023               	movlw	35
  2385  02E9  00FB               	movwf	??_change+5
  2386  02EA  0878               	movf	??_change+2,w
  2387  02EB  077A               	addwf	??_change+4,w
  2388  02EC  0086               	movwf	6
  2389  02ED  0879               	movf	??_change+3,w
  2390  02EE  3D7B               	addwfc	??_change+5,w
  2391  02EF  0087               	movwf	7
  2392  02F0  0801               	movf	1,w
  2393  02F1  0020               	movlb	0	; select bank0
  2394  02F2  008E               	movwf	14	;volatile
  2395                           
  2396                           ;ver0.0_20140727.c: 34: PORTD=putdata[ledcount][3];
  2397  02F3  087D               	movf	_ledcount,w
  2398  02F4  00F6               	movwf	??_change
  2399  02F5  01F7               	clrf	??_change+1
  2400  02F6  0876               	movf	??_change,w
  2401  02F7  00F0               	movwf	i1___wmul@multiplier
  2402  02F8  0877               	movf	??_change+1,w
  2403  02F9  00F1               	movwf	i1___wmul@multiplier+1
  2404  02FA  3005               	movlw	5
  2405  02FB  00F2               	movwf	i1___wmul@multiplicand
  2406  02FC  3000               	movlw	0
  2407  02FD  00F3               	movwf	i1___wmul@multiplicand+1
  2408  02FE  3183  23DA  3182   	fcall	i1___wmul
  2409  0301  0870               	movf	?i1___wmul,w
  2410  0302  3E03               	addlw	3
  2411  0303  00F8               	movwf	??_change+2
  2412  0304  3000               	movlw	0
  2413  0305  3D71               	addwfc	?i1___wmul+1,w
  2414  0306  00F9               	movwf	??_change+3
  2415  0307  3096               	movlw	150
  2416  0308  00FA               	movwf	??_change+4
  2417  0309  3023               	movlw	35
  2418  030A  00FB               	movwf	??_change+5
  2419  030B  0878               	movf	??_change+2,w
  2420  030C  077A               	addwf	??_change+4,w
  2421  030D  0086               	movwf	6
  2422  030E  0879               	movf	??_change+3,w
  2423  030F  3D7B               	addwfc	??_change+5,w
  2424  0310  0087               	movwf	7
  2425  0311  0801               	movf	1,w
  2426  0312  0020               	movlb	0	; select bank0
  2427  0313  008F               	movwf	15	;volatile
  2428                           
  2429                           ;ver0.0_20140727.c: 35: PORTE=putdata[ledcount][4];
  2430  0314  087D               	movf	_ledcount,w
  2431  0315  00F6               	movwf	??_change
  2432  0316  01F7               	clrf	??_change+1
  2433  0317  0876               	movf	??_change,w
  2434  0318  00F0               	movwf	i1___wmul@multiplier
  2435  0319  0877               	movf	??_change+1,w
  2436  031A  00F1               	movwf	i1___wmul@multiplier+1
  2437  031B  3005               	movlw	5
  2438  031C  00F2               	movwf	i1___wmul@multiplicand
  2439  031D  3000               	movlw	0
  2440  031E  00F3               	movwf	i1___wmul@multiplicand+1
  2441  031F  3183  23DA  3182   	fcall	i1___wmul
  2442  0322  0870               	movf	?i1___wmul,w
  2443  0323  3E04               	addlw	4
  2444  0324  00F8               	movwf	??_change+2
  2445  0325  3000               	movlw	0
  2446  0326  3D71               	addwfc	?i1___wmul+1,w
  2447  0327  00F9               	movwf	??_change+3
  2448  0328  3096               	movlw	150
  2449  0329  00FA               	movwf	??_change+4
  2450  032A  3023               	movlw	35
  2451  032B  00FB               	movwf	??_change+5
  2452  032C  0878               	movf	??_change+2,w
  2453  032D  077A               	addwf	??_change+4,w
  2454  032E  0086               	movwf	6
  2455  032F  0879               	movf	??_change+3,w
  2456  0330  3D7B               	addwfc	??_change+5,w
  2457  0331  0087               	movwf	7
  2458  0332  0801               	movf	1,w
  2459  0333  0020               	movlb	0	; select bank0
  2460  0334  0090               	movwf	16	;volatile
  2461                           
  2462                           ;ver0.0_20140727.c: 37: if(ledcount==16)
  2463  0335  087D               	movf	_ledcount,w
  2464  0336  3A10               	xorlw	16
  2465  0337  1D03               	skipz
  2466  0338  0008               	return
  2467                           
  2468                           ;ver0.0_20140727.c: 38: ledcount=0;
  2469  0339  01FD               	clrf	_ledcount
  2470  033A  0008               	return
  2471  033B                     __end_of_change:	
  2472                           
  2473                           	psect	text9
  2474  03DA                     __ptext9:	
  2475 ;; *************** function i1___wmul *****************
  2476 ;; Defined at:
  2477 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  multiplier      2    0[COMMON] unsigned int 
  2480 ;;  multiplicand    2    2[COMMON] unsigned int 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  __wmul          2    4[COMMON] unsigned int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    0[COMMON] unsigned int 
  2485 ;; Registers used:
  2486 ;;		wreg, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2492 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;Total ram usage:        6 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_change
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function i1___wmul
  2507  03DA                     i1___wmul:	
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2511  03DA  01F4               	clrf	i1___wmul@product
  2512  03DB  01F5               	clrf	i1___wmul@product+1
  2513  03DC                     i1l1279:	
  2514  03DC  1C70               	btfss	i1___wmul@multiplier,0
  2515  03DD  2BE2               	goto	i1l358
  2516  03DE  0872               	movf	i1___wmul@multiplicand,w
  2517  03DF  07F4               	addwf	i1___wmul@product,f
  2518  03E0  0873               	movf	i1___wmul@multiplicand+1,w
  2519  03E1  3DF5               	addwfc	i1___wmul@product+1,f
  2520  03E2                     i1l358:	
  2521  03E2  3001               	movlw	1
  2522  03E3                     u112_25:	
  2523  03E3  35F2               	lslf	i1___wmul@multiplicand,f
  2524  03E4  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2525  03E5  0B89               	decfsz	9,f
  2526  03E6  2BE3               	goto	u112_25
  2527  03E7  3001               	movlw	1
  2528  03E8                     u113_25:	
  2529  03E8  36F1               	lsrf	i1___wmul@multiplier+1,f
  2530  03E9  0CF0               	rrf	i1___wmul@multiplier,f
  2531  03EA  0B89               	decfsz	9,f
  2532  03EB  2BE8               	goto	u113_25
  2533  03EC  0871               	movf	i1___wmul@multiplier+1,w
  2534  03ED  0470               	iorwf	i1___wmul@multiplier,w
  2535  03EE  1D03               	skipz
  2536  03EF  2BDC               	goto	i1l1279
  2537  03F0  0875               	movf	i1___wmul@product+1,w
  2538  03F1  01F1               	clrf	?i1___wmul+1
  2539  03F2  07F1               	addwf	?i1___wmul+1,f
  2540  03F3  0874               	movf	i1___wmul@product,w
  2541  03F4  01F0               	clrf	?i1___wmul
  2542  03F5  07F0               	addwf	?i1___wmul,f
  2543  03F6  0008               	return
  2544  03F7                     __end_ofi1___wmul:	
  2545  007E                     btemp	set	126	;btemp
  2546  007E                     pic14e$flags	set	126
  2547  007E                     wtemp	set	126
  2548  007E                     wtemp0	set	126
  2549  0080                     wtemp1	set	128
  2550  0082                     wtemp2	set	130
  2551  0084                     wtemp3	set	132
  2552  0086                     wtemp4	set	134
  2553  0088                     wtemp5	set	136
  2554  007F                     wtemp6	set	127
  2555  007E                     ttemp	set	126
  2556  007E                     ttemp0	set	126
  2557  0081                     ttemp1	set	129
  2558  0084                     ttemp2	set	132
  2559  0087                     ttemp3	set	135
  2560  007F                     ttemp4	set	127
  2561  007E                     ltemp	set	126
  2562  007E                     ltemp0	set	126
  2563  0082                     ltemp1	set	130
  2564  0086                     ltemp2	set	134
  2565  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     70      72
    BANK1            80     70      70
    BANK2            80      0      48
    BANK3            80      0      48
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    _InterTimer->_change
    _change->i1___wmul

Critical Paths under _main in BANK0

    _main->_x2
    _x2->___awdiv

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               157   157      0    3042
                                             15 BANK0     55    55      0
                                              0 BANK1     70    70      0
                         _E2promRead
                             ___wmul
                              _getch
                             _setpin
                                 _x2
 ---------------------------------------------------------------------------------
 (1) _x2                                                   6     6      0     544
                                              9 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           1     1      0     352
                                             12 COMMON     1     1      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               6     6      0     352
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   ___wmul
   _getch
   _setpin
   _x2
     ___awdiv

 _InterTimer (ROOT)
   _change
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      30       9       60.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Sep 28 16:18:23 2014

            ?_E2promRead 0070              __CFG_CP$OFF 0000                       _RD 0CA8  
           ___awdiv@sign 0026                       _x2 038F      ___wmul@multiplicand 0022  
       i1___wmul@product 0074              __CFG_LVP$ON 0000                      ?_x2 0070  
                    l250 025A                      l244 0157                      l271 042A  
                    l249 0211                      l358 03C5                      _GIE 005F  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RA3 0063                      _RC0 0070                      _RA4 0064  
                    _RC1 0071                      _RA5 0065                      _RC2 0072  
                    _RA6 0066                      _RC3 0073                      _RA7 0067  
                    _RD6 007E             __CFG_CPD$OFF 0000                      x2@i 002C  
                    _led 0120             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     ??_x2 0029              main@getdata 00A0  
                   l1241 0346                     l1341 03BA                     l1333 0396  
                   l1247 0351                     l1273 0388                     l1265 0377  
                   l1257 0359                     l1259 0365                     l1339 03AD  
                   l1269 0380                     l1605 007C                     l1359 03BF  
                   l1625 00BE                     l1643 00E3                     l1653 00EF  
                   l1661 00FA                     l1629 00C5                     l1639 00DC  
                   l1673 0112                     l1585 0068                     l1691 0123  
                   l1675 0113                     l1667 0105                     l1659 00F9  
                   l1685 011E                     l1699 014F                     u1205 03C6  
                   u1045 035C                     u1215 03CB                     u2007 0075  
                   u1065 0366                     u1075 0370                     u1085 0378  
                   u1730 005D                     u1905 0126                     u1915 0139  
                   u1955 01B8                     u1985 0262                     _RCIF 008D  
                   _TMR0 0015                     _TRMT 0CF1                     _WPUB 020D  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 004E  
            main@onetime 0064                     _time 0067                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _stoc 01A0  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 001A                     ttemp 007E                     wtemp 007E  
          __CFG_PLLEN$ON 0000                    ?_main 0070          __end_of___awdiv 038F  
                  _EEADR 0191            __CFG_WDTE$OFF 0000          ___awdiv@divisor 0020  
                  i1l358 03E2                    i1l198 0015                    i1l199 0016  
        ___awdiv@counter 0025                    _RCREG 0199                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PORTD 000F                    _PORTE 0010  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _TRISE 0090                    _TXREG 019A  
                  _TXSTA 019E            __CFG_PWRTE$ON 0000                    x2@ret 002D  
                  x2@num 002E                    _getch 042A                    main@i 0065  
                  main@j 0063                    main@n 005F      __size_of_E2promRead 000F  
       __end_ofi1___wmul 03F7                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003      i1___wmul@multiplier 0070  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F           __CFG_MCLRE$OFF 0000          __initialization 001C  
           __end_of_main 0292                   ??_main 002F               _InterTimer 0004  
                 ?_getch 0070                   _EEDATA 0193         ___awdiv@dividend 0022  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   u112_25 03E3                   i1l1279 03DC  
                 u113_25 03E8                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TRISC6 0476                   _TRISC7 0477  
                 _nWPUEN 04AF                   ___wmul 03BC                ??___awdiv 0024  
         __CFG_STVREN$ON 0000                   _change 0292            main@resetFlug 0062  
       ___awdiv@quotient 0027                   _setpin 03F7            E2promRead@adr 0022  
__end_of__initialization 004A           __pcstackCOMMON 0070             ??_E2promRead 0020  
          __end_of_getch 0431               __end_of_x2 03BC              ?_InterTimer 0070  
              ?i1___wmul 0070                  ??_getch 0020           main@getKeeping 003E  
             __pbssBANK0 0066               __pbssBANK2 0120               __pbssBANK3 01A0  
             __pbssBANK4 0220       __end_of_E2promRead 041E          __CFG_VCAPEN$OFF 0000  
             __pmaintext 004E                  ?___wmul 0020                  ?_change 0070  
             __pintentry 0004                  _BAUDCON 019F                  ?_setpin 0070  
             ??i1___wmul 0074           main@individual 005E      __size_of_InterTimer 0016  
                ___awdiv 033B          __size_of___wmul 001E          __size_of_change 00A9  
                __ptext0 0000                  __ptext1 038F                  __ptext2 033B  
                __ptext3 03F7                  __ptext4 042A                  __ptext5 03BC  
                __ptext6 040F                  __ptext8 0292                  __ptext9 03DA  
        __size_of_setpin 0018                  _putdata 2396                  clrloop0 041F  
   end_of_initialization 004A    i1___wmul@multiplicand 0072         __CFG_FOSC$INTOSC 0000  
             main@getNum 0061           __end_of___wmul 03DA           __end_of_change 033B  
           ??_InterTimer 007C           __end_of_setpin 040F      start_initialization 001C  
      __size_ofi1___wmul 001D       __end_of_InterTimer 001A                 ??___wmul 0024  
               ??_change 0076                 ??_setpin 0020              __pbssBIGRAM 2396  
            __pbssCOMMON 007D                ___latbits 0003            __pcstackBANK0 0020  
          __pcstackBANK1 00A0       main@gettingSuccess 0060                 ?___awdiv 0020  
         __size_of_getch 0007              __size_of_x2 002D           ___wmul@product 0024  
              clear_ram0 041E                main@F3525 0220        ___wmul@multiplier 0020  
               i1___wmul 03DA         __size_of___awdiv 0054                 _ledcount 007D  
          __size_of_main 0244               _E2promRead 040F             _reservingNow 0066  
            pic14e$flags 007E                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095  
