

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Aug 25 17:19:35 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0068                     _RB0	set	104
   570  0069                     _RB1	set	105
   571  006A                     _RB2	set	106
   572  006B                     _RB3	set	107
   573  006C                     _RB4	set	108
   574  006D                     _RB5	set	109
   575  006E                     _RB6	set	110
   576  006F                     _RB7	set	111
   577  0070                     _RC0	set	112
   578  0071                     _RC1	set	113
   579  0072                     _RC2	set	114
   580  0073                     _RC3	set	115
   581  008D                     _RCIF	set	141
   582  0080                     _RE0	set	128
   583  0081                     _RE1	set	129
   584  0082                     _RE2	set	130
   585  005D                     _TMR0IE	set	93
   586  005A                     _TMR0IF	set	90
   587  0095                     _OPTION_REG	set	149
   588  0099                     _OSCCON	set	153
   589  008C                     _TRISA	set	140
   590  008D                     _TRISB	set	141
   591  008E                     _TRISC	set	142
   592  008F                     _TRISD	set	143
   593  0090                     _TRISE	set	144
   594  0476                     _TRISC6	set	1142
   595  0477                     _TRISC7	set	1143
   596  04AF                     _nWPUEN	set	1199
   597  018C                     _ANSELA	set	396
   598  018D                     _ANSELB	set	397
   599  018F                     _ANSELD	set	399
   600  0190                     _ANSELE	set	400
   601  019F                     _BAUDCON	set	415
   602  0199                     _RCREG	set	409
   603  019D                     _RCSTA	set	413
   604  019B                     _SPBRG	set	411
   605  019A                     _TXREG	set	410
   606  019E                     _TXSTA	set	414
   607  0CF1                     _TRMT	set	3313
   608  020D                     _WPUB	set	525
   609                           
   610                           	psect	text0
   611  0000                     __ptext0:	
   612                           ; #config settings
   613                           
   614                           
   615                           ;psect for function _no0
   616  0000                     
   617                           	psect	cinit
   618  001F                     start_initialization:	
   619  001F                     __initialization:	
   620                           
   621                           ; Clear objects allocated to COMMON
   622  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   623                           
   624                           ; Clear objects allocated to BANK0
   625  0020  3020               	movlw	low __pbssBANK0
   626  0021  0084               	movwf	4
   627  0022  3000               	movlw	high __pbssBANK0
   628  0023  0085               	movwf	5
   629  0024  3030               	movlw	48
   630  0025  3182  22E9  3180   	fcall	clear_ram0
   631                           
   632                           ; Clear objects allocated to BANK1
   633  0028  30A0               	movlw	low __pbssBANK1
   634  0029  0084               	movwf	4
   635  002A  3000               	movlw	high __pbssBANK1
   636  002B  0085               	movwf	5
   637  002C  3030               	movlw	48
   638  002D  3182  22E9         	fcall	clear_ram0
   639  002F                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  002F                     __end_of__initialization:	
   643  002F  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   644  0030  0020               	movlb	0
   645  0031  3180  2833         	ljmp	_main	;jump to C main() function
   646                           
   647                           	psect	bssCOMMON
   648  0077                     __pbssCOMMON:	
   649  0077                     _time:	
   650  0077                     	ds	1
   651                           
   652                           	psect	bssBANK0
   653  0020                     __pbssBANK0:	
   654  0020                     _led:	
   655  0020                     	ds	48
   656                           
   657                           	psect	bssBANK1
   658  00A0                     __pbssBANK1:	
   659  00A0                     _stoc:	
   660  00A0                     	ds	48
   661                           
   662                           	psect	clrtext
   663  02E9                     clear_ram0:	
   664                           ;	Called with FSR0 containing the base address, and
   665                           ;	WREG with the size to clear
   666                           
   667  02E9  0064               	clrwdt	;clear the watchdog before getting into this loop
   668  02EA                     clrloop0:	
   669  02EA  0180               	clrf	0	;clear RAM location pointed to by FSR
   670  02EB  3101               	addfsr 0,1
   671  02EC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   672  02ED  2AEA               	goto	clrloop0	;have we reached the end yet?
   673  02EE  3400               	retlw	0	;all done for this memory range, return
   674                           
   675                           	psect	cstackCOMMON
   676  0070                     __pcstackCOMMON:	
   677  0070                     ?_putch:	
   678  0070                     ??_putch:	
   679                           ; 0 bytes @ 0x0
   680                           
   681  0070                     ?_waitstart:	
   682                           ; 0 bytes @ 0x0
   683                           
   684  0070                     ?_setdata:	
   685                           ; 0 bytes @ 0x0
   686                           
   687  0070                     ?_no0:	
   688                           ; 0 bytes @ 0x0
   689                           
   690  0070                     ?_no1:	
   691                           ; 0 bytes @ 0x0
   692                           
   693  0070                     ?_no2:	
   694                           ; 0 bytes @ 0x0
   695                           
   696  0070                     ?_no3:	
   697                           ; 0 bytes @ 0x0
   698                           
   699  0070                     ?_noxinit:	
   700                           ; 0 bytes @ 0x0
   701                           
   702  0070                     ??_noxinit:	
   703                           ; 0 bytes @ 0x0
   704                           
   705  0070                     ?_setpin:	
   706                           ; 0 bytes @ 0x0
   707                           
   708  0070                     ?_changeLED:	
   709                           ; 0 bytes @ 0x0
   710                           
   711  0070                     ?_InterTimer:	
   712                           ; 0 bytes @ 0x0
   713                           
   714  0070                     ?_waitdelay:	
   715                           ; 0 bytes @ 0x0
   716                           
   717  0070                     ?_main:	
   718                           ; 0 bytes @ 0x0
   719                           
   720  0070                     ?_getch:	
   721                           ; 0 bytes @ 0x0
   722                           
   723  0070                     putch@Data:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 1 bytes @ 0x0
   728  0070                     	ds	2
   729  0072                     ??_no0:	
   730  0072                     ??_no1:	
   731                           ; 0 bytes @ 0x2
   732                           
   733  0072                     ??_no2:	
   734                           ; 0 bytes @ 0x2
   735                           
   736  0072                     ??_no3:	
   737                           ; 0 bytes @ 0x2
   738                           
   739  0072                     ??_changeLED:	
   740                           ; 0 bytes @ 0x2
   741                           
   742                           
   743                           ; 0 bytes @ 0x2
   744  0072                     	ds	2
   745  0074                     ??_InterTimer:	
   746                           
   747                           ; 0 bytes @ 0x4
   748  0074                     	ds	2
   749  0076                     ??_waitstart:	
   750  0076                     ??_getch:	
   751                           ; 0 bytes @ 0x6
   752                           
   753  0076                     ??_countup:	
   754                           ; 0 bytes @ 0x6
   755                           
   756  0076                     ??_setpin:	
   757                           ; 0 bytes @ 0x6
   758                           
   759  0076                     ?___bmul:	
   760                           ; 0 bytes @ 0x6
   761                           
   762  0076                     waitstart@ch:	
   763                           ; 1 bytes @ 0x6
   764                           
   765  0076                     ___bmul@multiplicand:	
   766                           ; 1 bytes @ 0x6
   767                           
   768                           
   769                           ; 1 bytes @ 0x6
   770  0076                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773  0050                     __pcstackBANK0:	
   774  0050                     ??_waitdelay:	
   775  0050                     ??___bmul:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0050                     ?_countup:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0050                     countup@j:	
   782                           ; 2 bytes @ 0x0
   783                           
   784                           
   785                           ; 1 bytes @ 0x0
   786  0050                     	ds	1
   787  0051                     ___bmul@product:	
   788                           
   789                           ; 1 bytes @ 0x1
   790  0051                     	ds	1
   791  0052                     countup@i:	
   792  0052                     ___bmul@multiplier:	
   793                           ; 1 bytes @ 0x2
   794                           
   795                           
   796                           ; 1 bytes @ 0x2
   797  0052                     	ds	1
   798  0053                     ??_setdata:	
   799                           
   800                           ; 0 bytes @ 0x3
   801  0053                     	ds	5
   802  0058                     setdata@i:	
   803                           
   804                           ; 1 bytes @ 0x8
   805  0058                     	ds	1
   806  0059                     setdata@j:	
   807                           
   808                           ; 1 bytes @ 0x9
   809  0059                     	ds	1
   810  005A                     ??_main:	
   811                           
   812                           ; 0 bytes @ 0xA
   813  005A                     	ds	3
   814  005D                     main@stoclocal:	
   815                           
   816                           ; 1 bytes @ 0xD
   817  005D                     	ds	1
   818  005E                     main@j:	
   819                           
   820                           ; 1 bytes @ 0xE
   821  005E                     	ds	1
   822  005F                     main@i:	
   823                           
   824                           ; 1 bytes @ 0xF
   825  005F                     	ds	1
   826                           
   827                           	psect	maintext
   828  0033                     __pmaintext:	
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   831 ;;
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 57 in file "ver0.0_20140727.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  test           32    0        unsigned char [4][8]
   839 ;;  i               1   15[BANK0 ] unsigned char 
   840 ;;  j               1   14[BANK0 ] unsigned char 
   841 ;;  stoclocal       1   13[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;		None               void
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 17F/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   852 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   853 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   854 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   855 ;;Total ram usage:        6 bytes
   856 ;; Hardware stack levels required when called:    5
   857 ;; This function calls:
   858 ;;		___bmul
   859 ;;		_countup
   860 ;;		_getch
   861 ;;		_setdata
   862 ;;		_setpin
   863 ;;		_waitdelay
   864 ;;		_waitstart
   865 ;; This function is called by:
   866 ;;		Startup code after reset
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           
   871                           ;psect for function _main
   872  0033                     _main:	
   873                           
   874                           ;ver0.0_20140727.c: 59: char i=1,j;
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   878  0033  0020               	movlb	0	; select bank0
   879  0034  01DF               	clrf	main@i
   880  0035  0ADF               	incf	main@i,f
   881                           
   882                           ;ver0.0_20140727.c: 60: unsigned char stoclocal;
   883                           ;ver0.0_20140727.c: 61: char test[8][4];
   884                           ;ver0.0_20140727.c: 62: setpin();
   885  0036  3182  228E  3180   	fcall	_setpin
   886                           
   887                           ;ver0.0_20140727.c: 63: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   888  0039  0021               	movlb	1	; select bank1
   889  003A  178E               	bsf	14,7	;volatile
   890  003B  130E               	bcf	14,6	;volatile
   891  003C  3033               	movlw	51
   892  003D  0023               	movlb	3	; select bank3
   893  003E  009B               	movwf	27	;volatile
   894  003F  3090               	movlw	144
   895  0040  009D               	movwf	29	;volatile
   896  0041  3024               	movlw	36
   897  0042  009E               	movwf	30	;volatile
   898  0043  019F               	clrf	31	;volatile
   899                           
   900                           ;ver0.0_20140727.c: 65: OPTION_REG = 0b00000110 ;
   901  0044  3006               	movlw	6
   902  0045  0021               	movlb	1	; select bank1
   903  0046  0095               	movwf	21	;volatile
   904                           
   905                           ;ver0.0_20140727.c: 66: TMR0 = 61 ;
   906  0047  303D               	movlw	61
   907  0048  0020               	movlb	0	; select bank0
   908  0049  0095               	movwf	21	;volatile
   909                           
   910                           ;ver0.0_20140727.c: 67: TMR0IF = 0 ;
   911  004A  110B               	bcf	11,2	;volatile
   912                           
   913                           ;ver0.0_20140727.c: 68: time = 0 ;
   914  004B  01F7               	clrf	_time
   915                           
   916                           ;ver0.0_20140727.c: 69: TMR0IE = 1 ;
   917  004C  168B               	bsf	11,5	;volatile
   918                           
   919                           ;ver0.0_20140727.c: 70: WPUB = 0xC0;
   920  004D  30C0               	movlw	192
   921  004E  0024               	movlb	4	; select bank4
   922  004F  008D               	movwf	13	;volatile
   923                           
   924                           ;ver0.0_20140727.c: 71: nWPUEN = 0;
   925  0050  0021               	movlb	1	; select bank1
   926  0051  1395               	bcf	21,7	;volatile
   927                           
   928                           ;ver0.0_20140727.c: 72: GIE = 0 ;
   929  0052  138B               	bcf	11,7	;volatile
   930                           
   931                           ;ver0.0_20140727.c: 73: RA1=1;
   932  0053  0020               	movlb	0	; select bank0
   933  0054  148C               	bsf	12,1	;volatile
   934                           
   935                           ;ver0.0_20140727.c: 74: RA2=1;
   936  0055  150C               	bsf	12,2	;volatile
   937                           
   938                           ;ver0.0_20140727.c: 75: RA3=1;
   939  0056  158C               	bsf	12,3	;volatile
   940                           
   941                           ;ver0.0_20140727.c: 76: RA4=1;
   942  0057  160C               	bsf	12,4	;volatile
   943                           
   944                           ;ver0.0_20140727.c: 77: RA5=1;
   945  0058  168C               	bsf	12,5	;volatile
   946                           
   947                           ;ver0.0_20140727.c: 78: RB0=1;
   948  0059  140D               	bsf	13,0	;volatile
   949                           
   950                           ;ver0.0_20140727.c: 79: RB1=1;
   951  005A  148D               	bsf	13,1	;volatile
   952                           
   953                           ;ver0.0_20140727.c: 80: RB2=1;
   954  005B  150D               	bsf	13,2	;volatile
   955                           
   956                           ;ver0.0_20140727.c: 81: RB3=1;
   957  005C  158D               	bsf	13,3	;volatile
   958                           
   959                           ;ver0.0_20140727.c: 82: RB4=1;
   960  005D  160D               	bsf	13,4	;volatile
   961                           
   962                           ;ver0.0_20140727.c: 83: RB5=1;
   963  005E  168D               	bsf	13,5	;volatile
   964                           
   965                           ;ver0.0_20140727.c: 84: RB6=1;
   966  005F  170D               	bsf	13,6	;volatile
   967                           
   968                           ;ver0.0_20140727.c: 85: RB7=1;
   969  0060  178D               	bsf	13,7	;volatile
   970                           
   971                           ;ver0.0_20140727.c: 86: RE0=1;
   972  0061  1410               	bsf	16,0	;volatile
   973                           
   974                           ;ver0.0_20140727.c: 87: RE1=1;
   975  0062  1490               	bsf	16,1	;volatile
   976                           
   977                           ;ver0.0_20140727.c: 88: RE2=1;
   978  0063  1510               	bsf	16,2	;volatile
   979                           
   980                           ;ver0.0_20140727.c: 90: PORTA=0xFF;
   981  0064  30FF               	movlw	255
   982  0065  008C               	movwf	12	;volatile
   983                           
   984                           ;ver0.0_20140727.c: 91: PORTB=0xFF;
   985  0066  30FF               	movlw	255
   986  0067  008D               	movwf	13	;volatile
   987                           
   988                           ;ver0.0_20140727.c: 92: PORTC=0xFF;
   989  0068  30FF               	movlw	255
   990  0069  008E               	movwf	14	;volatile
   991                           
   992                           ;ver0.0_20140727.c: 93: PORTD=0xFF;
   993  006A  30FF               	movlw	255
   994  006B  008F               	movwf	15	;volatile
   995                           
   996                           ;ver0.0_20140727.c: 94: PORTE=0xFF;
   997  006C  30FF               	movlw	255
   998  006D  0090               	movwf	16	;volatile
   999                           
  1000                           ;ver0.0_20140727.c: 95: PORTB=0x00;
  1001  006E  018D               	clrf	13	;volatile
  1002                           
  1003                           ;ver0.0_20140727.c: 103: ANSELD=0x00;
  1004  006F  0023               	movlb	3	; select bank3
  1005  0070  018F               	clrf	15	;volatile
  1006                           
  1007                           ;ver0.0_20140727.c: 106: switch(i){
  1008                           
  1009                           ;ver0.0_20140727.c: 104: while(1){
  1010  0071  2890               	goto	l1649
  1011  0072                     l250:	
  1012                           ;ver0.0_20140727.c: 107: case 1:RB7=1; break;
  1013                           
  1014  0072  178D               	bsf	13,7	;volatile
  1015  0073  2886               	goto	l1651
  1016  0074                     l252:	
  1017                           ;ver0.0_20140727.c: 108: case 3:RB6=1; break;
  1018                           
  1019  0074  170D               	bsf	13,6	;volatile
  1020  0075  2886               	goto	l1651
  1021  0076                     l253:	
  1022                           ;ver0.0_20140727.c: 109: case 5:RB5=1; break;
  1023                           
  1024  0076  168D               	bsf	13,5	;volatile
  1025  0077  2886               	goto	l1651
  1026  0078                     l254:	
  1027                           ;ver0.0_20140727.c: 110: case 7:RB4=1; break;
  1028                           
  1029  0078  160D               	bsf	13,4	;volatile
  1030  0079  2886               	goto	l1651
  1031  007A                     l255:	
  1032                           ;ver0.0_20140727.c: 111: case 9:RB3=1; break;
  1033                           
  1034  007A  158D               	bsf	13,3	;volatile
  1035  007B  2886               	goto	l1651
  1036  007C                     l256:	
  1037                           ;ver0.0_20140727.c: 112: case 11:RB2=1; break;
  1038                           
  1039  007C  150D               	bsf	13,2	;volatile
  1040  007D  2886               	goto	l1651
  1041  007E                     l257:	
  1042                           ;ver0.0_20140727.c: 113: case 13:RB1=1; break;
  1043                           
  1044  007E  148D               	bsf	13,1	;volatile
  1045  007F  2886               	goto	l1651
  1046  0080                     l258:	
  1047                           ;ver0.0_20140727.c: 114: case 15:RB0=1; break;
  1048                           
  1049  0080  140D               	bsf	13,0	;volatile
  1050  0081  2886               	goto	l1651
  1051  0082                     l1639:	
  1052                           ;ver0.0_20140727.c: 115: case 16:i=0;PORTB=0x00;PORTD=0xFF;break;
  1053                           
  1054  0082  01DF               	clrf	main@i
  1055  0083                     l1643:	
  1056                           ;ver0.0_20140727.c: 116: default:PORTB=0x00;PORTD=0xFF;break;
  1057                           
  1058  0083  018D               	clrf	13	;volatile
  1059  0084  30FF               	movlw	255
  1060  0085  008F               	movwf	15	;volatile
  1061  0086                     l1651:	
  1062                           ;ver0.0_20140727.c: 117: }
  1063                           
  1064                           
  1065                           ;ver0.0_20140727.c: 118: waitdelay();
  1066  0086  3182  22C8  3180   	fcall	_waitdelay
  1067                           
  1068                           ;ver0.0_20140727.c: 119: PORTD=0b00001111;
  1069  0089  300F               	movlw	15
  1070  008A  0020               	movlb	0	; select bank0
  1071  008B  008F               	movwf	15	;volatile
  1072                           
  1073                           ;ver0.0_20140727.c: 120: i++;
  1074  008C  3001               	movlw	1
  1075  008D  00DA               	movwf	??_main
  1076  008E  085A               	movf	??_main,w
  1077  008F  07DF               	addwf	main@i,f
  1078  0090                     l1649:	
  1079  0090  0020               	movlb	0	; select bank0
  1080  0091  085F               	movf	main@i,w
  1081                           
  1082                           ; Switch size 1, requested type "space"
  1083                           ; Number of cases is 9, Range of values is 1 to 16
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte           28    15 (average)
  1087                           ; direct_byte           41     9 (fixed)
  1088                           ; jumptable            263     9 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  0092  3A01               	xorlw	1	; case 1
  1091  0093  1903               	skipnz
  1092  0094  2872               	goto	l250
  1093  0095  3A02               	xorlw	2	; case 3
  1094  0096  1903               	skipnz
  1095  0097  2874               	goto	l252
  1096  0098  3A06               	xorlw	6	; case 5
  1097  0099  1903               	skipnz
  1098  009A  2876               	goto	l253
  1099  009B  3A02               	xorlw	2	; case 7
  1100  009C  1903               	skipnz
  1101  009D  2878               	goto	l254
  1102  009E  3A0E               	xorlw	14	; case 9
  1103  009F  1903               	skipnz
  1104  00A0  287A               	goto	l255
  1105  00A1  3A02               	xorlw	2	; case 11
  1106  00A2  1903               	skipnz
  1107  00A3  287C               	goto	l256
  1108  00A4  3A06               	xorlw	6	; case 13
  1109  00A5  1903               	skipnz
  1110  00A6  287E               	goto	l257
  1111  00A7  3A02               	xorlw	2	; case 15
  1112  00A8  1903               	skipnz
  1113  00A9  2880               	goto	l258
  1114  00AA  3A1F               	xorlw	31	; case 16
  1115  00AB  1903               	skipnz
  1116  00AC  2882               	goto	l1639
  1117  00AD  2883               	goto	l1643
  1118  00AE  2886               	goto	l1651
  1119  00AF                     l1657:	
  1120                           ;ver0.0_20140727.c: 121: }
  1121                           ;ver0.0_20140727.c: 136: while(1) {
  1122                           
  1123                           
  1124                           ;ver0.0_20140727.c: 137: waitstart();
  1125  00AF  3182  2275  3180   	fcall	_waitstart
  1126                           
  1127                           ;ver0.0_20140727.c: 138: for(i=0;i<16;i++){
  1128  00B2  0020               	movlb	0	; select bank0
  1129  00B3  01DF               	clrf	main@i
  1130  00B4  3010               	movlw	16
  1131  00B5  025F               	subwf	main@i,w
  1132  00B6  1803               	btfsc	3,0
  1133  00B7  2927               	goto	l1693
  1134  00B8                     l1665:	
  1135                           
  1136                           ;ver0.0_20140727.c: 139: for(j=0;j<3;j++){
  1137  00B8  01DE               	clrf	main@j
  1138  00B9  3003               	movlw	3
  1139  00BA  025E               	subwf	main@j,w
  1140  00BB  1803               	btfsc	3,0
  1141  00BC  291F               	goto	l1689
  1142  00BD                     l1671:	
  1143                           
  1144                           ;ver0.0_20140727.c: 140: if((stoclocal=getch())==0x0D){
  1145  00BD  3182  22DB  3180   	fcall	_getch
  1146  00C0  0020               	movlb	0	; select bank0
  1147  00C1  00DA               	movwf	??_main
  1148  00C2  085A               	movf	??_main,w
  1149  00C3  00DD               	movwf	main@stoclocal
  1150  00C4  085D               	movf	main@stoclocal,w
  1151  00C5  3A0D               	xorlw	13
  1152  00C6  1D03               	skipz
  1153  00C7  2903               	goto	l1683
  1154                           
  1155                           ;ver0.0_20140727.c: 141: stoc[i][j]=0x0D;
  1156  00C8  300D               	movlw	13
  1157  00C9  00DA               	movwf	??_main
  1158  00CA  3003               	movlw	3
  1159  00CB  00DB               	movwf	??_main+1
  1160  00CC  085B               	movf	??_main+1,w
  1161  00CD  00F6               	movwf	___bmul@multiplicand
  1162  00CE  085F               	movf	main@i,w
  1163  00CF  3182  22A6  3180   	fcall	___bmul
  1164  00D2  3EA0               	addlw	_stoc& (0+255)
  1165  00D3  0020               	movlb	0	; select bank0
  1166  00D4  075E               	addwf	main@j,w
  1167  00D5  00DC               	movwf	??_main+2
  1168  00D6  085C               	movf	??_main+2,w
  1169  00D7  0086               	movwf	6
  1170  00D8  0187               	clrf	7
  1171  00D9  085A               	movf	??_main,w
  1172  00DA  0081               	movwf	1
  1173                           
  1174                           ;ver0.0_20140727.c: 142: if(countup(&i,&j));
  1175  00DB  305E               	movlw	main@j& (0+255)
  1176  00DC  00DA               	movwf	??_main
  1177  00DD  085A               	movf	??_main,w
  1178  00DE  00D0               	movwf	countup@j
  1179  00DF  305F               	movlw	main@i& (0+255)
  1180  00E0  3182  2247  3180   	fcall	_countup
  1181  00E3  0020               	movlb	0	; select bank0
  1182  00E4  0851               	movf	?_countup+1,w
  1183  00E5  0450               	iorwf	?_countup,w
  1184  00E6  1D03               	btfss	3,2
  1185  00E7  2916               	goto	l1685
  1186                           
  1187                           ;ver0.0_20140727.c: 143: else if((stoclocal=getch())==0x0A){
  1188  00E8  3182  22DB  3180   	fcall	_getch
  1189  00EB  0020               	movlb	0	; select bank0
  1190  00EC  00DA               	movwf	??_main
  1191  00ED  085A               	movf	??_main,w
  1192  00EE  00DD               	movwf	main@stoclocal
  1193  00EF  085D               	movf	main@stoclocal,w
  1194  00F0  3A0A               	xorlw	10
  1195  00F1  1D03               	skipz
  1196  00F2  2916               	goto	l1685
  1197                           
  1198                           ;ver0.0_20140727.c: 144: if(0xDD!=getch()){
  1199  00F3  3182  22DB  3180   	fcall	_getch
  1200  00F6  3ADD               	xorlw	221
  1201  00F7  1903               	skipnz
  1202  00F8  2916               	goto	l1685
  1203                           
  1204                           ;ver0.0_20140727.c: 145: i=16;
  1205  00F9  3010               	movlw	16
  1206  00FA  0020               	movlb	0	; select bank0
  1207  00FB  00DA               	movwf	??_main
  1208  00FC  085A               	movf	??_main,w
  1209  00FD  00DF               	movwf	main@i
  1210                           
  1211                           ;ver0.0_20140727.c: 146: j=3;
  1212  00FE  3003               	movlw	3
  1213  00FF  00DA               	movwf	??_main
  1214  0100  085A               	movf	??_main,w
  1215  0101  00DE               	movwf	main@j
  1216                           
  1217                           ;ver0.0_20140727.c: 150: }
  1218                           ;ver0.0_20140727.c: 151: }
  1219                           
  1220                           ;ver0.0_20140727.c: 147: }
  1221                           ;ver0.0_20140727.c: 148: }else{
  1222  0102  2916               	goto	l1685
  1223  0103                     l1683:	
  1224                           
  1225                           ;ver0.0_20140727.c: 152: else
  1226                           ;ver0.0_20140727.c: 153: stoc[i][j]=stoclocal;
  1227  0103  085D               	movf	main@stoclocal,w
  1228  0104  00DA               	movwf	??_main
  1229  0105  3003               	movlw	3
  1230  0106  00DB               	movwf	??_main+1
  1231  0107  085B               	movf	??_main+1,w
  1232  0108  00F6               	movwf	___bmul@multiplicand
  1233  0109  085F               	movf	main@i,w
  1234  010A  3182  22A6  3180   	fcall	___bmul
  1235  010D  3EA0               	addlw	_stoc& (0+255)
  1236  010E  0020               	movlb	0	; select bank0
  1237  010F  075E               	addwf	main@j,w
  1238  0110  00DC               	movwf	??_main+2
  1239  0111  085C               	movf	??_main+2,w
  1240  0112  0086               	movwf	6
  1241  0113  0187               	clrf	7
  1242  0114  085A               	movf	??_main,w
  1243  0115  0081               	movwf	1
  1244  0116                     l1685:	
  1245  0116  3001               	movlw	1
  1246  0117  0020               	movlb	0	; select bank0
  1247  0118  00DA               	movwf	??_main
  1248  0119  085A               	movf	??_main,w
  1249  011A  07DE               	addwf	main@j,f
  1250  011B  3003               	movlw	3
  1251  011C  025E               	subwf	main@j,w
  1252  011D  1C03               	skipc
  1253  011E  28BD               	goto	l1671
  1254  011F                     l1689:	
  1255  011F  3001               	movlw	1
  1256  0120  00DA               	movwf	??_main
  1257  0121  085A               	movf	??_main,w
  1258  0122  07DF               	addwf	main@i,f
  1259  0123  3010               	movlw	16
  1260  0124  025F               	subwf	main@i,w
  1261  0125  1C03               	skipc
  1262  0126  28B8               	goto	l1665
  1263  0127                     l1693:	
  1264                           
  1265                           ;ver0.0_20140727.c: 154: }
  1266                           ;ver0.0_20140727.c: 155: }
  1267                           ;ver0.0_20140727.c: 156: if(i>16);
  1268  0127  3011               	movlw	17
  1269  0128  025F               	subwf	main@i,w
  1270  0129  1803               	btfsc	3,0
  1271  012A  28AF               	goto	l1657
  1272                           
  1273                           ;ver0.0_20140727.c: 157: else{
  1274                           ;ver0.0_20140727.c: 158: if(0x0D==getch()){
  1275  012B  3182  22DB  3180   	fcall	_getch
  1276  012E  3A0D               	xorlw	13
  1277  012F  1D03               	skipz
  1278  0130  28AF               	goto	l1657
  1279                           
  1280                           ;ver0.0_20140727.c: 159: if(0x0A==getch()){
  1281  0131  3182  22DB  3180   	fcall	_getch
  1282  0134  3A0A               	xorlw	10
  1283  0135  1D03               	skipz
  1284  0136  28AF               	goto	l1657
  1285                           
  1286                           ;ver0.0_20140727.c: 160: if(0xDD!=getch())
  1287  0137  3182  22DB  3180   	fcall	_getch
  1288  013A  3ADD               	xorlw	221
  1289  013B  1903               	skipnz
  1290  013C  28AF               	goto	l1657
  1291                           
  1292                           ;ver0.0_20140727.c: 161: setdata();
  1293  013D  3181  2141  3180   	fcall	_setdata
  1294  0140  28AF               	goto	l1657
  1295  0141                     __end_of_main:	
  1296                           
  1297                           	psect	text1
  1298  0275                     __ptext1:	
  1299 ;; *************** function _waitstart *****************
  1300 ;; Defined at:
  1301 ;;		line 189 in file "ver0.0_20140727.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ch              1    6[COMMON] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    4
  1322 ;; This function calls:
  1323 ;;		_getch
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _waitstart
  1331  0275                     _waitstart:	
  1332                           
  1333                           ;ver0.0_20140727.c: 190: char ch=1;
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _waitstart: [wreg+status,2+status,0+pclath+cstack]
  1337  0275  01F6               	clrf	waitstart@ch
  1338  0276  0AF6               	incf	waitstart@ch,f
  1339  0277                     l1305:	
  1340                           ;ver0.0_20140727.c: 192: while(getch()==0xFF);
  1341                           
  1342                           ;ver0.0_20140727.c: 191: do{
  1343                           
  1344  0277  3182  22DB  3182   	fcall	_getch
  1345  027A  3AFF               	xorlw	255
  1346  027B  1903               	skipnz
  1347  027C  2A77               	goto	l1305
  1348                           
  1349                           ;ver0.0_20140727.c: 193: if(0x53==getch()){
  1350  027D  3182  22DB  3182   	fcall	_getch
  1351  0280  3A53               	xorlw	83
  1352  0281  1D03               	skipz
  1353  0282  2A8A               	goto	l1313
  1354                           
  1355                           ;ver0.0_20140727.c: 194: if(0x54==getch())
  1356  0283  3182  22DB  3182   	fcall	_getch
  1357  0286  3A54               	xorlw	84
  1358  0287  1D03               	skipz
  1359  0288  2A8A               	goto	l1313
  1360                           
  1361                           ;ver0.0_20140727.c: 195: ch=0;
  1362  0289  01F6               	clrf	waitstart@ch
  1363  028A                     l1313:	
  1364                           
  1365                           ;ver0.0_20140727.c: 196: }
  1366                           ;ver0.0_20140727.c: 197: }while(ch);
  1367  028A  08F6               	movf	waitstart@ch,f
  1368  028B  1903               	btfsc	3,2
  1369  028C  0008               	return
  1370  028D  2A77               	goto	l1305
  1371  028E                     __end_of_waitstart:	
  1372                           
  1373                           	psect	text2
  1374  02DB                     __ptext2:	
  1375 ;; *************** function _getch *****************
  1376 ;; Defined at:
  1377 ;;		line 9 in file "uart.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      unsigned char 
  1384 ;; Registers used:
  1385 ;;		wreg
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    3
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;;		_waitstart
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _getch
  1408  02DB                     _getch:	
  1409  02DB                     l323:	
  1410                           ;uart.c: 10: while(!RCIF){}
  1411                           
  1412                           ;incstack = 0
  1413                           ; Regs used in _getch: [wreg]
  1414                           
  1415  02DB  0020               	movlb	0	; select bank0
  1416  02DC  1E91               	btfss	17,5	;volatile
  1417  02DD  2ADB               	goto	l323
  1418                           
  1419                           ;uart.c: 11: RCIF=0;
  1420  02DE  1291               	bcf	17,5	;volatile
  1421                           
  1422                           ;uart.c: 12: return RCREG;
  1423  02DF  0023               	movlb	3	; select bank3
  1424  02E0  0819               	movf	25,w	;volatile
  1425  02E1  0008               	return
  1426  02E2                     __end_of_getch:	
  1427                           
  1428                           	psect	text3
  1429  02C8                     __ptext3:	
  1430 ;; *************** function _waitdelay *****************
  1431 ;; Defined at:
  1432 ;;		line 54 in file "ver0.0_20140727.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    3
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _waitdelay
  1462  02C8                     _waitdelay:	
  1463                           
  1464                           ;ver0.0_20140727.c: 55: _delay((unsigned long)((1)*(32000000/4000.0)));
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _waitdelay: [wreg]
  1468  02C8  300B               	movlw	11
  1469  02C9  0020               	movlb	0	; select bank0
  1470  02CA  00D1               	movwf	??_waitdelay+1
  1471  02CB  3062               	movlw	98
  1472  02CC  00D0               	movwf	??_waitdelay
  1473  02CD                     u1227:	
  1474  02CD  0BD0               	decfsz	??_waitdelay,f
  1475  02CE  2ACD               	goto	u1227
  1476  02CF  0BD1               	decfsz	??_waitdelay+1,f
  1477  02D0  2ACD               	goto	u1227
  1478  02D1  0000               	nop
  1479  02D2  0008               	return
  1480  02D3                     __end_of_waitdelay:	
  1481                           
  1482                           	psect	text4
  1483  028E                     __ptext4:	
  1484 ;; *************** function _setpin *****************
  1485 ;; Defined at:
  1486 ;;		line 62 in file "sorce.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;		None               void
  1493 ;; Registers used:
  1494 ;;		wreg, status,2
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; Hardware stack levels required when called:    3
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _setpin
  1516  028E                     _setpin:	
  1517                           
  1518                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _setpin: [wreg+status,2]
  1522  028E  3070               	movlw	112
  1523  028F  0021               	movlb	1	; select bank1
  1524  0290  0099               	movwf	25	;volatile
  1525                           
  1526                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1527  0291  0023               	movlb	3	; select bank3
  1528  0292  018C               	clrf	12	;volatile
  1529                           
  1530                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1531  0293  018D               	clrf	13	;volatile
  1532                           
  1533                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1534  0294  018F               	clrf	15	;volatile
  1535                           
  1536                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1537  0295  0190               	clrf	16	;volatile
  1538                           
  1539                           ;sorce.c: 69: TRISA = 0b00000000 ;
  1540  0296  0021               	movlb	1	; select bank1
  1541  0297  018C               	clrf	12	;volatile
  1542                           
  1543                           ;sorce.c: 70: TRISB = 0b00000000 ;
  1544  0298  018D               	clrf	13	;volatile
  1545                           
  1546                           ;sorce.c: 71: TRISC = 0b10110000 ;
  1547  0299  30B0               	movlw	176
  1548  029A  008E               	movwf	14	;volatile
  1549                           
  1550                           ;sorce.c: 72: TRISD = 0b00001100 ;
  1551  029B  300C               	movlw	12
  1552  029C  008F               	movwf	15	;volatile
  1553                           
  1554                           ;sorce.c: 73: TRISE = 0X00 ;
  1555  029D  0190               	clrf	16	;volatile
  1556                           
  1557                           ;sorce.c: 75: PORTA = 0b00000000 ;
  1558  029E  0020               	movlb	0	; select bank0
  1559  029F  018C               	clrf	12	;volatile
  1560                           
  1561                           ;sorce.c: 76: PORTB = 0b00000000 ;
  1562  02A0  018D               	clrf	13	;volatile
  1563                           
  1564                           ;sorce.c: 77: PORTC = 0b10000000 ;
  1565  02A1  3080               	movlw	128
  1566  02A2  008E               	movwf	14	;volatile
  1567                           
  1568                           ;sorce.c: 78: PORTD = 0b00000000 ;
  1569  02A3  018F               	clrf	15	;volatile
  1570                           
  1571                           ;sorce.c: 79: PORTE=0x00;
  1572  02A4  0190               	clrf	16	;volatile
  1573  02A5  0008               	return
  1574  02A6                     __end_of_setpin:	
  1575                           
  1576                           	psect	text5
  1577  0141                     __ptext5:	
  1578 ;; *************** function _setdata *****************
  1579 ;; Defined at:
  1580 ;;		line 182 in file "ver0.0_20140727.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  j               1    9[BANK0 ] unsigned char 
  1585 ;;  i               1    8[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;		None               void
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;Total ram usage:        7 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    4
  1602 ;; This function calls:
  1603 ;;		___bmul
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _setdata
  1611  0141                     _setdata:	
  1612                           
  1613                           ;ver0.0_20140727.c: 183: char i,j;
  1614                           ;ver0.0_20140727.c: 184: for(i=0;i<16;i++){
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _setdata: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1618  0141  0020               	movlb	0	; select bank0
  1619  0142  01D8               	clrf	setdata@i
  1620  0143                     L1:	
  1621  0143  3010               	movlw	16
  1622  0144  0258               	subwf	setdata@i,w
  1623  0145  1803               	btfsc	3,0
  1624  0146  0008               	return
  1625                           
  1626                           ;ver0.0_20140727.c: 185: for(j=0;j<3;j++)
  1627  0147  01D9               	clrf	setdata@j
  1628  0148  3003               	movlw	3
  1629  0149  0259               	subwf	setdata@j,w
  1630  014A  1803               	btfsc	3,0
  1631  014B  2976               	goto	l1557
  1632  014C                     l1551:	
  1633                           
  1634                           ;ver0.0_20140727.c: 186: led[i][j]=stoc[i][j];
  1635  014C  3003               	movlw	3
  1636  014D  00D3               	movwf	??_setdata
  1637  014E  0853               	movf	??_setdata,w
  1638  014F  00F6               	movwf	___bmul@multiplicand
  1639  0150  0858               	movf	setdata@i,w
  1640  0151  3182  22A6  3181   	fcall	___bmul
  1641  0154  3EA0               	addlw	_stoc& (0+255)
  1642  0155  0020               	movlb	0	; select bank0
  1643  0156  0759               	addwf	setdata@j,w
  1644  0157  00D4               	movwf	??_setdata+1
  1645  0158  0854               	movf	??_setdata+1,w
  1646  0159  0086               	movwf	6
  1647  015A  0187               	clrf	7
  1648  015B  0801               	movf	1,w
  1649  015C  00D5               	movwf	??_setdata+2
  1650  015D  3003               	movlw	3
  1651  015E  00D6               	movwf	??_setdata+3
  1652  015F  0856               	movf	??_setdata+3,w
  1653  0160  00F6               	movwf	___bmul@multiplicand
  1654  0161  0858               	movf	setdata@i,w
  1655  0162  3182  22A6  3181   	fcall	___bmul
  1656  0165  3E20               	addlw	_led& (0+255)
  1657  0166  0020               	movlb	0	; select bank0
  1658  0167  0759               	addwf	setdata@j,w
  1659  0168  00D7               	movwf	??_setdata+4
  1660  0169  0857               	movf	??_setdata+4,w
  1661  016A  0086               	movwf	6
  1662  016B  0187               	clrf	7
  1663  016C  0855               	movf	??_setdata+2,w
  1664  016D  0081               	movwf	1
  1665  016E  3001               	movlw	1
  1666  016F  00D3               	movwf	??_setdata
  1667  0170  0853               	movf	??_setdata,w
  1668  0171  07D9               	addwf	setdata@j,f
  1669  0172  3003               	movlw	3
  1670  0173  0259               	subwf	setdata@j,w
  1671  0174  1C03               	skipc
  1672  0175  294C               	goto	l1551
  1673  0176                     l1557:	
  1674  0176  3001               	movlw	1
  1675  0177  00D3               	movwf	??_setdata
  1676  0178  0853               	movf	??_setdata,w
  1677  0179  07D8               	addwf	setdata@i,f
  1678  017A  2943               	goto	L1
  1679  017B                     __end_of_setdata:	
  1680                           
  1681                           	psect	text6
  1682  02A6                     __ptext6:	
  1683 ;; *************** function ___bmul *****************
  1684 ;; Defined at:
  1685 ;;		line 4 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul8.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  multiplier      1    wreg     unsigned char 
  1688 ;;  multiplicand    1    6[COMMON] unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1691 ;;  product         1    1[BANK0 ] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      unsigned char 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1701 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;Total ram usage:        4 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    3
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;;		_setdata
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function ___bmul
  1718  02A6                     ___bmul:	
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1722                           ;___bmul@multiplier stored from wreg
  1723  02A6  0020               	movlb	0	; select bank0
  1724  02A7  00D2               	movwf	___bmul@multiplier
  1725  02A8  01D1               	clrf	___bmul@product
  1726  02A9                     l1503:	
  1727  02A9  1C52               	btfss	___bmul@multiplier,0
  1728  02AA  2AAF               	goto	l1507
  1729  02AB  0876               	movf	___bmul@multiplicand,w
  1730  02AC  00D0               	movwf	??___bmul
  1731  02AD  0850               	movf	??___bmul,w
  1732  02AE  07D1               	addwf	___bmul@product,f
  1733  02AF                     l1507:	
  1734  02AF  1003               	clrc
  1735  02B0  0DF6               	rlf	___bmul@multiplicand,f
  1736  02B1  1003               	clrc
  1737  02B2  0CD2               	rrf	___bmul@multiplier,f
  1738  02B3  08D2               	movf	___bmul@multiplier,f
  1739  02B4  1D03               	skipz
  1740  02B5  2AA9               	goto	l1503
  1741  02B6  0851               	movf	___bmul@product,w
  1742  02B7  0008               	return
  1743  02B8                     __end_of___bmul:	
  1744                           
  1745                           	psect	text7
  1746  0247                     __ptext7:	
  1747 ;; *************** function _countup *****************
  1748 ;; Defined at:
  1749 ;;		line 167 in file "ver0.0_20140727.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  i               1    wreg     PTR unsigned char 
  1752 ;;		 -> main@i(1), 
  1753 ;;  j               1    0[BANK0 ] PTR unsigned char 
  1754 ;;		 -> main@j(1), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  i               1    2[BANK0 ] PTR unsigned char 
  1757 ;;		 -> main@i(1), 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    0[BANK0 ] int 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;Total ram usage:        4 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _countup
  1783  0247                     _countup:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in _countup: [wreg+fsr1l+fsr1h+status,2+status,0]
  1787                           ;countup@i stored from wreg
  1788  0247  0020               	movlb	0	; select bank0
  1789  0248  00D2               	movwf	countup@i
  1790                           
  1791                           ;ver0.0_20140727.c: 168: if(*j<3-1)
  1792  0249  0850               	movf	countup@j,w
  1793  024A  0086               	movwf	6
  1794  024B  0187               	clrf	7
  1795  024C  3002               	movlw	2
  1796  024D  0201               	subwf	1,w
  1797  024E  1803               	skipnc
  1798  024F  2A55               	goto	l1523
  1799                           
  1800                           ;ver0.0_20140727.c: 169: *j++;
  1801  0250  3001               	movlw	1
  1802  0251  00F6               	movwf	??_countup
  1803  0252  0876               	movf	??_countup,w
  1804  0253  07D0               	addwf	countup@j,f
  1805  0254  2A72               	goto	l1535
  1806  0255                     l1523:	
  1807                           
  1808                           ;ver0.0_20140727.c: 170: else{
  1809                           ;ver0.0_20140727.c: 171: if(*i<16-1){
  1810  0255  0852               	movf	countup@i,w
  1811  0256  0086               	movwf	6
  1812  0257  0187               	clrf	7
  1813  0258  300F               	movlw	15
  1814  0259  0201               	subwf	1,w
  1815  025A  1803               	skipnc
  1816  025B  2A65               	goto	l1529
  1817                           
  1818                           ;ver0.0_20140727.c: 172: *j=0;
  1819  025C  0850               	movf	countup@j,w
  1820  025D  0086               	movwf	6
  1821  025E  0187               	clrf	7
  1822  025F  0181               	clrf	1
  1823                           
  1824                           ;ver0.0_20140727.c: 173: *i++;
  1825  0260  3001               	movlw	1
  1826  0261  00F6               	movwf	??_countup
  1827  0262  0876               	movf	??_countup,w
  1828  0263  07D2               	addwf	countup@i,f
  1829                           
  1830                           ;ver0.0_20140727.c: 174: }else{
  1831  0264  2A72               	goto	l1535
  1832  0265                     l1529:	
  1833                           
  1834                           ;ver0.0_20140727.c: 175: *j++;
  1835  0265  3001               	movlw	1
  1836  0266  00F6               	movwf	??_countup
  1837  0267  0876               	movf	??_countup,w
  1838  0268  07D0               	addwf	countup@j,f
  1839                           
  1840                           ;ver0.0_20140727.c: 176: *i++;
  1841  0269  3001               	movlw	1
  1842  026A  00F6               	movwf	??_countup
  1843  026B  0876               	movf	??_countup,w
  1844  026C  07D2               	addwf	countup@i,f
  1845                           
  1846                           ;ver0.0_20140727.c: 177: return 1;
  1847  026D  3001               	movlw	1
  1848  026E  00D0               	movwf	?_countup
  1849  026F  3000               	movlw	0
  1850  0270  00D1               	movwf	?_countup+1
  1851  0271  0008               	return
  1852  0272                     l1535:	
  1853                           
  1854                           ;ver0.0_20140727.c: 178: }
  1855                           ;ver0.0_20140727.c: 179: }
  1856                           ;ver0.0_20140727.c: 180: return 0;
  1857  0272  01D0               	clrf	?_countup
  1858  0273  01D1               	clrf	?_countup+1
  1859  0274  0008               	return
  1860  0275                     __end_of_countup:	
  1861                           
  1862                           	psect	intentry
  1863  0004                     __pintentry:	
  1864 ;; *************** function _InterTimer *****************
  1865 ;; Defined at:
  1866 ;;		line 41 in file "ver0.0_20140727.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;		None
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;Total ram usage:        2 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		_changeLED
  1889 ;;		_putch
  1890 ;; This function is called by:
  1891 ;;		Interrupt level 1
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895  0004                     _InterTimer:	
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _InterTimer: [wreg+status,2+status,0+pclath+cstack]
  1899  0004  147E               	bsf	126,0	;set compiler interrupt flag
  1900  0005  3180               	pagesel	$
  1901  0006  0020               	movlb	0	; select bank0
  1902  0007  087F               	movf	127,w
  1903  0008  00F5               	movwf	??_InterTimer+1
  1904                           
  1905                           ;ver0.0_20140727.c: 43: if (TMR0IF == 1) {
  1906  0009  1D0B               	btfss	11,2	;volatile
  1907  000A  2818               	goto	i1l242
  1908                           
  1909                           ;ver0.0_20140727.c: 44: TMR0 = 61 ;
  1910  000B  303D               	movlw	61
  1911  000C  0095               	movwf	21	;volatile
  1912                           
  1913                           ;ver0.0_20140727.c: 45: time++ ;
  1914  000D  3001               	movlw	1
  1915  000E  00F4               	movwf	??_InterTimer
  1916  000F  0874               	movf	??_InterTimer,w
  1917  0010  07F7               	addwf	_time,f
  1918                           
  1919                           ;ver0.0_20140727.c: 46: changeLED();
  1920  0011  3182  22B8  3180   	fcall	_changeLED
  1921                           
  1922                           ;ver0.0_20140727.c: 47: putch(0x09);
  1923  0014  3009               	movlw	9
  1924  0015  3182  22E2         	fcall	_putch
  1925                           
  1926                           ;ver0.0_20140727.c: 48: TMR0IF = 0 ;
  1927  0017  110B               	bcf	11,2	;volatile
  1928  0018                     i1l242:	
  1929  0018  0875               	movf	??_InterTimer+1,w
  1930  0019  0020               	movlb	0	; select bank0
  1931  001A  00FF               	movwf	127
  1932  001B  107E               	bcf	126,0	;clear compiler interrupt flag
  1933  001C  0009               	retfie
  1934  001D                     __end_of_InterTimer:	
  1935                           
  1936                           	psect	text9
  1937  02E2                     __ptext9:	
  1938 ;; *************** function _putch *****************
  1939 ;; Defined at:
  1940 ;;		line 4 in file "uart.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  Data            1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  Data            1    0[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;		None               void
  1947 ;; Registers used:
  1948 ;;		wreg
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;Total ram usage:        1 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_InterTimer
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _putch
  1969  02E2                     _putch:	
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _putch: [wreg]
  1973                           ;putch@Data stored from wreg
  1974  02E2  00F0               	movwf	putch@Data
  1975  02E3                     i1l317:	
  1976                           ;uart.c: 5: while(!TRMT){}
  1977                           
  1978  02E3  0023               	movlb	3	; select bank3
  1979  02E4  1C9E               	btfss	30,1	;volatile
  1980  02E5  2AE3               	goto	i1l317
  1981                           
  1982                           ;uart.c: 6: TXREG = Data;
  1983  02E6  0870               	movf	putch@Data,w
  1984  02E7  009A               	movwf	26	;volatile
  1985  02E8  0008               	return
  1986  02E9                     __end_of_putch:	
  1987                           
  1988                           	psect	text10
  1989  02B8                     __ptext10:	
  1990 ;; *************** function _changeLED *****************
  1991 ;; Defined at:
  1992 ;;		line 25 in file "ver0.0_20140727.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;Total ram usage:        2 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    1
  2013 ;; This function calls:
  2014 ;;		_no0
  2015 ;;		_no1
  2016 ;;		_no2
  2017 ;;		_no3
  2018 ;;		_noxinit
  2019 ;; This function is called by:
  2020 ;;		_InterTimer
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _changeLED
  2026  02B8                     _changeLED:	
  2027                           
  2028                           ;ver0.0_20140727.c: 26: if(time==0)
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _changeLED: [wreg+status,2+status,0+pclath+cstack]
  2032  02B8  08F7               	movf	_time,f
  2033  02B9  1D03               	skipz
  2034  02BA  2ABE               	goto	i1l1033
  2035                           
  2036                           ;ver0.0_20140727.c: 27: noxinit();
  2037  02BB  3182  22D3         	fcall	_noxinit
  2038  02BD  0008               	return
  2039  02BE                     i1l1033:	
  2040                           ;ver0.0_20140727.c: 28: else if(0==0)
  2041                           
  2042                           
  2043                           ;ver0.0_20140727.c: 29: no0(time);
  2044  02BE  0877               	movf	_time,w
  2045  02BF  00F2               	movwf	??_changeLED
  2046  02C0  01F3               	clrf	??_changeLED+1
  2047  02C1  0872               	movf	??_changeLED,w
  2048  02C2  00F0               	movwf	?_no0
  2049  02C3  0873               	movf	??_changeLED+1,w
  2050  02C4  00F1               	movwf	?_no0+1
  2051  02C5  3182  2214         	fcall	_no0
  2052                           
  2053                           ;ver0.0_20140727.c: 30: else if(0==1)
  2054  02C7  0008               	return
  2055  02C8                     __end_of_changeLED:	
  2056                           ;ver0.0_20140727.c: 35: no3(time);
  2057                           
  2058                           ;ver0.0_20140727.c: 34: else if(0==3)
  2059                           
  2060                           ;ver0.0_20140727.c: 33: no2(time);
  2061                           
  2062                           ;ver0.0_20140727.c: 32: else if(0==2)
  2063                           
  2064                           ;ver0.0_20140727.c: 31: no1(time);
  2065                           
  2066                           
  2067                           	psect	text11
  2068  02D3                     __ptext11:	
  2069 ;; *************** function _noxinit *****************
  2070 ;; Defined at:
  2071 ;;		line 55 in file "sorce.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_changeLED
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _noxinit
  2100  02D3                     _noxinit:	
  2101                           
  2102                           ;sorce.c: 56: PORTA=0xFF;
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _noxinit: [wreg]
  2106  02D3  30FF               	movlw	255
  2107  02D4  0020               	movlb	0	; select bank0
  2108  02D5  008C               	movwf	12	;volatile
  2109                           
  2110                           ;sorce.c: 57: RC2=1;
  2111  02D6  150E               	bsf	14,2	;volatile
  2112                           
  2113                           ;sorce.c: 58: RC1=1;
  2114  02D7  148E               	bsf	14,1	;volatile
  2115                           
  2116                           ;sorce.c: 59: RC3=1;
  2117  02D8  158E               	bsf	14,3	;volatile
  2118                           
  2119                           ;sorce.c: 60: RC0=1;
  2120  02D9  140E               	bsf	14,0	;volatile
  2121  02DA  0008               	return
  2122  02DB                     __end_of_noxinit:	
  2123                           
  2124                           	psect	text12
  2125  017B                     __ptext12:	
  2126 ;; *************** function _no3 *****************
  2127 ;; Defined at:
  2128 ;;		line 42 in file "sorce.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:        2 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_changeLED
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _no3
  2157  017B                     _no3:	
  2158                           
  2159                           ;sorce.c: 43: if(led[12][0]<time) RA2=0;
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in _no3: [wreg]
  2163  017B  0877               	movf	_time,w
  2164  017C  0020               	movlb	0	; select bank0
  2165  017D  0244               	subwf	_led+36,w
  2166  017E  1C03               	btfss	3,0
  2167  017F  110C               	bcf	12,2	;volatile
  2168                           
  2169                           ;sorce.c: 44: if(led[12][1]<time) RA0=0;
  2170  0180  0877               	movf	_time,w
  2171  0181  0245               	subwf	_led+37,w
  2172  0182  1C03               	btfss	3,0
  2173  0183  100C               	bcf	12,0	;volatile
  2174                           
  2175                           ;sorce.c: 45: if(led[12][2]<time) RA3=0;
  2176  0184  0877               	movf	_time,w
  2177  0185  0246               	subwf	_led+38,w
  2178  0186  1C03               	btfss	3,0
  2179  0187  118C               	bcf	12,3	;volatile
  2180                           
  2181                           ;sorce.c: 46: if(led[13][0]<time) RA1=0;
  2182  0188  0877               	movf	_time,w
  2183  0189  0247               	subwf	_led+39,w
  2184  018A  1C03               	btfss	3,0
  2185  018B  108C               	bcf	12,1	;volatile
  2186                           
  2187                           ;sorce.c: 47: if(led[13][1]<time) RA5=0;
  2188  018C  0877               	movf	_time,w
  2189  018D  0248               	subwf	_led+40,w
  2190  018E  1C03               	btfss	3,0
  2191  018F  128C               	bcf	12,5	;volatile
  2192                           
  2193                           ;sorce.c: 48: if(led[13][2]<time) RA4=0;
  2194  0190  0877               	movf	_time,w
  2195  0191  0249               	subwf	_led+41,w
  2196  0192  1C03               	btfss	3,0
  2197  0193  120C               	bcf	12,4	;volatile
  2198                           
  2199                           ;sorce.c: 49: if(led[14][0]<time) RC2=0;
  2200  0194  0877               	movf	_time,w
  2201  0195  024A               	subwf	_led+42,w
  2202  0196  1C03               	btfss	3,0
  2203  0197  110E               	bcf	14,2	;volatile
  2204                           
  2205                           ;sorce.c: 50: if(led[14][1]<time) RA7=0;
  2206  0198  0877               	movf	_time,w
  2207  0199  024B               	subwf	_led+43,w
  2208  019A  1C03               	btfss	3,0
  2209  019B  138C               	bcf	12,7	;volatile
  2210                           
  2211                           ;sorce.c: 51: if(led[14][2]<time) RA6=0;
  2212  019C  0877               	movf	_time,w
  2213  019D  024C               	subwf	_led+44,w
  2214  019E  1C03               	btfss	3,0
  2215  019F  130C               	bcf	12,6	;volatile
  2216                           
  2217                           ;sorce.c: 52: if(led[15][0]<time) RC1=0;
  2218  01A0  0877               	movf	_time,w
  2219  01A1  024D               	subwf	_led+45,w
  2220  01A2  1C03               	btfss	3,0
  2221  01A3  108E               	bcf	14,1	;volatile
  2222                           
  2223                           ;sorce.c: 53: if(led[15][1]<time) RC3=0;
  2224  01A4  0877               	movf	_time,w
  2225  01A5  024E               	subwf	_led+46,w
  2226  01A6  1C03               	btfss	3,0
  2227  01A7  118E               	bcf	14,3	;volatile
  2228                           
  2229                           ;sorce.c: 54: if(led[15][2]<time) RC0=0;
  2230  01A8  0877               	movf	_time,w
  2231  01A9  024F               	subwf	_led+47,w
  2232  01AA  1803               	skipnc
  2233  01AB  0008               	return
  2234  01AC  100E               	bcf	14,0	;volatile
  2235  01AD  0008               	return
  2236  01AE                     __end_of_no3:	
  2237                           
  2238                           	psect	text13
  2239  01AE                     __ptext13:	
  2240 ;; *************** function _no2 *****************
  2241 ;; Defined at:
  2242 ;;		line 29 in file "sorce.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;		None               void
  2249 ;; Registers used:
  2250 ;;		wreg
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;Total ram usage:        2 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_changeLED
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _no2
  2271  01AE                     _no2:	
  2272                           
  2273                           ;sorce.c: 30: if(led[8][0]<time) RA2=0;
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _no2: [wreg]
  2277  01AE  0877               	movf	_time,w
  2278  01AF  0020               	movlb	0	; select bank0
  2279  01B0  0238               	subwf	_led+24,w
  2280  01B1  1C03               	btfss	3,0
  2281  01B2  110C               	bcf	12,2	;volatile
  2282                           
  2283                           ;sorce.c: 31: if(led[8][1]<time) RA0=0;
  2284  01B3  0877               	movf	_time,w
  2285  01B4  0239               	subwf	_led+25,w
  2286  01B5  1C03               	btfss	3,0
  2287  01B6  100C               	bcf	12,0	;volatile
  2288                           
  2289                           ;sorce.c: 32: if(led[8][2]<time) RA3=0;
  2290  01B7  0877               	movf	_time,w
  2291  01B8  023A               	subwf	_led+26,w
  2292  01B9  1C03               	btfss	3,0
  2293  01BA  118C               	bcf	12,3	;volatile
  2294                           
  2295                           ;sorce.c: 33: if(led[9][0]<time) RA1=0;
  2296  01BB  0877               	movf	_time,w
  2297  01BC  023B               	subwf	_led+27,w
  2298  01BD  1C03               	btfss	3,0
  2299  01BE  108C               	bcf	12,1	;volatile
  2300                           
  2301                           ;sorce.c: 34: if(led[9][1]<time) RA5=0;
  2302  01BF  0877               	movf	_time,w
  2303  01C0  023C               	subwf	_led+28,w
  2304  01C1  1C03               	btfss	3,0
  2305  01C2  128C               	bcf	12,5	;volatile
  2306                           
  2307                           ;sorce.c: 35: if(led[9][2]<time) RA4=0;
  2308  01C3  0877               	movf	_time,w
  2309  01C4  023D               	subwf	_led+29,w
  2310  01C5  1C03               	btfss	3,0
  2311  01C6  120C               	bcf	12,4	;volatile
  2312                           
  2313                           ;sorce.c: 36: if(led[10][0]<time) RC2=0;
  2314  01C7  0877               	movf	_time,w
  2315  01C8  023E               	subwf	_led+30,w
  2316  01C9  1C03               	btfss	3,0
  2317  01CA  110E               	bcf	14,2	;volatile
  2318                           
  2319                           ;sorce.c: 37: if(led[10][1]<time) RA7=0;
  2320  01CB  0877               	movf	_time,w
  2321  01CC  023F               	subwf	_led+31,w
  2322  01CD  1C03               	btfss	3,0
  2323  01CE  138C               	bcf	12,7	;volatile
  2324                           
  2325                           ;sorce.c: 38: if(led[10][2]<time) RA6=0;
  2326  01CF  0877               	movf	_time,w
  2327  01D0  0240               	subwf	_led+32,w
  2328  01D1  1C03               	btfss	3,0
  2329  01D2  130C               	bcf	12,6	;volatile
  2330                           
  2331                           ;sorce.c: 39: if(led[11][0]<time) RC1=0;
  2332  01D3  0877               	movf	_time,w
  2333  01D4  0241               	subwf	_led+33,w
  2334  01D5  1C03               	btfss	3,0
  2335  01D6  108E               	bcf	14,1	;volatile
  2336                           
  2337                           ;sorce.c: 40: if(led[11][1]<time) RC3=0;
  2338  01D7  0877               	movf	_time,w
  2339  01D8  0242               	subwf	_led+34,w
  2340  01D9  1C03               	btfss	3,0
  2341  01DA  118E               	bcf	14,3	;volatile
  2342                           
  2343                           ;sorce.c: 41: if(led[11][2]<time) RC0=0;
  2344  01DB  0877               	movf	_time,w
  2345  01DC  0243               	subwf	_led+35,w
  2346  01DD  1803               	skipnc
  2347  01DE  0008               	return
  2348  01DF  100E               	bcf	14,0	;volatile
  2349  01E0  0008               	return
  2350  01E1                     __end_of_no2:	
  2351                           
  2352                           	psect	text14
  2353  01E1                     __ptext14:	
  2354 ;; *************** function _no1 *****************
  2355 ;; Defined at:
  2356 ;;		line 16 in file "sorce.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;		None               void
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_changeLED
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _no1
  2385  01E1                     _no1:	
  2386                           
  2387                           ;sorce.c: 17: if(led[4][0]<time) RA2=0;
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _no1: [wreg]
  2391  01E1  0877               	movf	_time,w
  2392  01E2  0020               	movlb	0	; select bank0
  2393  01E3  022C               	subwf	_led+12,w
  2394  01E4  1C03               	btfss	3,0
  2395  01E5  110C               	bcf	12,2	;volatile
  2396                           
  2397                           ;sorce.c: 18: if(led[4][1]<time) RA0=0;
  2398  01E6  0877               	movf	_time,w
  2399  01E7  022D               	subwf	_led+13,w
  2400  01E8  1C03               	btfss	3,0
  2401  01E9  100C               	bcf	12,0	;volatile
  2402                           
  2403                           ;sorce.c: 19: if(led[4][2]<time) RA3=0;
  2404  01EA  0877               	movf	_time,w
  2405  01EB  022E               	subwf	_led+14,w
  2406  01EC  1C03               	btfss	3,0
  2407  01ED  118C               	bcf	12,3	;volatile
  2408                           
  2409                           ;sorce.c: 20: if(led[5][0]<time) RA1=0;
  2410  01EE  0877               	movf	_time,w
  2411  01EF  022F               	subwf	_led+15,w
  2412  01F0  1C03               	btfss	3,0
  2413  01F1  108C               	bcf	12,1	;volatile
  2414                           
  2415                           ;sorce.c: 21: if(led[5][1]<time) RA5=0;
  2416  01F2  0877               	movf	_time,w
  2417  01F3  0230               	subwf	_led+16,w
  2418  01F4  1C03               	btfss	3,0
  2419  01F5  128C               	bcf	12,5	;volatile
  2420                           
  2421                           ;sorce.c: 22: if(led[5][2]<time) RA4=0;
  2422  01F6  0877               	movf	_time,w
  2423  01F7  0231               	subwf	_led+17,w
  2424  01F8  1C03               	btfss	3,0
  2425  01F9  120C               	bcf	12,4	;volatile
  2426                           
  2427                           ;sorce.c: 23: if(led[6][0]<time) RC2=0;
  2428  01FA  0877               	movf	_time,w
  2429  01FB  0232               	subwf	_led+18,w
  2430  01FC  1C03               	btfss	3,0
  2431  01FD  110E               	bcf	14,2	;volatile
  2432                           
  2433                           ;sorce.c: 24: if(led[6][1]<time) RA7=0;
  2434  01FE  0877               	movf	_time,w
  2435  01FF  0233               	subwf	_led+19,w
  2436  0200  1C03               	btfss	3,0
  2437  0201  138C               	bcf	12,7	;volatile
  2438                           
  2439                           ;sorce.c: 25: if(led[6][2]<time) RA6=0;
  2440  0202  0877               	movf	_time,w
  2441  0203  0234               	subwf	_led+20,w
  2442  0204  1C03               	btfss	3,0
  2443  0205  130C               	bcf	12,6	;volatile
  2444                           
  2445                           ;sorce.c: 26: if(led[7][0]<time) RC1=0;
  2446  0206  0877               	movf	_time,w
  2447  0207  0235               	subwf	_led+21,w
  2448  0208  1C03               	btfss	3,0
  2449  0209  108E               	bcf	14,1	;volatile
  2450                           
  2451                           ;sorce.c: 27: if(led[7][1]<time) RC3=0;
  2452  020A  0877               	movf	_time,w
  2453  020B  0236               	subwf	_led+22,w
  2454  020C  1C03               	btfss	3,0
  2455  020D  118E               	bcf	14,3	;volatile
  2456                           
  2457                           ;sorce.c: 28: if(led[7][2]<time) RC0=0;
  2458  020E  0877               	movf	_time,w
  2459  020F  0237               	subwf	_led+23,w
  2460  0210  1803               	skipnc
  2461  0211  0008               	return
  2462  0212  100E               	bcf	14,0	;volatile
  2463  0213  0008               	return
  2464  0214                     __end_of_no1:	
  2465                           
  2466                           	psect	text15
  2467  0214                     __ptext15:	
  2468 ;; *************** function _no0 *****************
  2469 ;; Defined at:
  2470 ;;		line 3 in file "sorce.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;		None               void
  2477 ;; Registers used:
  2478 ;;		wreg
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;Total ram usage:        2 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_changeLED
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           
  2498                           ;psect for function _no0
  2499  0214                     _no0:	
  2500                           
  2501                           ;sorce.c: 4: if(led[0][0]<time)RA2=0;
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _no0: [wreg]
  2505  0214  0877               	movf	_time,w
  2506  0215  0020               	movlb	0	; select bank0
  2507  0216  0220               	subwf	_led,w
  2508  0217  1C03               	btfss	3,0
  2509  0218  110C               	bcf	12,2	;volatile
  2510                           
  2511                           ;sorce.c: 5: if(led[0][1]<time) RA0=0;
  2512  0219  0877               	movf	_time,w
  2513  021A  0221               	subwf	_led+1,w
  2514  021B  1C03               	btfss	3,0
  2515  021C  100C               	bcf	12,0	;volatile
  2516                           
  2517                           ;sorce.c: 6: if(led[0][2]<time) RA3=0;
  2518  021D  0877               	movf	_time,w
  2519  021E  0222               	subwf	_led+2,w
  2520  021F  1C03               	btfss	3,0
  2521  0220  118C               	bcf	12,3	;volatile
  2522                           
  2523                           ;sorce.c: 7: if(led[1][0]<time) RA1=0;
  2524  0221  0877               	movf	_time,w
  2525  0222  0223               	subwf	_led+3,w
  2526  0223  1C03               	btfss	3,0
  2527  0224  108C               	bcf	12,1	;volatile
  2528                           
  2529                           ;sorce.c: 8: if(led[1][1]<time) RA5=0;
  2530  0225  0877               	movf	_time,w
  2531  0226  0224               	subwf	_led+4,w
  2532  0227  1C03               	btfss	3,0
  2533  0228  128C               	bcf	12,5	;volatile
  2534                           
  2535                           ;sorce.c: 9: if(led[1][2]<time) RA4=0;
  2536  0229  0877               	movf	_time,w
  2537  022A  0225               	subwf	_led+5,w
  2538  022B  1C03               	btfss	3,0
  2539  022C  120C               	bcf	12,4	;volatile
  2540                           
  2541                           ;sorce.c: 10: if(led[2][0]<time) RC2=0;
  2542  022D  0877               	movf	_time,w
  2543  022E  0226               	subwf	_led+6,w
  2544  022F  1C03               	btfss	3,0
  2545  0230  110E               	bcf	14,2	;volatile
  2546                           
  2547                           ;sorce.c: 11: if(led[2][1]<time) RA7=0;
  2548  0231  0877               	movf	_time,w
  2549  0232  0227               	subwf	_led+7,w
  2550  0233  1C03               	btfss	3,0
  2551  0234  138C               	bcf	12,7	;volatile
  2552                           
  2553                           ;sorce.c: 12: if(led[2][2]<time) RA6=0;
  2554  0235  0877               	movf	_time,w
  2555  0236  0228               	subwf	_led+8,w
  2556  0237  1C03               	btfss	3,0
  2557  0238  130C               	bcf	12,6	;volatile
  2558                           
  2559                           ;sorce.c: 13: if(led[3][0]<time) RC1=0;
  2560  0239  0877               	movf	_time,w
  2561  023A  0229               	subwf	_led+9,w
  2562  023B  1C03               	btfss	3,0
  2563  023C  108E               	bcf	14,1	;volatile
  2564                           
  2565                           ;sorce.c: 14: if(led[3][1]<time) RC3=0;
  2566  023D  0877               	movf	_time,w
  2567  023E  022A               	subwf	_led+10,w
  2568  023F  1C03               	btfss	3,0
  2569  0240  118E               	bcf	14,3	;volatile
  2570                           
  2571                           ;sorce.c: 15: if(led[3][2]<time) RC0=0;
  2572  0241  0877               	movf	_time,w
  2573  0242  022B               	subwf	_led+11,w
  2574  0243  1803               	skipnc
  2575  0244  0008               	return
  2576  0245  100E               	bcf	14,0	;volatile
  2577  0246  0008               	return
  2578  0247                     __end_of_no0:	
  2579  007E                     btemp	set	126	;btemp
  2580  007E                     pic14e$flags	set	126
  2581  007E                     wtemp	set	126
  2582  007E                     wtemp0	set	126
  2583  0080                     wtemp1	set	128
  2584  0082                     wtemp2	set	130
  2585  0084                     wtemp3	set	132
  2586  0086                     wtemp4	set	134
  2587  0088                     wtemp5	set	136
  2588  007F                     wtemp6	set	127
  2589  007E                     ttemp	set	126
  2590  007E                     ttemp0	set	126
  2591  0081                     ttemp1	set	129
  2592  0084                     ttemp2	set	132
  2593  0087                     ttemp3	set	135
  2594  007F                     ttemp4	set	127
  2595  007E                     ltemp	set	126
  2596  007E                     ltemp0	set	126
  2597  0082                     ltemp1	set	130
  2598  0086                     ltemp2	set	134
  2599  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     16      64
    BANK1            80      0      48
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    countup@i	PTR unsigned char  size(1) Largest target is 1
		 -> main@i(BANK0[1]), 

    countup@j	PTR unsigned char  size(1) Largest target is 1
		 -> main@j(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___bmul
    _main->_countup
    _main->_waitstart
    _setdata->___bmul

Critical Paths under _InterTimer in COMMON

    _InterTimer->_changeLED
    _changeLED->_no0
    _changeLED->_no1
    _changeLED->_no2
    _changeLED->_no3

Critical Paths under _main in BANK0

    _main->_setdata
    _setdata->___bmul

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0    1484
                                             10 BANK0      6     6      0
                             ___bmul
                            _countup
                              _getch
                            _setdata
                             _setpin
                          _waitdelay
                          _waitstart
 ---------------------------------------------------------------------------------
 (1) _waitstart                                            1     1      0      24
                                              6 COMMON     1     1      0
                              _getch
 ---------------------------------------------------------------------------------
 (2) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _waitdelay                                            2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setdata                                              7     7      0     536
                                              3 BANK0      7     7      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     276
                                              6 COMMON     1     0      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _countup                                              4     2      2     200
                                              6 COMMON     1     1      0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           2     2      0      15
                                              4 COMMON     2     2      0
                          _changeLED
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _changeLED                                            2     2      0       0
                                              2 COMMON     2     2      0
                                _no0
                                _no1
                                _no2
                                _no3
                            _noxinit
 ---------------------------------------------------------------------------------
 (5) _noxinit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _no3                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no2                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no1                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _no0                                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _countup
   _getch
   _setdata
     ___bmul
   _setpin
   _waitdelay
   _waitstart
     _getch

 _InterTimer (ROOT)
   _changeLED
     _no0
     _no1
     _no2
     _no3
     _noxinit
   _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      78      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      78      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Aug 25 17:19:35 2014

         ___bmul@product 0051              __CFG_CP$OFF 0000              __CFG_LVP$ON 0000  
                    l250 0072                      l323 02DB                      l252 0074  
                    l253 0076                      l254 0078                      l255 007A  
                    l256 007C                      l257 007E                      l258 0080  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RC0 0070                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RC2 0072                      _RB4 006C  
                    _RA6 0066                      _RC3 0073                      _RB5 006D  
                    _RA7 0067                      _RE0 0080                      _RB6 006E  
                    _RE1 0081                      _RB7 006F                      _RE2 0082  
           __CFG_CPD$OFF 0000                      _no0 0214                      _no1 01E1  
                    _no2 01AE                      _no3 017B                      _led 0020  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
                   l1313 028A                     l1305 0277                     ?_no0 0070  
                   l1503 02A9                     ?_no1 0070                     ?_no2 0070  
                   ?_no3 0070                     l1523 0255                     l1507 02AF  
                   l1535 0272                     l1551 014C                     l1529 0265  
                   l1643 0083                     l1651 0086                     l1557 0176  
                   l1671 00BD                     l1639 0082                     l1665 00B8  
                   l1657 00AF                     l1649 0090                     l1683 0103  
                   l1685 0116                     l1693 0127                     l1689 011F  
                   u1227 02CD                     _RCIF 008D                     _TMR0 0015  
                   _TRMT 0CF1                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0033                     _time 0077  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   _stoc 00A0                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 001D                     ttemp 007E  
                   wtemp 007E        ___bmul@multiplier 0052                    ??_no0 0072  
                  ??_no1 0072                    ??_no2 0072                    ??_no3 0072  
          __CFG_PLLEN$ON 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l242 0018                    i1l317 02E3                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _PORTE 0010                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TRISD 008F                    _TRISE 0090  
                  _TXREG 019A                    _TXSTA 019E            __CFG_PWRTE$ON 0000  
        __end_of_countup 0275                    _getch 02DB                    _putch 02E2  
                  main@i 005F                    main@j 005E          __end_of_setdata 017B  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080          __end_of_noxinit 02DB                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 001F             __end_of_main 0141                   ??_main 005A  
             _InterTimer 0004                   ?_getch 0070                   _ANSELA 018C  
                 ?_putch 0070                   _ANSELB 018D                   _ANSELD 018F  
                 _ANSELE 0190                   i1l1033 02BE                   _OSCCON 0099  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TRISC6 0476  
                 _TRISC7 0477                   _nWPUEN 04AF                   ___bmul 02A6  
         __CFG_STVREN$ON 0000                   _setpin 028E                ??_countup 0076  
              ??_setdata 0053                ??_noxinit 0070            main@stoclocal 005D  
__end_of__initialization 002F      ___bmul@multiplicand 0076           __pcstackCOMMON 0070  
     __size_of_changeLED 0010            __end_of_getch 02E2            __end_of_putch 02E9  
            ?_InterTimer 0070                  ??_getch 0076                  ??_putch 0070  
             __pbssBANK0 0020               __pbssBANK1 00A0          __CFG_VCAPEN$OFF 0000  
             __pmaintext 0033                  ?___bmul 0076               __pintentry 0004  
                _BAUDCON 019F                  ?_setpin 0070       __size_of_waitdelay 000B  
     __size_of_waitstart 0019        __end_of_changeLED 02C8      __size_of_InterTimer 0019  
        __size_of___bmul 0012                  __ptext0 0000                  __ptext1 0275  
                __ptext2 02DB                  __ptext3 02C8                  __ptext4 028E  
                __ptext5 0141                  __ptext6 02A6                  __ptext7 0247  
                __ptext9 02E2          __size_of_setpin 0018                  _countup 0247  
           __size_of_no0 0033             __size_of_no1 0033             __size_of_no2 0033  
           __size_of_no3 0033                  _setdata 0141                  _noxinit 02D3  
                clrloop0 02EA     end_of_initialization 002F        __end_of_waitdelay 02D3  
      __end_of_waitstart 028E         __CFG_FOSC$INTOSC 0000              waitstart@ch 0076  
         __end_of___bmul 02B8             ??_InterTimer 0074           __end_of_setpin 02A6  
    start_initialization 001F              __end_of_no0 0247              __end_of_no1 0214  
            __end_of_no2 01E1              __end_of_no3 01AE       __end_of_InterTimer 001D  
               ??___bmul 0050                 ??_setpin 0076              __pbssCOMMON 0077  
              ___latbits 0003            __pcstackBANK0 0050                _changeLED 02B8  
               ?_countup 0050                 ?_setdata 0070                 ?_noxinit 0070  
         __size_of_getch 0007           __size_of_putch 0007               ?_changeLED 0070  
              clear_ram0 02E9                _waitdelay 02C8                _waitstart 0275  
             ?_waitdelay 0070               ?_waitstart 0070         __size_of_countup 002E  
               __ptext10 02B8                 __ptext11 02D3                 __ptext12 017B  
               __ptext13 01AE                 __ptext14 01E1                 __ptext15 0214  
       __size_of_setdata 003A         __size_of_noxinit 0008            __size_of_main 010E  
            ??_changeLED 0072                putch@Data 0070                 countup@i 0052  
               countup@j 0050              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000                 setdata@i 0058                 setdata@j 0059  
            ??_waitdelay 0050              ??_waitstart 0076               _OPTION_REG 0095  
