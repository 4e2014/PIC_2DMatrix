

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Sep 28 15:22:32 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1939
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x620,48
    26                           	dabs	1,0x5C6,42
    27                           	dabs	1,0x2396,0,_putdata
    28                           	dabs	1,0x7E,2
    29  0000                     	;# 
    30  0001                     	;# 
    31  0002                     	;# 
    32  0003                     	;# 
    33  0004                     	;# 
    34  0005                     	;# 
    35  0006                     	;# 
    36  0007                     	;# 
    37  0008                     	;# 
    38  0009                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000D                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0110                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  018C                     	;# 
    97  018D                     	;# 
    98  018F                     	;# 
    99  0190                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020D                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0214                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0217                     	;# 
   130  0291                     	;# 
   131  0291                     	;# 
   132  0292                     	;# 
   133  0293                     	;# 
   134  0294                     	;# 
   135  0295                     	;# 
   136  0295                     	;# 
   137  0296                     	;# 
   138  0298                     	;# 
   139  0298                     	;# 
   140  0299                     	;# 
   141  029A                     	;# 
   142  029B                     	;# 
   143  029C                     	;# 
   144  029C                     	;# 
   145  029D                     	;# 
   146  029E                     	;# 
   147  029F                     	;# 
   148  0311                     	;# 
   149  0311                     	;# 
   150  0312                     	;# 
   151  0313                     	;# 
   152  0314                     	;# 
   153  0315                     	;# 
   154  0315                     	;# 
   155  0316                     	;# 
   156  0318                     	;# 
   157  0318                     	;# 
   158  0319                     	;# 
   159  031A                     	;# 
   160  031C                     	;# 
   161  031C                     	;# 
   162  031D                     	;# 
   163  031E                     	;# 
   164  0394                     	;# 
   165  0395                     	;# 
   166  0396                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0791                     	;# 
   174  0792                     	;# 
   175  0793                     	;# 
   176  0794                     	;# 
   177  0795                     	;# 
   178  0798                     	;# 
   179  0799                     	;# 
   180  079A                     	;# 
   181  07A0                     	;# 
   182  07A1                     	;# 
   183  07A2                     	;# 
   184  07A3                     	;# 
   185  07A4                     	;# 
   186  07A5                     	;# 
   187  07A6                     	;# 
   188  07A7                     	;# 
   189  07A8                     	;# 
   190  07A9                     	;# 
   191  07AA                     	;# 
   192  07AB                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  008F                     	;# 
   239  0090                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0110                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018F                     	;# 
   274  0190                     	;# 
   275  0191                     	;# 
   276  0191                     	;# 
   277  0192                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0193                     	;# 
   281  0194                     	;# 
   282  0195                     	;# 
   283  0196                     	;# 
   284  0199                     	;# 
   285  019A                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019B                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020D                     	;# 
   296  0210                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0291                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0293                     	;# 
   309  0294                     	;# 
   310  0295                     	;# 
   311  0295                     	;# 
   312  0296                     	;# 
   313  0298                     	;# 
   314  0298                     	;# 
   315  0299                     	;# 
   316  029A                     	;# 
   317  029B                     	;# 
   318  029C                     	;# 
   319  029C                     	;# 
   320  029D                     	;# 
   321  029E                     	;# 
   322  029F                     	;# 
   323  0311                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031C                     	;# 
   336  031C                     	;# 
   337  031D                     	;# 
   338  031E                     	;# 
   339  0394                     	;# 
   340  0395                     	;# 
   341  0396                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0791                     	;# 
   349  0792                     	;# 
   350  0793                     	;# 
   351  0794                     	;# 
   352  0795                     	;# 
   353  0798                     	;# 
   354  0799                     	;# 
   355  079A                     	;# 
   356  07A0                     	;# 
   357  07A1                     	;# 
   358  07A2                     	;# 
   359  07A3                     	;# 
   360  07A4                     	;# 
   361  07A5                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A8                     	;# 
   365  07A9                     	;# 
   366  07AA                     	;# 
   367  07AB                     	;# 
   368  0FE4                     	;# 
   369  0FE5                     	;# 
   370  0FE6                     	;# 
   371  0FE7                     	;# 
   372  0FE8                     	;# 
   373  0FE9                     	;# 
   374  0FEA                     	;# 
   375  0FEB                     	;# 
   376  0FED                     	;# 
   377  0FEE                     	;# 
   378  0FEF                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  010C                     	;# 
   430  010D                     	;# 
   431  010E                     	;# 
   432  010F                     	;# 
   433  0110                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  018F                     	;# 
   449  0190                     	;# 
   450  0191                     	;# 
   451  0191                     	;# 
   452  0192                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0193                     	;# 
   456  0194                     	;# 
   457  0195                     	;# 
   458  0196                     	;# 
   459  0199                     	;# 
   460  019A                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019C                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020D                     	;# 
   471  0210                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0213                     	;# 
   475  0214                     	;# 
   476  0215                     	;# 
   477  0215                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0291                     	;# 
   481  0291                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0294                     	;# 
   485  0295                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0298                     	;# 
   489  0298                     	;# 
   490  0299                     	;# 
   491  029A                     	;# 
   492  029B                     	;# 
   493  029C                     	;# 
   494  029C                     	;# 
   495  029D                     	;# 
   496  029E                     	;# 
   497  029F                     	;# 
   498  0311                     	;# 
   499  0311                     	;# 
   500  0312                     	;# 
   501  0313                     	;# 
   502  0314                     	;# 
   503  0315                     	;# 
   504  0315                     	;# 
   505  0316                     	;# 
   506  0318                     	;# 
   507  0318                     	;# 
   508  0319                     	;# 
   509  031A                     	;# 
   510  031C                     	;# 
   511  031C                     	;# 
   512  031D                     	;# 
   513  031E                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  0415                     	;# 
   518  0416                     	;# 
   519  0417                     	;# 
   520  041C                     	;# 
   521  041D                     	;# 
   522  041E                     	;# 
   523  0791                     	;# 
   524  0792                     	;# 
   525  0793                     	;# 
   526  0794                     	;# 
   527  0795                     	;# 
   528  0798                     	;# 
   529  0799                     	;# 
   530  079A                     	;# 
   531  07A0                     	;# 
   532  07A1                     	;# 
   533  07A2                     	;# 
   534  07A3                     	;# 
   535  07A4                     	;# 
   536  07A5                     	;# 
   537  07A6                     	;# 
   538  07A7                     	;# 
   539  07A8                     	;# 
   540  07A9                     	;# 
   541  07AA                     	;# 
   542  07AB                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;_putdata
   554  000C                     _PORTA	set	12
   555  000D                     _PORTB	set	13
   556  000E                     _PORTC	set	14
   557  000F                     _PORTD	set	15
   558  0010                     _PORTE	set	16
   559  0015                     _TMR0	set	21
   560  005F                     _GIE	set	95
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0062                     _RA2	set	98
   564  0063                     _RA3	set	99
   565  0064                     _RA4	set	100
   566  0065                     _RA5	set	101
   567  0066                     _RA6	set	102
   568  0067                     _RA7	set	103
   569  0070                     _RC0	set	112
   570  0071                     _RC1	set	113
   571  0072                     _RC2	set	114
   572  0073                     _RC3	set	115
   573  008D                     _RCIF	set	141
   574  005D                     _TMR0IE	set	93
   575  005A                     _TMR0IF	set	90
   576  0095                     _OPTION_REG	set	149
   577  0099                     _OSCCON	set	153
   578  008C                     _TRISA	set	140
   579  008D                     _TRISB	set	141
   580  008E                     _TRISC	set	142
   581  008F                     _TRISD	set	143
   582  0090                     _TRISE	set	144
   583  0476                     _TRISC6	set	1142
   584  0477                     _TRISC7	set	1143
   585  04AF                     _nWPUEN	set	1199
   586  0191                     _EEADR	set	401
   587  018C                     _ANSELA	set	396
   588  018D                     _ANSELB	set	397
   589  018F                     _ANSELD	set	399
   590  0190                     _ANSELE	set	400
   591  019F                     _BAUDCON	set	415
   592  0193                     _EEDATA	set	403
   593  0199                     _RCREG	set	409
   594  019D                     _RCSTA	set	413
   595  019B                     _SPBRG	set	411
   596  019A                     _TXREG	set	410
   597  019E                     _TXSTA	set	414
   598  0CA8                     _RD	set	3240
   599  0CF1                     _TRMT	set	3313
   600  020D                     _WPUB	set	525
   601                           
   602                           	psect	text0
   603  0000                     __ptext0:	
   604                           ; #config settings
   605                           
   606                           
   607                           ;psect for function i1___wmul
   608  0000                     
   609                           	psect	cinit
   610  001C                     start_initialization:	
   611  001C                     __initialization:		;BIGRAM
   612                           
   613                           ; Clear objects allocated to BIGRAM
   614  001C  3096               	movlw	low (0+9110)
   615  001D  0084               	movwf	4
   616  001E  3023               	movlw	high (0+9110)
   617  001F  0085               	movwf	5
   618  0020  305A               	movlw	90
   619  0021  00FE               	movwf	btemp
   620  0022  3000               	movlw	0
   621  0023  00FF               	movwf	btemp+1
   622  0024  3184  2422  3180   	fcall	clear_ram0
   623                           
   624                           ; Clear objects allocated to COMMON
   625  0027  01FD               	clrf	__pbssCOMMON& (0+127)
   626                           
   627                           ; Clear objects allocated to BANK0
   628  0028  01E6               	clrf	__pbssBANK0& (0+127)
   629  0029  01E7               	clrf	(__pbssBANK0+1)& (0+127)
   630                           
   631                           ; Clear objects allocated to BANK2
   632  002A  3020               	movlw	low __pbssBANK2
   633  002B  0084               	movwf	4
   634  002C  3001               	movlw	high __pbssBANK2
   635  002D  0085               	movwf	5
   636  002E  3030               	movlw	48
   637  002F  00FE               	movwf	btemp
   638  0030  3000               	movlw	0
   639  0031  00FF               	movwf	btemp+1
   640  0032  3184  2422  3180   	fcall	clear_ram0
   641                           
   642                           ; Clear objects allocated to BANK3
   643  0035  30A0               	movlw	low __pbssBANK3
   644  0036  0084               	movwf	4
   645  0037  3001               	movlw	high __pbssBANK3
   646  0038  0085               	movwf	5
   647  0039  3030               	movlw	48
   648  003A  00FE               	movwf	btemp
   649  003B  3000               	movlw	0
   650  003C  00FF               	movwf	btemp+1
   651  003D  3184  2422  3180   	fcall	clear_ram0
   652                           
   653                           ; Clear objects allocated to BANK4
   654  0040  3020               	movlw	low __pbssBANK4
   655  0041  0084               	movwf	4
   656  0042  3002               	movlw	high __pbssBANK4
   657  0043  0085               	movwf	5
   658  0044  3046               	movlw	70
   659  0045  00FE               	movwf	btemp
   660  0046  3000               	movlw	0
   661  0047  00FF               	movwf	btemp+1
   662  0048  3184  2422         	fcall	clear_ram0
   663  004A                     end_of_initialization:	
   664                           ;End of C runtime variable initialization code
   665                           
   666  004A                     __end_of__initialization:	
   667  004A  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   668  004B  0020               	movlb	0
   669  004C  3180  284E         	ljmp	_main	;jump to C main() function
   670                           
   671                           	psect	bssCOMMON
   672  007D                     __pbssCOMMON:	
   673  007D                     _ledcount:	
   674  007D                     	ds	1
   675                           
   676                           	psect	bssBANK0
   677  0066                     __pbssBANK0:	
   678  0066                     _reservingNow:	
   679  0066                     	ds	1
   680  0067                     _time:	
   681  0067                     	ds	1
   682                           
   683                           	psect	bssBANK2
   684  0120                     __pbssBANK2:	
   685  0120                     _led:	
   686  0120                     	ds	48
   687                           
   688                           	psect	bssBANK3
   689  01A0                     __pbssBANK3:	
   690  01A0                     _stoc:	
   691  01A0                     	ds	48
   692                           
   693                           	psect	bssBANK4
   694  0220                     __pbssBANK4:	
   695  0220                     main@F3525:	
   696  0220                     	ds	70
   697                           
   698                           	psect	clrtext
   699  0422                     clear_ram0:	
   700                           ;	Called with FSR0 containing the base address, and
   701                           ;	btemp/btemp+1 has the size to clear
   702                           
   703  0422  0064               	clrwdt	;clear the watchdog before getting into this loop
   704  0423                     clrloop0:	
   705  0423  0180               	clrf	0	;clear RAM location pointed to by FSR
   706  0424  3101               	addfsr 0,1
   707  0425  3001               	movlw	1
   708  0426  02FE               	subwf	126,f
   709  0427  3000               	movlw	0
   710  0428  3BFF               	subwfb	127,f
   711  0429  087F               	movf	127,w
   712  042A  047E               	iorwf	126,w
   713  042B  1903               	btfsc	3,2
   714  042C  3400               	retlw	0	;all done for this memory range, return
   715  042D  2C23               	goto	clrloop0	;have we reached the end yet?
   716                           
   717                           	psect	cstackBANK1
   718  00A0                     __pcstackBANK1:	
   719  00A0                     main@getdata:	
   720                           
   721                           ; 70 bytes @ 0x0
   722  00A0                     	ds	70
   723                           
   724                           	psect	cstackCOMMON
   725  0070                     __pcstackCOMMON:	
   726  0070                     ?_setpin:	
   727  0070                     ?_change:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_InterTimer:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_main:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_getch:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_x2:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_E2promRead:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?i1___wmul:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     i1___wmul@multiplier:	
   749                           ; 2 bytes @ 0x0
   750                           
   751                           
   752                           ; 2 bytes @ 0x0
   753  0070                     	ds	2
   754  0072                     i1___wmul@multiplicand:	
   755                           
   756                           ; 2 bytes @ 0x2
   757  0072                     	ds	2
   758  0074                     ??i1___wmul:	
   759  0074                     i1___wmul@product:	
   760                           ; 0 bytes @ 0x4
   761                           
   762                           
   763                           ; 2 bytes @ 0x4
   764  0074                     	ds	2
   765  0076                     ??_change:	
   766                           
   767                           ; 0 bytes @ 0x6
   768  0076                     	ds	6
   769  007C                     ??_InterTimer:	
   770                           
   771                           ; 0 bytes @ 0xC
   772  007C                     	ds	1
   773                           
   774                           	psect	cstackBANK0
   775  0020                     __pcstackBANK0:	
   776  0020                     ??_getch:	
   777  0020                     ??_setpin:	
   778                           ; 0 bytes @ 0x0
   779                           
   780  0020                     ??_E2promRead:	
   781                           ; 0 bytes @ 0x0
   782                           
   783  0020                     ?___wmul:	
   784                           ; 0 bytes @ 0x0
   785                           
   786  0020                     ?___awdiv:	
   787                           ; 2 bytes @ 0x0
   788                           
   789  0020                     ___wmul@multiplier:	
   790                           ; 2 bytes @ 0x0
   791                           
   792  0020                     ___awdiv@divisor:	
   793                           ; 2 bytes @ 0x0
   794                           
   795                           
   796                           ; 2 bytes @ 0x0
   797  0020                     	ds	2
   798  0022                     E2promRead@adr:	
   799  0022                     ___wmul@multiplicand:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  0022                     ___awdiv@dividend:	
   803                           ; 2 bytes @ 0x2
   804                           
   805                           
   806                           ; 2 bytes @ 0x2
   807  0022                     	ds	2
   808  0024                     ??___wmul:	
   809  0024                     ??___awdiv:	
   810                           ; 0 bytes @ 0x4
   811                           
   812  0024                     ___wmul@product:	
   813                           ; 0 bytes @ 0x4
   814                           
   815                           
   816                           ; 2 bytes @ 0x4
   817  0024                     	ds	1
   818  0025                     ___awdiv@counter:	
   819                           
   820                           ; 1 bytes @ 0x5
   821  0025                     	ds	1
   822  0026                     ___awdiv@sign:	
   823                           
   824                           ; 1 bytes @ 0x6
   825  0026                     	ds	1
   826  0027                     ___awdiv@quotient:	
   827                           
   828                           ; 2 bytes @ 0x7
   829  0027                     	ds	2
   830  0029                     ??_x2:	
   831                           
   832                           ; 0 bytes @ 0x9
   833  0029                     	ds	3
   834  002C                     x2@i:	
   835                           
   836                           ; 1 bytes @ 0xC
   837  002C                     	ds	1
   838  002D                     x2@ret:	
   839                           
   840                           ; 1 bytes @ 0xD
   841  002D                     	ds	1
   842  002E                     x2@num:	
   843                           
   844                           ; 1 bytes @ 0xE
   845  002E                     	ds	1
   846  002F                     ??_main:	
   847                           
   848                           ; 0 bytes @ 0xF
   849  002F                     	ds	15
   850  003E                     main@getKeeping:	
   851                           
   852                           ; 32 bytes @ 0x1E
   853  003E                     	ds	32
   854  005E                     main@individual:	
   855                           
   856                           ; 1 bytes @ 0x3E
   857  005E                     	ds	1
   858  005F                     main@n:	
   859                           
   860                           ; 1 bytes @ 0x3F
   861  005F                     	ds	1
   862  0060                     main@gettingSuccess:	
   863                           
   864                           ; 1 bytes @ 0x40
   865  0060                     	ds	1
   866  0061                     main@getNum:	
   867                           
   868                           ; 1 bytes @ 0x41
   869  0061                     	ds	1
   870  0062                     main@resetFlug:	
   871                           
   872                           ; 1 bytes @ 0x42
   873  0062                     	ds	1
   874  0063                     main@j:	
   875                           
   876                           ; 1 bytes @ 0x43
   877  0063                     	ds	1
   878  0064                     main@onetime:	
   879                           
   880                           ; 1 bytes @ 0x44
   881  0064                     	ds	1
   882  0065                     main@i:	
   883                           
   884                           ; 1 bytes @ 0x45
   885  0065                     	ds	1
   886                           
   887                           	psect	maintext
   888  004E                     __pmaintext:	
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 81 in file "ver0.0_20140727.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  getdata        70    0[BANK1 ] unsigned char [70]
   899 ;;  getKeeping     32   30[BANK0 ] unsigned char [2][16]
   900 ;;  test           32    0        unsigned char [4][8]
   901 ;;  i               1   69[BANK0 ] unsigned char 
   902 ;;  onetime         1   68[BANK0 ] unsigned char 
   903 ;;  j               1   67[BANK0 ] unsigned char 
   904 ;;  resetFlug       1   66[BANK0 ] unsigned char 
   905 ;;  getNum          1   65[BANK0 ] unsigned char 
   906 ;;  gettingSucce    1   64[BANK0 ] unsigned char 
   907 ;;  n               1   63[BANK0 ] unsigned char 
   908 ;;  individual      1   62[BANK0 ] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 17F/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   919 ;;      Locals:         0      40      70       0       0       0       0       0       0       0       0       0       
      +0       0
   920 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   921 ;;      Totals:         0      55      70       0       0       0       0       0       0       0       0       0       
      +0       0
   922 ;;Total ram usage:      125 bytes
   923 ;; Hardware stack levels required when called:    5
   924 ;; This function calls:
   925 ;;		_E2promRead
   926 ;;		___wmul
   927 ;;		_getch
   928 ;;		_setpin
   929 ;;		_x2
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _main
   937  004E                     _main:	
   938                           
   939                           ;ver0.0_20140727.c: 83: char i,j,n,test[8][4],individual=255;
   940                           
   941                           ;incstack = 0
   942                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   943  004E  30FF               	movlw	255
   944  004F  0020               	movlb	0	; select bank0
   945  0050  00AF               	movwf	??_main
   946  0051  082F               	movf	??_main,w
   947  0052  00DE               	movwf	main@individual
   948                           
   949                           ;ver0.0_20140727.c: 84: char getdata[70]={0},getKeeping[16][2],getNum=0,onetime=0,resetF
      +                          lug=0,gettingSuccess=0;
   950  0053  3020               	movlw	low main@F3525
   951  0054  0086               	movwf	6
   952  0055  3002               	movlw	high main@F3525
   953  0056  0087               	movwf	7
   954  0057  30A0               	movlw	low main@getdata
   955  0058  0084               	movwf	4
   956  0059  3000               	movlw	high main@getdata
   957  005A  0085               	movwf	5
   958  005B  3046               	movlw	70
   959  005C  00AF               	movwf	??_main
   960  005D                     u1730:	
   961  005D  0016               	moviw fsr1++
   962  005E  001A               	movwi fsr0++
   963  005F  0BAF               	decfsz	??_main,f
   964  0060  285D               	goto	u1730
   965  0061  01E1               	clrf	main@getNum
   966  0062  01E4               	clrf	main@onetime
   967  0063  01E2               	clrf	main@resetFlug
   968  0064  01E0               	clrf	main@gettingSuccess
   969                           
   970                           ;ver0.0_20140727.c: 85: setpin();
   971  0065  3183  23FB  3180   	fcall	_setpin
   972                           
   973                           ;ver0.0_20140727.c: 86: TRISC7 = 1; TRISC6 = 0; SPBRG = ((int)((32000000)/((16L)*(38400L
      +                          )))-1); RCSTA = (0|0x90); TXSTA = (0x4|0|0x20); BAUDCON = 0;
   974  0068  0021               	movlb	1	; select bank1
   975  0069  178E               	bsf	14,7	;volatile
   976  006A  130E               	bcf	14,6	;volatile
   977  006B  3033               	movlw	51
   978  006C  0023               	movlb	3	; select bank3
   979  006D  009B               	movwf	27	;volatile
   980  006E  3090               	movlw	144
   981  006F  009D               	movwf	29	;volatile
   982  0070  3024               	movlw	36
   983  0071  009E               	movwf	30	;volatile
   984  0072  019F               	clrf	31	;volatile
   985                           
   986                           ;ver0.0_20140727.c: 87: individual=E2promRead(0x00);
   987  0073  3000               	movlw	0
   988  0074  3184  2413  3180   	fcall	_E2promRead
   989  0077  0020               	movlb	0	; select bank0
   990  0078  00AF               	movwf	??_main
   991  0079  082F               	movf	??_main,w
   992  007A  00DE               	movwf	main@individual
   993                           
   994                           ;ver0.0_20140727.c: 88: for(i=0;i<16;i++)
   995  007B  01E5               	clrf	main@i
   996  007C  3010               	movlw	16
   997  007D  0265               	subwf	main@i,w
   998  007E  1803               	btfsc	3,0
   999  007F  28B3               	goto	l1606
  1000  0080                     l1600:	
  1001                           
  1002                           ;ver0.0_20140727.c: 89: putdata[i][1]=x2(i);
  1003  0080  0865               	movf	main@i,w
  1004  0081  3183  2393  3180   	fcall	_x2
  1005  0084  0020               	movlb	0	; select bank0
  1006  0085  00AF               	movwf	??_main
  1007  0086  0865               	movf	main@i,w
  1008  0087  00B0               	movwf	??_main+1
  1009  0088  01B1               	clrf	??_main+2
  1010  0089  0830               	movf	??_main+1,w
  1011  008A  00A0               	movwf	___wmul@multiplier
  1012  008B  0831               	movf	??_main+2,w
  1013  008C  00A1               	movwf	___wmul@multiplier+1
  1014  008D  3005               	movlw	5
  1015  008E  00A2               	movwf	___wmul@multiplicand
  1016  008F  3000               	movlw	0
  1017  0090  00A3               	movwf	___wmul@multiplicand+1
  1018  0091  3183  23C0  3180   	fcall	___wmul
  1019  0094  0020               	movlb	0	; select bank0
  1020  0095  0820               	movf	?___wmul,w
  1021  0096  3E01               	addlw	1
  1022  0097  00B2               	movwf	??_main+3
  1023  0098  3000               	movlw	0
  1024  0099  3D21               	addwfc	?___wmul+1,w
  1025  009A  00B3               	movwf	??_main+4
  1026  009B  3096               	movlw	150
  1027  009C  00B4               	movwf	??_main+5
  1028  009D  3023               	movlw	35
  1029  009E  00B5               	movwf	??_main+6
  1030  009F  0832               	movf	??_main+3,w
  1031  00A0  0734               	addwf	??_main+5,w
  1032  00A1  00B6               	movwf	??_main+7
  1033  00A2  0833               	movf	??_main+4,w
  1034  00A3  3D35               	addwfc	??_main+6,w
  1035  00A4  00B7               	movwf	??_main+8
  1036  00A5  0836               	movf	??_main+7,w
  1037  00A6  0086               	movwf	6
  1038  00A7  0837               	movf	??_main+8,w
  1039  00A8  0087               	movwf	7
  1040  00A9  082F               	movf	??_main,w
  1041  00AA  0081               	movwf	1
  1042  00AB  3001               	movlw	1
  1043  00AC  00AF               	movwf	??_main
  1044  00AD  082F               	movf	??_main,w
  1045  00AE  07E5               	addwf	main@i,f
  1046  00AF  3010               	movlw	16
  1047  00B0  0265               	subwf	main@i,w
  1048  00B1  1C03               	skipc
  1049  00B2  2880               	goto	l1600
  1050  00B3                     l1606:	
  1051                           
  1052                           ;ver0.0_20140727.c: 90: OPTION_REG = 0b0000100 ;
  1053  00B3  3004               	movlw	4
  1054  00B4  0021               	movlb	1	; select bank1
  1055  00B5  0095               	movwf	21	;volatile
  1056                           
  1057                           ;ver0.0_20140727.c: 91: TMR0 = 61 ;
  1058  00B6  303D               	movlw	61
  1059  00B7  0020               	movlb	0	; select bank0
  1060  00B8  0095               	movwf	21	;volatile
  1061                           
  1062                           ;ver0.0_20140727.c: 92: TMR0IF = 0 ;
  1063  00B9  110B               	bcf	11,2	;volatile
  1064                           
  1065                           ;ver0.0_20140727.c: 93: time = 0 ;
  1066  00BA  01E7               	clrf	_time
  1067                           
  1068                           ;ver0.0_20140727.c: 94: TMR0IE = 1 ;
  1069  00BB  168B               	bsf	11,5	;volatile
  1070                           
  1071                           ;ver0.0_20140727.c: 95: WPUB = 0xC0;
  1072  00BC  30C0               	movlw	192
  1073  00BD  0024               	movlb	4	; select bank4
  1074  00BE  008D               	movwf	13	;volatile
  1075                           
  1076                           ;ver0.0_20140727.c: 96: nWPUEN = 0;
  1077  00BF  0021               	movlb	1	; select bank1
  1078  00C0  1395               	bcf	21,7	;volatile
  1079                           
  1080                           ;ver0.0_20140727.c: 97: GIE = 1 ;
  1081  00C1  178B               	bsf	11,7	;volatile
  1082  00C2                     l1620:	
  1083                           ;ver0.0_20140727.c: 98: while(1) {
  1084                           
  1085                           
  1086                           ;ver0.0_20140727.c: 100: if(getNum>69)
  1087  00C2  3046               	movlw	70
  1088  00C3  0020               	movlb	0	; select bank0
  1089  00C4  0261               	subwf	main@getNum,w
  1090  00C5  1C03               	skipc
  1091  00C6  28C9               	goto	l1624
  1092                           
  1093                           ;ver0.0_20140727.c: 101: getNum=0;
  1094  00C7  01E1               	clrf	main@getNum
  1095  00C8  28E0               	goto	l1634
  1096  00C9                     l1624:	
  1097                           
  1098                           ;ver0.0_20140727.c: 102: else if(reservingNow){
  1099  00C9  0866               	movf	_reservingNow,w
  1100  00CA  1903               	btfsc	3,2
  1101  00CB  28E0               	goto	l1634
  1102                           
  1103                           ;ver0.0_20140727.c: 103: onetime=getch();
  1104  00CC  3184  242E  3180   	fcall	_getch
  1105  00CF  0020               	movlb	0	; select bank0
  1106  00D0  00AF               	movwf	??_main
  1107  00D1  082F               	movf	??_main,w
  1108  00D2  00E4               	movwf	main@onetime
  1109                           
  1110                           ;ver0.0_20140727.c: 104: getdata[getNum]=onetime;
  1111  00D3  0864               	movf	main@onetime,w
  1112  00D4  00AF               	movwf	??_main
  1113  00D5  0861               	movf	main@getNum,w
  1114  00D6  3EA0               	addlw	main@getdata& (0+255)
  1115  00D7  0086               	movwf	6
  1116  00D8  0187               	clrf	7
  1117  00D9  082F               	movf	??_main,w
  1118  00DA  0081               	movwf	1
  1119                           
  1120                           ;ver0.0_20140727.c: 105: getNum++;
  1121  00DB  3001               	movlw	1
  1122  00DC  00AF               	movwf	??_main
  1123  00DD  082F               	movf	??_main,w
  1124  00DE  07E1               	addwf	main@getNum,f
  1125                           
  1126                           ;ver0.0_20140727.c: 106: reservingNow=0;
  1127  00DF  01E6               	clrf	_reservingNow
  1128  00E0                     l1634:	
  1129                           
  1130                           ;ver0.0_20140727.c: 107: }
  1131                           ;ver0.0_20140727.c: 108: if(onetime==0x47)
  1132  00E0  0864               	movf	main@onetime,w
  1133  00E1  3A47               	xorlw	71
  1134  00E2  1D03               	skipz
  1135  00E3  28E7               	goto	l1638
  1136                           
  1137                           ;ver0.0_20140727.c: 109: resetFlug=1;
  1138  00E4  01E2               	clrf	main@resetFlug
  1139  00E5  0AE2               	incf	main@resetFlug,f
  1140  00E6  28FE               	goto	l1656
  1141  00E7                     l1638:	
  1142                           
  1143                           ;ver0.0_20140727.c: 110: else if(resetFlug){
  1144  00E7  0862               	movf	main@resetFlug,w
  1145  00E8  1903               	btfsc	3,2
  1146  00E9  28FE               	goto	l1656
  1147                           
  1148                           ;ver0.0_20140727.c: 111: if(resetFlug==1){
  1149  00EA  0862               	movf	main@resetFlug,w
  1150  00EB  3A01               	xorlw	1
  1151  00EC  1D03               	skipz
  1152  00ED  28F3               	goto	l1648
  1153                           
  1154                           ;ver0.0_20140727.c: 112: if(onetime==0x65)
  1155  00EE  0864               	movf	main@onetime,w
  1156  00EF  3A65               	xorlw	101
  1157  00F0  1903               	btfsc	3,2
  1158  00F1  28FE               	goto	l1656
  1159  00F2  28FD               	goto	l1654
  1160  00F3                     l1648:	
  1161                           ;ver0.0_20140727.c: 116: }
  1162                           
  1163                           ;ver0.0_20140727.c: 114: else
  1164                           ;ver0.0_20140727.c: 115: resetFlug=0;
  1165                           
  1166                           
  1167                           ;ver0.0_20140727.c: 117: else if(resetFlug==2){
  1168  00F3  0862               	movf	main@resetFlug,w
  1169  00F4  3A02               	xorlw	2
  1170  00F5  1D03               	skipz
  1171  00F6  28FE               	goto	l1656
  1172                           
  1173                           ;ver0.0_20140727.c: 118: if(onetime=0x74)
  1174  00F7  3074               	movlw	116
  1175  00F8  00AF               	movwf	??_main
  1176  00F9  082F               	movf	??_main,w
  1177  00FA  00E4               	movwf	main@onetime
  1178                           
  1179                           ;ver0.0_20140727.c: 119: getNum=0;
  1180  00FB  01E1               	clrf	main@getNum
  1181  00FC  28FE               	goto	l1656
  1182  00FD                     l1654:	
  1183                           
  1184                           ;ver0.0_20140727.c: 120: else
  1185                           ;ver0.0_20140727.c: 121: resetFlug=0;
  1186  00FD  01E2               	clrf	main@resetFlug
  1187  00FE                     l1656:	
  1188                           
  1189                           ;ver0.0_20140727.c: 122: }
  1190                           ;ver0.0_20140727.c: 123: }
  1191                           ;ver0.0_20140727.c: 124: if(getNum==64){
  1192  00FE  0861               	movf	main@getNum,w
  1193  00FF  3A40               	xorlw	64
  1194  0100  1D03               	skipz
  1195  0101  2909               	goto	l1662
  1196                           
  1197                           ;ver0.0_20140727.c: 125: if(onetime==0x0A)
  1198  0102  0864               	movf	main@onetime,w
  1199  0103  3A0A               	xorlw	10
  1200  0104  1D03               	skipz
  1201  0105  2917               	goto	l1670
  1202                           
  1203                           ;ver0.0_20140727.c: 126: gettingSuccess=1;
  1204  0106  01E0               	clrf	main@gettingSuccess
  1205  0107  0AE0               	incf	main@gettingSuccess,f
  1206                           
  1207                           ;ver0.0_20140727.c: 127: }
  1208  0108  2917               	goto	l1670
  1209  0109                     l1662:	
  1210                           
  1211                           ;ver0.0_20140727.c: 128: else if(gettingSuccess==1){
  1212  0109  0860               	movf	main@gettingSuccess,w
  1213  010A  3A01               	xorlw	1
  1214  010B  1D03               	skipz
  1215  010C  2917               	goto	l1670
  1216                           
  1217                           ;ver0.0_20140727.c: 129: if(onetime==0x0B)
  1218  010D  0864               	movf	main@onetime,w
  1219  010E  3A0B               	xorlw	11
  1220  010F  1D03               	skipz
  1221  0110  2916               	goto	l1668
  1222                           
  1223                           ;ver0.0_20140727.c: 130: gettingSuccess=2;
  1224  0111  3002               	movlw	2
  1225  0112  00AF               	movwf	??_main
  1226  0113  082F               	movf	??_main,w
  1227  0114  00E0               	movwf	main@gettingSuccess
  1228  0115  2917               	goto	l1670
  1229  0116                     l1668:	
  1230                           
  1231                           ;ver0.0_20140727.c: 131: else
  1232                           ;ver0.0_20140727.c: 132: gettingSuccess=0;
  1233  0116  01E0               	clrf	main@gettingSuccess
  1234  0117                     l1670:	
  1235                           
  1236                           ;ver0.0_20140727.c: 133: }
  1237                           ;ver0.0_20140727.c: 134: if(gettingSuccess==2){
  1238  0117  0860               	movf	main@gettingSuccess,w
  1239  0118  3A02               	xorlw	2
  1240  0119  1D03               	skipz
  1241  011A  28C2               	goto	l1620
  1242                           
  1243                           ;ver0.0_20140727.c: 135: gettingSuccess=0;
  1244  011B  01E0               	clrf	main@gettingSuccess
  1245                           
  1246                           ;ver0.0_20140727.c: 136: for(i=1;i<17;i++){
  1247  011C  01E5               	clrf	main@i
  1248  011D  0AE5               	incf	main@i,f
  1249  011E  3011               	movlw	17
  1250  011F  0265               	subwf	main@i,w
  1251  0120  1803               	btfsc	3,0
  1252  0121  295B               	goto	l239
  1253  0122                     l1680:	
  1254                           
  1255                           ;ver0.0_20140727.c: 137: for(j=0;j<2;j++){
  1256  0122  01E3               	clrf	main@j
  1257  0123  3002               	movlw	2
  1258  0124  0263               	subwf	main@j,w
  1259  0125  1803               	btfsc	3,0
  1260  0126  2953               	goto	l1694
  1261  0127                     l1686:	
  1262                           
  1263                           ;ver0.0_20140727.c: 138: n=(i-1)*4+j;
  1264  0127  0865               	movf	main@i,w
  1265  0128  00AF               	movwf	??_main
  1266  0129  3001               	movlw	1
  1267  012A                     u1905:	
  1268  012A  35AF               	lslf	??_main,f
  1269  012B  3EFF               	addlw	-1
  1270  012C  1D03               	skipz
  1271  012D  292A               	goto	u1905
  1272  012E  352F               	lslf	??_main,w
  1273  012F  0763               	addwf	main@j,w
  1274  0130  3EFC               	addlw	252
  1275  0131  00B0               	movwf	??_main+1
  1276  0132  0830               	movf	??_main+1,w
  1277  0133  00DF               	movwf	main@n
  1278                           
  1279                           ;ver0.0_20140727.c: 139: getKeeping[i][j]=getdata[n];
  1280  0134  085F               	movf	main@n,w
  1281  0135  3EA0               	addlw	main@getdata& (0+255)
  1282  0136  0086               	movwf	6
  1283  0137  0187               	clrf	7
  1284  0138  0801               	movf	1,w
  1285  0139  00AF               	movwf	??_main
  1286  013A  0865               	movf	main@i,w
  1287  013B  00B0               	movwf	??_main+1
  1288  013C  3001               	movlw	1
  1289  013D                     u1915:	
  1290  013D  35B0               	lslf	??_main+1,f
  1291  013E  0B89               	decfsz	9,f
  1292  013F  293D               	goto	u1915
  1293  0140  303E               	movlw	main@getKeeping& (0+255)
  1294  0141  0730               	addwf	??_main+1,w
  1295  0142  00B1               	movwf	??_main+2
  1296  0143  0863               	movf	main@j,w
  1297  0144  0731               	addwf	??_main+2,w
  1298  0145  00B2               	movwf	??_main+3
  1299  0146  0832               	movf	??_main+3,w
  1300  0147  0086               	movwf	6
  1301  0148  0187               	clrf	7
  1302  0149  082F               	movf	??_main,w
  1303  014A  0081               	movwf	1
  1304  014B  3001               	movlw	1
  1305  014C  00AF               	movwf	??_main
  1306  014D  082F               	movf	??_main,w
  1307  014E  07E3               	addwf	main@j,f
  1308  014F  3002               	movlw	2
  1309  0150  0263               	subwf	main@j,w
  1310  0151  1C03               	skipc
  1311  0152  2927               	goto	l1686
  1312  0153                     l1694:	
  1313  0153  3001               	movlw	1
  1314  0154  00AF               	movwf	??_main
  1315  0155  082F               	movf	??_main,w
  1316  0156  07E5               	addwf	main@i,f
  1317  0157  3011               	movlw	17
  1318  0158  0265               	subwf	main@i,w
  1319  0159  1C03               	skipc
  1320  015A  2922               	goto	l1680
  1321  015B                     l239:	
  1322                           
  1323                           ;ver0.0_20140727.c: 140: }
  1324                           ;ver0.0_20140727.c: 141: }
  1325                           ;ver0.0_20140727.c: 142: for(i=1;i<17;i++){
  1326  015B  01E5               	clrf	main@i
  1327  015C  0AE5               	incf	main@i,f
  1328  015D                     L3:	
  1329  015D  3011               	movlw	17
  1330  015E  0265               	subwf	main@i,w
  1331  015F  1803               	btfsc	3,0
  1332  0160  28C2               	goto	l1620
  1333                           
  1334                           ;ver0.0_20140727.c: 144: putdata[i][0]=getKeeping[i][0]&0b11111110;
  1335  0161  3565               	lslf	main@i,w
  1336  0162  3E3E               	addlw	main@getKeeping& (0+255)
  1337  0163  0086               	movwf	6
  1338  0164  0187               	clrf	7
  1339  0165  0801               	movf	1,w
  1340  0166  39FE               	andlw	254
  1341  0167  00AF               	movwf	??_main
  1342  0168  0865               	movf	main@i,w
  1343  0169  00B0               	movwf	??_main+1
  1344  016A  01B1               	clrf	??_main+2
  1345  016B  0830               	movf	??_main+1,w
  1346  016C  00A0               	movwf	___wmul@multiplier
  1347  016D  0831               	movf	??_main+2,w
  1348  016E  00A1               	movwf	___wmul@multiplier+1
  1349  016F  3005               	movlw	5
  1350  0170  00A2               	movwf	___wmul@multiplicand
  1351  0171  3000               	movlw	0
  1352  0172  00A3               	movwf	___wmul@multiplicand+1
  1353  0173  3183  23C0  3180   	fcall	___wmul
  1354  0176  3096               	movlw	150
  1355  0177  0020               	movlb	0	; select bank0
  1356  0178  00B2               	movwf	??_main+3
  1357  0179  3023               	movlw	35
  1358  017A  00B3               	movwf	??_main+4
  1359  017B  0820               	movf	?___wmul,w
  1360  017C  0732               	addwf	??_main+3,w
  1361  017D  00B4               	movwf	??_main+5
  1362  017E  0821               	movf	?___wmul+1,w
  1363  017F  3D33               	addwfc	??_main+4,w
  1364  0180  00B5               	movwf	??_main+6
  1365  0181  0834               	movf	??_main+5,w
  1366  0182  0086               	movwf	6
  1367  0183  0835               	movf	??_main+6,w
  1368  0184  0087               	movwf	7
  1369  0185  082F               	movf	??_main,w
  1370  0186  0081               	movwf	1
  1371                           
  1372                           ;ver0.0_20140727.c: 146: putdata[i][2]=getKeeping[i][1]&0b00001111;
  1373  0187  1403               	setc
  1374  0188  0D65               	rlf	main@i,w
  1375  0189  3E3E               	addlw	main@getKeeping& (0+255)
  1376  018A  0086               	movwf	6
  1377  018B  0187               	clrf	7
  1378  018C  0801               	movf	1,w
  1379  018D  390F               	andlw	15
  1380  018E  00AF               	movwf	??_main
  1381  018F  0865               	movf	main@i,w
  1382  0190  00B0               	movwf	??_main+1
  1383  0191  01B1               	clrf	??_main+2
  1384  0192  0830               	movf	??_main+1,w
  1385  0193  00A0               	movwf	___wmul@multiplier
  1386  0194  0831               	movf	??_main+2,w
  1387  0195  00A1               	movwf	___wmul@multiplier+1
  1388  0196  3005               	movlw	5
  1389  0197  00A2               	movwf	___wmul@multiplicand
  1390  0198  3000               	movlw	0
  1391  0199  00A3               	movwf	___wmul@multiplicand+1
  1392  019A  3183  23C0  3180   	fcall	___wmul
  1393  019D  0020               	movlb	0	; select bank0
  1394  019E  0820               	movf	?___wmul,w
  1395  019F  3E02               	addlw	2
  1396  01A0  00B2               	movwf	??_main+3
  1397  01A1  3000               	movlw	0
  1398  01A2  3D21               	addwfc	?___wmul+1,w
  1399  01A3  00B3               	movwf	??_main+4
  1400  01A4  3096               	movlw	150
  1401  01A5  00B4               	movwf	??_main+5
  1402  01A6  3023               	movlw	35
  1403  01A7  00B5               	movwf	??_main+6
  1404  01A8  0832               	movf	??_main+3,w
  1405  01A9  0734               	addwf	??_main+5,w
  1406  01AA  00B6               	movwf	??_main+7
  1407  01AB  0833               	movf	??_main+4,w
  1408  01AC  3D35               	addwfc	??_main+6,w
  1409  01AD  00B7               	movwf	??_main+8
  1410  01AE  0836               	movf	??_main+7,w
  1411  01AF  0086               	movwf	6
  1412  01B0  0837               	movf	??_main+8,w
  1413  01B1  0087               	movwf	7
  1414  01B2  082F               	movf	??_main,w
  1415  01B3  0081               	movwf	1
  1416                           
  1417                           ;ver0.0_20140727.c: 148: putdata[i][3]=(getKeeping[i][0]&0b00000001)|((getKeeping[i][1]&
      +                          0b10000000)>>6);
  1418  01B4  1403               	setc
  1419  01B5  0D65               	rlf	main@i,w
  1420  01B6  3E3E               	addlw	main@getKeeping& (0+255)
  1421  01B7  0086               	movwf	6
  1422  01B8  0187               	clrf	7
  1423  01B9  0801               	movf	1,w
  1424  01BA  00AF               	movwf	??_main
  1425  01BB  3006               	movlw	6
  1426  01BC                     u1955:	
  1427  01BC  36AF               	lsrf	??_main,f
  1428  01BD  0B89               	decfsz	9,f
  1429  01BE  29BC               	goto	u1955
  1430  01BF  3002               	movlw	2
  1431  01C0  052F               	andwf	??_main,w
  1432  01C1  00B0               	movwf	??_main+1
  1433  01C2  3565               	lslf	main@i,w
  1434  01C3  3E3E               	addlw	main@getKeeping& (0+255)
  1435  01C4  0086               	movwf	6
  1436  01C5  0187               	clrf	7
  1437  01C6  0801               	movf	1,w
  1438  01C7  3901               	andlw	1
  1439  01C8  0430               	iorwf	??_main+1,w
  1440  01C9  00B1               	movwf	??_main+2
  1441  01CA  0865               	movf	main@i,w
  1442  01CB  00B2               	movwf	??_main+3
  1443  01CC  01B3               	clrf	??_main+4
  1444  01CD  0832               	movf	??_main+3,w
  1445  01CE  00A0               	movwf	___wmul@multiplier
  1446  01CF  0833               	movf	??_main+4,w
  1447  01D0  00A1               	movwf	___wmul@multiplier+1
  1448  01D1  3005               	movlw	5
  1449  01D2  00A2               	movwf	___wmul@multiplicand
  1450  01D3  3000               	movlw	0
  1451  01D4  00A3               	movwf	___wmul@multiplicand+1
  1452  01D5  3183  23C0  3180   	fcall	___wmul
  1453  01D8  0020               	movlb	0	; select bank0
  1454  01D9  0820               	movf	?___wmul,w
  1455  01DA  3E03               	addlw	3
  1456  01DB  00B4               	movwf	??_main+5
  1457  01DC  3000               	movlw	0
  1458  01DD  3D21               	addwfc	?___wmul+1,w
  1459  01DE  00B5               	movwf	??_main+6
  1460  01DF  3096               	movlw	150
  1461  01E0  00B6               	movwf	??_main+7
  1462  01E1  3023               	movlw	35
  1463  01E2  00B7               	movwf	??_main+8
  1464  01E3  0834               	movf	??_main+5,w
  1465  01E4  0736               	addwf	??_main+7,w
  1466  01E5  00B8               	movwf	??_main+9
  1467  01E6  0835               	movf	??_main+6,w
  1468  01E7  3D37               	addwfc	??_main+8,w
  1469  01E8  00B9               	movwf	??_main+10
  1470  01E9  0838               	movf	??_main+9,w
  1471  01EA  0086               	movwf	6
  1472  01EB  0839               	movf	??_main+10,w
  1473  01EC  0087               	movwf	7
  1474  01ED  0831               	movf	??_main+2,w
  1475  01EE  0081               	movwf	1
  1476                           
  1477                           ;ver0.0_20140727.c: 149: if(i==16)
  1478  01EF  0865               	movf	main@i,w
  1479  01F0  3A10               	xorlw	16
  1480  01F1  1D03               	skipz
  1481  01F2  2A15               	goto	l244
  1482                           
  1483                           ;ver0.0_20140727.c: 150: putdata[i][3]=putdata[i][3]|0b10110000;
  1484  01F3  0865               	movf	main@i,w
  1485  01F4  00AF               	movwf	??_main
  1486  01F5  01B0               	clrf	??_main+1
  1487  01F6  082F               	movf	??_main,w
  1488  01F7  00A0               	movwf	___wmul@multiplier
  1489  01F8  0830               	movf	??_main+1,w
  1490  01F9  00A1               	movwf	___wmul@multiplier+1
  1491  01FA  3005               	movlw	5
  1492  01FB  00A2               	movwf	___wmul@multiplicand
  1493  01FC  3000               	movlw	0
  1494  01FD  00A3               	movwf	___wmul@multiplicand+1
  1495  01FE  3183  23C0  3180   	fcall	___wmul
  1496  0201  0020               	movlb	0	; select bank0
  1497  0202  0820               	movf	?___wmul,w
  1498  0203  3E03               	addlw	3
  1499  0204  00B1               	movwf	??_main+2
  1500  0205  3000               	movlw	0
  1501  0206  3D21               	addwfc	?___wmul+1,w
  1502  0207  00B2               	movwf	??_main+3
  1503  0208  3096               	movlw	150
  1504  0209  00B3               	movwf	??_main+4
  1505  020A  3023               	movlw	35
  1506  020B  00B4               	movwf	??_main+5
  1507  020C  0831               	movf	??_main+2,w
  1508  020D  0733               	addwf	??_main+4,w
  1509  020E  0086               	movwf	6
  1510  020F  0832               	movf	??_main+3,w
  1511  0210  3D34               	addwfc	??_main+5,w
  1512  0211  0087               	movwf	7
  1513  0212  0801               	movf	1,w
  1514  0213  38B0               	iorlw	176
  1515  0214  2A38               	goto	L2
  1516  0215                     l244:	
  1517                           
  1518                           ;ver0.0_20140727.c: 151: else if(i%2==0)
  1519  0215  1865               	btfsc	main@i,0
  1520  0216  2A5E               	goto	l245
  1521                           
  1522                           ;ver0.0_20140727.c: 152: putdata[i][3]=putdata[i][3]|0b10010000;
  1523  0217  0865               	movf	main@i,w
  1524  0218  00AF               	movwf	??_main
  1525  0219  01B0               	clrf	??_main+1
  1526  021A  082F               	movf	??_main,w
  1527  021B  00A0               	movwf	___wmul@multiplier
  1528  021C  0830               	movf	??_main+1,w
  1529  021D  00A1               	movwf	___wmul@multiplier+1
  1530  021E  3005               	movlw	5
  1531  021F  00A2               	movwf	___wmul@multiplicand
  1532  0220  3000               	movlw	0
  1533  0221  00A3               	movwf	___wmul@multiplicand+1
  1534  0222  3183  23C0  3180   	fcall	___wmul
  1535  0225  0020               	movlb	0	; select bank0
  1536  0226  0820               	movf	?___wmul,w
  1537  0227  3E03               	addlw	3
  1538  0228  00B1               	movwf	??_main+2
  1539  0229  3000               	movlw	0
  1540  022A  3D21               	addwfc	?___wmul+1,w
  1541  022B  00B2               	movwf	??_main+3
  1542  022C  3096               	movlw	150
  1543  022D  00B3               	movwf	??_main+4
  1544  022E  3023               	movlw	35
  1545  022F  00B4               	movwf	??_main+5
  1546  0230  0831               	movf	??_main+2,w
  1547  0231  0733               	addwf	??_main+4,w
  1548  0232  0086               	movwf	6
  1549  0233  0832               	movf	??_main+3,w
  1550  0234  3D34               	addwfc	??_main+5,w
  1551  0235  0087               	movwf	7
  1552  0236  0801               	movf	1,w
  1553  0237  3890               	iorlw	144
  1554  0238                     L2:	
  1555  0238  00B5               	movwf	??_main+6
  1556  0239  0865               	movf	main@i,w
  1557  023A  00B6               	movwf	??_main+7
  1558  023B  01B7               	clrf	??_main+8
  1559  023C  0836               	movf	??_main+7,w
  1560  023D  00A0               	movwf	___wmul@multiplier
  1561  023E  0837               	movf	??_main+8,w
  1562  023F  00A1               	movwf	___wmul@multiplier+1
  1563  0240  3005               	movlw	5
  1564  0241  00A2               	movwf	___wmul@multiplicand
  1565  0242  3000               	movlw	0
  1566  0243  00A3               	movwf	___wmul@multiplicand+1
  1567  0244  3183  23C0  3180   	fcall	___wmul
  1568  0247  0020               	movlb	0	; select bank0
  1569  0248  0820               	movf	?___wmul,w
  1570  0249  3E03               	addlw	3
  1571  024A  00B8               	movwf	??_main+9
  1572  024B  3000               	movlw	0
  1573  024C  3D21               	addwfc	?___wmul+1,w
  1574  024D  00B9               	movwf	??_main+10
  1575  024E  3096               	movlw	150
  1576  024F  00BA               	movwf	??_main+11
  1577  0250  3023               	movlw	35
  1578  0251  00BB               	movwf	??_main+12
  1579  0252  0838               	movf	??_main+9,w
  1580  0253  073A               	addwf	??_main+11,w
  1581  0254  00BC               	movwf	??_main+13
  1582  0255  0839               	movf	??_main+10,w
  1583  0256  3D3B               	addwfc	??_main+12,w
  1584  0257  00BD               	movwf	??_main+14
  1585  0258  083C               	movf	??_main+13,w
  1586  0259  0086               	movwf	6
  1587  025A  083D               	movf	??_main+14,w
  1588  025B  0087               	movwf	7
  1589  025C  0835               	movf	??_main+6,w
  1590  025D  0081               	movwf	1
  1591  025E                     l245:	
  1592                           
  1593                           ;ver0.0_20140727.c: 154: putdata[i][4]=(getKeeping[i][1]&0b01110000)>>4;
  1594  025E  1403               	setc
  1595  025F  0D65               	rlf	main@i,w
  1596  0260  3E3E               	addlw	main@getKeeping& (0+255)
  1597  0261  0086               	movwf	6
  1598  0262  0187               	clrf	7
  1599  0263  0801               	movf	1,w
  1600  0264  00AF               	movwf	??_main
  1601  0265  3004               	movlw	4
  1602  0266                     u1985:	
  1603  0266  36AF               	lsrf	??_main,f
  1604  0267  0B89               	decfsz	9,f
  1605  0268  2A66               	goto	u1985
  1606  0269  082F               	movf	??_main,w
  1607  026A  3907               	andlw	7
  1608  026B  00B0               	movwf	??_main+1
  1609  026C  0865               	movf	main@i,w
  1610  026D  00B1               	movwf	??_main+2
  1611  026E  01B2               	clrf	??_main+3
  1612  026F  0831               	movf	??_main+2,w
  1613  0270  00A0               	movwf	___wmul@multiplier
  1614  0271  0832               	movf	??_main+3,w
  1615  0272  00A1               	movwf	___wmul@multiplier+1
  1616  0273  3005               	movlw	5
  1617  0274  00A2               	movwf	___wmul@multiplicand
  1618  0275  3000               	movlw	0
  1619  0276  00A3               	movwf	___wmul@multiplicand+1
  1620  0277  3183  23C0  3180   	fcall	___wmul
  1621  027A  0020               	movlb	0	; select bank0
  1622  027B  0820               	movf	?___wmul,w
  1623  027C  3E04               	addlw	4
  1624  027D  00B3               	movwf	??_main+4
  1625  027E  3000               	movlw	0
  1626  027F  3D21               	addwfc	?___wmul+1,w
  1627  0280  00B4               	movwf	??_main+5
  1628  0281  3096               	movlw	150
  1629  0282  00B5               	movwf	??_main+6
  1630  0283  3023               	movlw	35
  1631  0284  00B6               	movwf	??_main+7
  1632  0285  0833               	movf	??_main+4,w
  1633  0286  0735               	addwf	??_main+6,w
  1634  0287  00B7               	movwf	??_main+8
  1635  0288  0834               	movf	??_main+5,w
  1636  0289  3D36               	addwfc	??_main+7,w
  1637  028A  00B8               	movwf	??_main+9
  1638  028B  0837               	movf	??_main+8,w
  1639  028C  0086               	movwf	6
  1640  028D  0838               	movf	??_main+9,w
  1641  028E  0087               	movwf	7
  1642  028F  0830               	movf	??_main+1,w
  1643  0290  0081               	movwf	1
  1644  0291  3001               	movlw	1
  1645  0292  00AF               	movwf	??_main
  1646  0293  082F               	movf	??_main,w
  1647  0294  07E5               	addwf	main@i,f
  1648  0295  295D               	goto	L3
  1649  0296                     __end_of_main:	
  1650                           
  1651                           	psect	text1
  1652  0393                     __ptext1:	
  1653 ;; *************** function _x2 *****************
  1654 ;; Defined at:
  1655 ;;		line 60 in file "ver0.0_20140727.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  num             1    wreg     unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  num             1   14[BANK0 ] unsigned char 
  1660 ;;  ret             1   13[BANK0 ] unsigned char 
  1661 ;;  i               1   12[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      unsigned char 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;Total ram usage:        6 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    4
  1678 ;; This function calls:
  1679 ;;		___awdiv
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _x2
  1687  0393                     _x2:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _x2: [wreg+status,2+status,0+pclath+cstack]
  1691                           ;x2@num stored from wreg
  1692  0393  0020               	movlb	0	; select bank0
  1693  0394  00AE               	movwf	x2@num
  1694                           
  1695                           ;ver0.0_20140727.c: 61: char i,ret=0;
  1696  0395  01AD               	clrf	x2@ret
  1697                           
  1698                           ;ver0.0_20140727.c: 62: if(num%2)
  1699  0396  1C2E               	btfss	x2@num,0
  1700  0397  2B9A               	goto	l1328
  1701                           
  1702                           ;ver0.0_20140727.c: 63: ret=1;
  1703  0398  01AD               	clrf	x2@ret
  1704  0399  0AAD               	incf	x2@ret,f
  1705  039A                     l1328:	
  1706                           
  1707                           ;ver0.0_20140727.c: 64: num=7-num/2;
  1708  039A  3002               	movlw	2
  1709  039B  00A0               	movwf	___awdiv@divisor
  1710  039C  3000               	movlw	0
  1711  039D  00A1               	movwf	___awdiv@divisor+1
  1712  039E  082E               	movf	x2@num,w
  1713  039F  00A9               	movwf	??_x2
  1714  03A0  01AA               	clrf	??_x2+1
  1715  03A1  0829               	movf	??_x2,w
  1716  03A2  00A2               	movwf	___awdiv@dividend
  1717  03A3  082A               	movf	??_x2+1,w
  1718  03A4  00A3               	movwf	___awdiv@dividend+1
  1719  03A5  3183  233F  3183   	fcall	___awdiv
  1720  03A8  0020               	movlb	0	; select bank0
  1721  03A9  0820               	movf	?___awdiv,w
  1722  03AA  3AFF               	xorlw	255
  1723  03AB  3E01               	addlw	1
  1724  03AC  3E07               	addlw	7
  1725  03AD  00AB               	movwf	??_x2+2
  1726  03AE  082B               	movf	??_x2+2,w
  1727  03AF  00AE               	movwf	x2@num
  1728                           
  1729                           ;ver0.0_20140727.c: 65: for(i=0;i<num;i++)
  1730  03B0  01AC               	clrf	x2@i
  1731  03B1                     l1334:	
  1732  03B1  082E               	movf	x2@num,w
  1733  03B2  022C               	subwf	x2@i,w
  1734  03B3  1803               	btfsc	3,0
  1735  03B4  2BBE               	goto	l1336
  1736                           
  1737                           ;ver0.0_20140727.c: 66: ret=ret*2;
  1738  03B5  352D               	lslf	x2@ret,w
  1739  03B6  00A9               	movwf	??_x2
  1740  03B7  0829               	movf	??_x2,w
  1741  03B8  00AD               	movwf	x2@ret
  1742  03B9  3001               	movlw	1
  1743  03BA  00A9               	movwf	??_x2
  1744  03BB  0829               	movf	??_x2,w
  1745  03BC  07AC               	addwf	x2@i,f
  1746  03BD  2BB1               	goto	l1334
  1747  03BE                     l1336:	
  1748                           
  1749                           ;ver0.0_20140727.c: 67: return ret;
  1750  03BE  082D               	movf	x2@ret,w
  1751  03BF  0008               	return
  1752  03C0                     __end_of_x2:	
  1753                           
  1754                           	psect	text2
  1755  033F                     __ptext2:	
  1756 ;; *************** function ___awdiv *****************
  1757 ;; Defined at:
  1758 ;;		line 6 in file "/Applications/microchip/xc8/v1.32/sources/common/awdiv.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  divisor         2    0[BANK0 ] int 
  1761 ;;  dividend        2    2[BANK0 ] int 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  quotient        2    7[BANK0 ] int 
  1764 ;;  sign            1    6[BANK0 ] unsigned char 
  1765 ;;  counter         1    5[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    0[BANK0 ] int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1776 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1778 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;Total ram usage:        9 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    3
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_x2
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function ___awdiv
  1791  033F                     ___awdiv:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1795  033F  0020               	movlb	0	; select bank0
  1796  0340  01A6               	clrf	___awdiv@sign
  1797  0341  1FA1               	btfss	___awdiv@divisor+1,7
  1798  0342  2B4A               	goto	l1236
  1799  0343  09A0               	comf	___awdiv@divisor,f
  1800  0344  09A1               	comf	___awdiv@divisor+1,f
  1801  0345  0AA0               	incf	___awdiv@divisor,f
  1802  0346  1903               	skipnz
  1803  0347  0AA1               	incf	___awdiv@divisor+1,f
  1804  0348  01A6               	clrf	___awdiv@sign
  1805  0349  0AA6               	incf	___awdiv@sign,f
  1806  034A                     l1236:	
  1807  034A  1FA3               	btfss	___awdiv@dividend+1,7
  1808  034B  2B55               	goto	l1242
  1809  034C  09A2               	comf	___awdiv@dividend,f
  1810  034D  09A3               	comf	___awdiv@dividend+1,f
  1811  034E  0AA2               	incf	___awdiv@dividend,f
  1812  034F  1903               	skipnz
  1813  0350  0AA3               	incf	___awdiv@dividend+1,f
  1814  0351  3001               	movlw	1
  1815  0352  00A4               	movwf	??___awdiv
  1816  0353  0824               	movf	??___awdiv,w
  1817  0354  06A6               	xorwf	___awdiv@sign,f
  1818  0355                     l1242:	
  1819  0355  01A7               	clrf	___awdiv@quotient
  1820  0356  01A8               	clrf	___awdiv@quotient+1
  1821  0357  0821               	movf	___awdiv@divisor+1,w
  1822  0358  0420               	iorwf	___awdiv@divisor,w
  1823  0359  1903               	skipnz
  1824  035A  2B84               	goto	l1264
  1825  035B  01A5               	clrf	___awdiv@counter
  1826  035C  0AA5               	incf	___awdiv@counter,f
  1827  035D                     l1252:	
  1828  035D  1BA1               	btfsc	___awdiv@divisor+1,7
  1829  035E  2B69               	goto	l1254
  1830  035F  3001               	movlw	1
  1831  0360                     u1045:	
  1832  0360  35A0               	lslf	___awdiv@divisor,f
  1833  0361  0DA1               	rlf	___awdiv@divisor+1,f
  1834  0362  0B89               	decfsz	9,f
  1835  0363  2B60               	goto	u1045
  1836  0364  3001               	movlw	1
  1837  0365  00A4               	movwf	??___awdiv
  1838  0366  0824               	movf	??___awdiv,w
  1839  0367  07A5               	addwf	___awdiv@counter,f
  1840  0368  2B5D               	goto	l1252
  1841  0369                     l1254:	
  1842  0369  3001               	movlw	1
  1843  036A                     u1065:	
  1844  036A  35A7               	lslf	___awdiv@quotient,f
  1845  036B  0DA8               	rlf	___awdiv@quotient+1,f
  1846  036C  0B89               	decfsz	9,f
  1847  036D  2B6A               	goto	u1065
  1848  036E  0821               	movf	___awdiv@divisor+1,w
  1849  036F  0223               	subwf	___awdiv@dividend+1,w
  1850  0370  1D03               	skipz
  1851  0371  2B74               	goto	u1075
  1852  0372  0820               	movf	___awdiv@divisor,w
  1853  0373  0222               	subwf	___awdiv@dividend,w
  1854  0374                     u1075:	
  1855  0374  1C03               	skipc
  1856  0375  2B7B               	goto	l1260
  1857  0376  0820               	movf	___awdiv@divisor,w
  1858  0377  02A2               	subwf	___awdiv@dividend,f
  1859  0378  0821               	movf	___awdiv@divisor+1,w
  1860  0379  3BA3               	subwfb	___awdiv@dividend+1,f
  1861  037A  1427               	bsf	___awdiv@quotient,0
  1862  037B                     l1260:	
  1863  037B  3001               	movlw	1
  1864  037C                     u1085:	
  1865  037C  36A1               	lsrf	___awdiv@divisor+1,f
  1866  037D  0CA0               	rrf	___awdiv@divisor,f
  1867  037E  0B89               	decfsz	9,f
  1868  037F  2B7C               	goto	u1085
  1869  0380  3001               	movlw	1
  1870  0381  02A5               	subwf	___awdiv@counter,f
  1871  0382  1D03               	btfss	3,2
  1872  0383  2B69               	goto	l1254
  1873  0384                     l1264:	
  1874  0384  0826               	movf	___awdiv@sign,w
  1875  0385  1903               	btfsc	3,2
  1876  0386  2B8C               	goto	l1268
  1877  0387  09A7               	comf	___awdiv@quotient,f
  1878  0388  09A8               	comf	___awdiv@quotient+1,f
  1879  0389  0AA7               	incf	___awdiv@quotient,f
  1880  038A  1903               	skipnz
  1881  038B  0AA8               	incf	___awdiv@quotient+1,f
  1882  038C                     l1268:	
  1883  038C  0828               	movf	___awdiv@quotient+1,w
  1884  038D  01A1               	clrf	?___awdiv+1
  1885  038E  07A1               	addwf	?___awdiv+1,f
  1886  038F  0827               	movf	___awdiv@quotient,w
  1887  0390  01A0               	clrf	?___awdiv
  1888  0391  07A0               	addwf	?___awdiv,f
  1889  0392  0008               	return
  1890  0393                     __end_of___awdiv:	
  1891                           
  1892                           	psect	text3
  1893  03FB                     __ptext3:	
  1894 ;; *************** function _setpin *****************
  1895 ;; Defined at:
  1896 ;;		line 62 in file "sorce.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;		None               void
  1903 ;; Registers used:
  1904 ;;		wreg, status,2
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _setpin
  1926  03FB                     _setpin:	
  1927                           
  1928                           ;sorce.c: 63: OSCCON = 0b01110000 ;
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _setpin: [wreg+status,2]
  1932  03FB  3070               	movlw	112
  1933  03FC  0021               	movlb	1	; select bank1
  1934  03FD  0099               	movwf	25	;volatile
  1935                           
  1936                           ;sorce.c: 64: ANSELA = 0b00000000 ;
  1937  03FE  0023               	movlb	3	; select bank3
  1938  03FF  018C               	clrf	12	;volatile
  1939                           
  1940                           ;sorce.c: 65: ANSELB = 0b00000000 ;
  1941  0400  018D               	clrf	13	;volatile
  1942                           
  1943                           ;sorce.c: 66: ANSELD = 0b00000000 ;
  1944  0401  018F               	clrf	15	;volatile
  1945                           
  1946                           ;sorce.c: 67: ANSELE = 0b00000000 ;
  1947  0402  0190               	clrf	16	;volatile
  1948                           
  1949                           ;sorce.c: 69: TRISA = 0b00000000 ;
  1950  0403  0021               	movlb	1	; select bank1
  1951  0404  018C               	clrf	12	;volatile
  1952                           
  1953                           ;sorce.c: 70: TRISB = 0b00000000 ;
  1954  0405  018D               	clrf	13	;volatile
  1955                           
  1956                           ;sorce.c: 71: TRISC = 0b10110000 ;
  1957  0406  30B0               	movlw	176
  1958  0407  008E               	movwf	14	;volatile
  1959                           
  1960                           ;sorce.c: 72: TRISD = 0b00001100 ;
  1961  0408  300C               	movlw	12
  1962  0409  008F               	movwf	15	;volatile
  1963                           
  1964                           ;sorce.c: 73: TRISE = 0X00 ;
  1965  040A  0190               	clrf	16	;volatile
  1966                           
  1967                           ;sorce.c: 75: PORTA = 0b00000000 ;
  1968  040B  0020               	movlb	0	; select bank0
  1969  040C  018C               	clrf	12	;volatile
  1970                           
  1971                           ;sorce.c: 76: PORTB = 0b00000000 ;
  1972  040D  018D               	clrf	13	;volatile
  1973                           
  1974                           ;sorce.c: 77: PORTC = 0b10000000 ;
  1975  040E  3080               	movlw	128
  1976  040F  008E               	movwf	14	;volatile
  1977                           
  1978                           ;sorce.c: 78: PORTD = 0b00000000 ;
  1979  0410  018F               	clrf	15	;volatile
  1980                           
  1981                           ;sorce.c: 79: PORTE=0x00;
  1982  0411  0190               	clrf	16	;volatile
  1983  0412  0008               	return
  1984  0413                     __end_of_setpin:	
  1985                           
  1986                           	psect	text4
  1987  042E                     __ptext4:	
  1988 ;; *************** function _getch *****************
  1989 ;; Defined at:
  1990 ;;		line 9 in file "uart.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    3
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _getch
  2020  042E                     _getch:	
  2021  042E                     l266:	
  2022                           ;uart.c: 10: while(!RCIF){}
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _getch: [wreg]
  2026                           
  2027  042E  0020               	movlb	0	; select bank0
  2028  042F  1E91               	btfss	17,5	;volatile
  2029  0430  2C2E               	goto	l266
  2030                           
  2031                           ;uart.c: 11: RCIF=0;
  2032  0431  1291               	bcf	17,5	;volatile
  2033                           
  2034                           ;uart.c: 12: return RCREG;
  2035  0432  0023               	movlb	3	; select bank3
  2036  0433  0819               	movf	25,w	;volatile
  2037  0434  0008               	return
  2038  0435                     __end_of_getch:	
  2039                           
  2040                           	psect	text5
  2041  03C0                     __ptext5:	
  2042 ;; *************** function ___wmul *****************
  2043 ;; Defined at:
  2044 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2047 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  product         2    4[BANK0 ] unsigned int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2    0[BANK0 ] unsigned int 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2062 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2063 ;;Total ram usage:        6 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    3
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function ___wmul
  2075  03C0                     ___wmul:	
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2079  03C0  0020               	movlb	0	; select bank0
  2080  03C1  01A4               	clrf	___wmul@product
  2081  03C2  01A5               	clrf	___wmul@product+1
  2082  03C3                     l1354:	
  2083  03C3  1C20               	btfss	___wmul@multiplier,0
  2084  03C4  2BC9               	goto	l353
  2085  03C5  0822               	movf	___wmul@multiplicand,w
  2086  03C6  07A4               	addwf	___wmul@product,f
  2087  03C7  0823               	movf	___wmul@multiplicand+1,w
  2088  03C8  3DA5               	addwfc	___wmul@product+1,f
  2089  03C9                     l353:	
  2090  03C9  3001               	movlw	1
  2091  03CA                     u1205:	
  2092  03CA  35A2               	lslf	___wmul@multiplicand,f
  2093  03CB  0DA3               	rlf	___wmul@multiplicand+1,f
  2094  03CC  0B89               	decfsz	9,f
  2095  03CD  2BCA               	goto	u1205
  2096  03CE  3001               	movlw	1
  2097  03CF                     u1215:	
  2098  03CF  36A1               	lsrf	___wmul@multiplier+1,f
  2099  03D0  0CA0               	rrf	___wmul@multiplier,f
  2100  03D1  0B89               	decfsz	9,f
  2101  03D2  2BCF               	goto	u1215
  2102  03D3  0821               	movf	___wmul@multiplier+1,w
  2103  03D4  0420               	iorwf	___wmul@multiplier,w
  2104  03D5  1D03               	skipz
  2105  03D6  2BC3               	goto	l1354
  2106  03D7  0825               	movf	___wmul@product+1,w
  2107  03D8  01A1               	clrf	?___wmul+1
  2108  03D9  07A1               	addwf	?___wmul+1,f
  2109  03DA  0824               	movf	___wmul@product,w
  2110  03DB  01A0               	clrf	?___wmul
  2111  03DC  07A0               	addwf	?___wmul,f
  2112  03DD  0008               	return
  2113  03DE                     __end_of___wmul:	
  2114                           
  2115                           	psect	text6
  2116  0413                     __ptext6:	
  2117 ;; *************** function _E2promRead *****************
  2118 ;; Defined at:
  2119 ;;		line 75 in file "ver0.0_20140727.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  adr             1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  adr             1    2[BANK0 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2136 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;Total ram usage:        3 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _E2promRead
  2149  0413                     _E2promRead:	
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _E2promRead: [wreg]
  2153                           ;E2promRead@adr stored from wreg
  2154  0413  0020               	movlb	0	; select bank0
  2155  0414  00A2               	movwf	E2promRead@adr
  2156                           
  2157                           ;ver0.0_20140727.c: 77: EEADR = adr;
  2158  0415  0822               	movf	E2promRead@adr,w
  2159  0416  00A0               	movwf	??_E2promRead
  2160  0417  01A1               	clrf	??_E2promRead+1
  2161  0418  0820               	movf	??_E2promRead,w
  2162  0419  0023               	movlb	3	; select bank3
  2163  041A  0091               	movwf	17	;volatile
  2164  041B  0020               	movlb	0	; select bank0
  2165  041C  0821               	movf	??_E2promRead+1,w
  2166  041D  0023               	movlb	3	; select bank3
  2167  041E  0092               	movwf	18	;volatile
  2168                           
  2169                           ;ver0.0_20140727.c: 78: RD = 1;
  2170  041F  1415               	bsf	21,0	;volsfr
  2171                           
  2172                           ;ver0.0_20140727.c: 79: return( EEDATA );
  2173  0420  0813               	movf	19,w	;volatile
  2174  0421  0008               	return
  2175  0422                     __end_of_E2promRead:	
  2176                           
  2177                           	psect	intentry
  2178  0004                     __pintentry:	
  2179 ;; *************** function _InterTimer *****************
  2180 ;; Defined at:
  2181 ;;		line 44 in file "ver0.0_20140727.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;		None               void
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    2
  2202 ;; This function calls:
  2203 ;;		_change
  2204 ;; This function is called by:
  2205 ;;		Interrupt level 1
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209  0004                     _InterTimer:	
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in _InterTimer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2213  0004  147E               	bsf	126,0	;set compiler interrupt flag
  2214  0005  3180               	pagesel	$
  2215  0006  0020               	movlb	0	; select bank0
  2216  0007  087F               	movf	127,w
  2217  0008  00FC               	movwf	??_InterTimer
  2218                           
  2219                           ;ver0.0_20140727.c: 46: if (TMR0IF == 1) {
  2220  0009  1D0B               	btfss	11,2	;volatile
  2221  000A  2816               	goto	i1l197
  2222                           
  2223                           ;ver0.0_20140727.c: 47: TMR0 = 61 ;
  2224  000B  303D               	movlw	61
  2225  000C  0095               	movwf	21	;volatile
  2226                           
  2227                           ;ver0.0_20140727.c: 53: change();
  2228  000D  3182  2296  3180   	fcall	_change
  2229                           
  2230                           ;ver0.0_20140727.c: 54: if(RCIF)
  2231  0010  0020               	movlb	0	; select bank0
  2232  0011  1E91               	btfss	17,5	;volatile
  2233  0012  2815               	goto	i1l196
  2234                           
  2235                           ;ver0.0_20140727.c: 55: reservingNow=1;
  2236  0013  01E6               	clrf	_reservingNow
  2237  0014  0AE6               	incf	_reservingNow,f
  2238  0015                     i1l196:	
  2239                           
  2240                           ;ver0.0_20140727.c: 57: TMR0IF = 0 ;
  2241  0015  110B               	bcf	11,2	;volatile
  2242  0016                     i1l197:	
  2243  0016  087C               	movf	??_InterTimer,w
  2244  0017  00FF               	movwf	127
  2245  0018  107E               	bcf	126,0	;clear compiler interrupt flag
  2246  0019  0009               	retfie
  2247  001A                     __end_of_InterTimer:	
  2248                           
  2249                           	psect	text8
  2250  0296                     __ptext8:	
  2251 ;; *************** function _change *****************
  2252 ;; Defined at:
  2253 ;;		line 28 in file "ver0.0_20140727.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;		None               void
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;Total ram usage:        6 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		i1___wmul
  2276 ;; This function is called by:
  2277 ;;		_InterTimer
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _change
  2283  0296                     _change:	
  2284                           
  2285                           ;ver0.0_20140727.c: 29: ledcount++;
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _change: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2289  0296  3001               	movlw	1
  2290  0297  00F6               	movwf	??_change
  2291  0298  0876               	movf	??_change,w
  2292  0299  07FD               	addwf	_ledcount,f
  2293                           
  2294                           ;ver0.0_20140727.c: 31: PORTA=putdata[ledcount][0];
  2295  029A  087D               	movf	_ledcount,w
  2296  029B  00F6               	movwf	??_change
  2297  029C  01F7               	clrf	??_change+1
  2298  029D  0876               	movf	??_change,w
  2299  029E  00F0               	movwf	i1___wmul@multiplier
  2300  029F  0877               	movf	??_change+1,w
  2301  02A0  00F1               	movwf	i1___wmul@multiplier+1
  2302  02A1  3005               	movlw	5
  2303  02A2  00F2               	movwf	i1___wmul@multiplicand
  2304  02A3  3000               	movlw	0
  2305  02A4  00F3               	movwf	i1___wmul@multiplicand+1
  2306  02A5  3183  23DE  3182   	fcall	i1___wmul
  2307  02A8  3096               	movlw	150
  2308  02A9  00F8               	movwf	??_change+2
  2309  02AA  3023               	movlw	35
  2310  02AB  00F9               	movwf	??_change+3
  2311  02AC  0870               	movf	?i1___wmul,w
  2312  02AD  0778               	addwf	??_change+2,w
  2313  02AE  0086               	movwf	6
  2314  02AF  0871               	movf	?i1___wmul+1,w
  2315  02B0  3D79               	addwfc	??_change+3,w
  2316  02B1  0087               	movwf	7
  2317  02B2  0801               	movf	1,w
  2318  02B3  0020               	movlb	0	; select bank0
  2319  02B4  008C               	movwf	12	;volatile
  2320                           
  2321                           ;ver0.0_20140727.c: 32: PORTB=putdata[ledcount][1];
  2322  02B5  087D               	movf	_ledcount,w
  2323  02B6  00F6               	movwf	??_change
  2324  02B7  01F7               	clrf	??_change+1
  2325  02B8  0876               	movf	??_change,w
  2326  02B9  00F0               	movwf	i1___wmul@multiplier
  2327  02BA  0877               	movf	??_change+1,w
  2328  02BB  00F1               	movwf	i1___wmul@multiplier+1
  2329  02BC  3005               	movlw	5
  2330  02BD  00F2               	movwf	i1___wmul@multiplicand
  2331  02BE  3000               	movlw	0
  2332  02BF  00F3               	movwf	i1___wmul@multiplicand+1
  2333  02C0  3183  23DE  3182   	fcall	i1___wmul
  2334  02C3  0870               	movf	?i1___wmul,w
  2335  02C4  3E01               	addlw	1
  2336  02C5  00F8               	movwf	??_change+2
  2337  02C6  3000               	movlw	0
  2338  02C7  3D71               	addwfc	?i1___wmul+1,w
  2339  02C8  00F9               	movwf	??_change+3
  2340  02C9  3096               	movlw	150
  2341  02CA  00FA               	movwf	??_change+4
  2342  02CB  3023               	movlw	35
  2343  02CC  00FB               	movwf	??_change+5
  2344  02CD  0878               	movf	??_change+2,w
  2345  02CE  077A               	addwf	??_change+4,w
  2346  02CF  0086               	movwf	6
  2347  02D0  0879               	movf	??_change+3,w
  2348  02D1  3D7B               	addwfc	??_change+5,w
  2349  02D2  0087               	movwf	7
  2350  02D3  0801               	movf	1,w
  2351  02D4  0020               	movlb	0	; select bank0
  2352  02D5  008D               	movwf	13	;volatile
  2353                           
  2354                           ;ver0.0_20140727.c: 33: PORTC=putdata[ledcount][2];
  2355  02D6  087D               	movf	_ledcount,w
  2356  02D7  00F6               	movwf	??_change
  2357  02D8  01F7               	clrf	??_change+1
  2358  02D9  0876               	movf	??_change,w
  2359  02DA  00F0               	movwf	i1___wmul@multiplier
  2360  02DB  0877               	movf	??_change+1,w
  2361  02DC  00F1               	movwf	i1___wmul@multiplier+1
  2362  02DD  3005               	movlw	5
  2363  02DE  00F2               	movwf	i1___wmul@multiplicand
  2364  02DF  3000               	movlw	0
  2365  02E0  00F3               	movwf	i1___wmul@multiplicand+1
  2366  02E1  3183  23DE  3182   	fcall	i1___wmul
  2367  02E4  0870               	movf	?i1___wmul,w
  2368  02E5  3E02               	addlw	2
  2369  02E6  00F8               	movwf	??_change+2
  2370  02E7  3000               	movlw	0
  2371  02E8  3D71               	addwfc	?i1___wmul+1,w
  2372  02E9  00F9               	movwf	??_change+3
  2373  02EA  3096               	movlw	150
  2374  02EB  00FA               	movwf	??_change+4
  2375  02EC  3023               	movlw	35
  2376  02ED  00FB               	movwf	??_change+5
  2377  02EE  0878               	movf	??_change+2,w
  2378  02EF  077A               	addwf	??_change+4,w
  2379  02F0  0086               	movwf	6
  2380  02F1  0879               	movf	??_change+3,w
  2381  02F2  3D7B               	addwfc	??_change+5,w
  2382  02F3  0087               	movwf	7
  2383  02F4  0801               	movf	1,w
  2384  02F5  0020               	movlb	0	; select bank0
  2385  02F6  008E               	movwf	14	;volatile
  2386                           
  2387                           ;ver0.0_20140727.c: 34: PORTD=putdata[ledcount][3];
  2388  02F7  087D               	movf	_ledcount,w
  2389  02F8  00F6               	movwf	??_change
  2390  02F9  01F7               	clrf	??_change+1
  2391  02FA  0876               	movf	??_change,w
  2392  02FB  00F0               	movwf	i1___wmul@multiplier
  2393  02FC  0877               	movf	??_change+1,w
  2394  02FD  00F1               	movwf	i1___wmul@multiplier+1
  2395  02FE  3005               	movlw	5
  2396  02FF  00F2               	movwf	i1___wmul@multiplicand
  2397  0300  3000               	movlw	0
  2398  0301  00F3               	movwf	i1___wmul@multiplicand+1
  2399  0302  3183  23DE  3182   	fcall	i1___wmul
  2400  0305  0870               	movf	?i1___wmul,w
  2401  0306  3E03               	addlw	3
  2402  0307  00F8               	movwf	??_change+2
  2403  0308  3000               	movlw	0
  2404  0309  3D71               	addwfc	?i1___wmul+1,w
  2405  030A  00F9               	movwf	??_change+3
  2406  030B  3096               	movlw	150
  2407  030C  00FA               	movwf	??_change+4
  2408  030D  3023               	movlw	35
  2409  030E  00FB               	movwf	??_change+5
  2410  030F  0878               	movf	??_change+2,w
  2411  0310  077A               	addwf	??_change+4,w
  2412  0311  0086               	movwf	6
  2413  0312  0879               	movf	??_change+3,w
  2414  0313  3D7B               	addwfc	??_change+5,w
  2415  0314  0087               	movwf	7
  2416  0315  0801               	movf	1,w
  2417  0316  0020               	movlb	0	; select bank0
  2418  0317  008F               	movwf	15	;volatile
  2419                           
  2420                           ;ver0.0_20140727.c: 35: PORTE=putdata[ledcount][4];
  2421  0318  087D               	movf	_ledcount,w
  2422  0319  00F6               	movwf	??_change
  2423  031A  01F7               	clrf	??_change+1
  2424  031B  0876               	movf	??_change,w
  2425  031C  00F0               	movwf	i1___wmul@multiplier
  2426  031D  0877               	movf	??_change+1,w
  2427  031E  00F1               	movwf	i1___wmul@multiplier+1
  2428  031F  3005               	movlw	5
  2429  0320  00F2               	movwf	i1___wmul@multiplicand
  2430  0321  3000               	movlw	0
  2431  0322  00F3               	movwf	i1___wmul@multiplicand+1
  2432  0323  3183  23DE  3182   	fcall	i1___wmul
  2433  0326  0870               	movf	?i1___wmul,w
  2434  0327  3E04               	addlw	4
  2435  0328  00F8               	movwf	??_change+2
  2436  0329  3000               	movlw	0
  2437  032A  3D71               	addwfc	?i1___wmul+1,w
  2438  032B  00F9               	movwf	??_change+3
  2439  032C  3096               	movlw	150
  2440  032D  00FA               	movwf	??_change+4
  2441  032E  3023               	movlw	35
  2442  032F  00FB               	movwf	??_change+5
  2443  0330  0878               	movf	??_change+2,w
  2444  0331  077A               	addwf	??_change+4,w
  2445  0332  0086               	movwf	6
  2446  0333  0879               	movf	??_change+3,w
  2447  0334  3D7B               	addwfc	??_change+5,w
  2448  0335  0087               	movwf	7
  2449  0336  0801               	movf	1,w
  2450  0337  0020               	movlb	0	; select bank0
  2451  0338  0090               	movwf	16	;volatile
  2452                           
  2453                           ;ver0.0_20140727.c: 37: if(ledcount==16)
  2454  0339  087D               	movf	_ledcount,w
  2455  033A  3A10               	xorlw	16
  2456  033B  1D03               	skipz
  2457  033C  0008               	return
  2458                           
  2459                           ;ver0.0_20140727.c: 38: ledcount=0;
  2460  033D  01FD               	clrf	_ledcount
  2461  033E  0008               	return
  2462  033F                     __end_of_change:	
  2463                           
  2464                           	psect	text9
  2465  03DE                     __ptext9:	
  2466 ;; *************** function i1___wmul *****************
  2467 ;; Defined at:
  2468 ;;		line 15 in file "/Applications/microchip/xc8/v1.32/sources/common/Umul16.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  multiplier      2    0[COMMON] unsigned int 
  2471 ;;  multiplicand    2    2[COMMON] unsigned int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  __wmul          2    4[COMMON] unsigned int 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    0[COMMON] unsigned int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;Total ram usage:        6 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_change
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function i1___wmul
  2498  03DE                     i1___wmul:	
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  2502  03DE  01F4               	clrf	i1___wmul@product
  2503  03DF  01F5               	clrf	i1___wmul@product+1
  2504  03E0                     i1l1274:	
  2505  03E0  1C70               	btfss	i1___wmul@multiplier,0
  2506  03E1  2BE6               	goto	i1l353
  2507  03E2  0872               	movf	i1___wmul@multiplicand,w
  2508  03E3  07F4               	addwf	i1___wmul@product,f
  2509  03E4  0873               	movf	i1___wmul@multiplicand+1,w
  2510  03E5  3DF5               	addwfc	i1___wmul@product+1,f
  2511  03E6                     i1l353:	
  2512  03E6  3001               	movlw	1
  2513  03E7                     u112_25:	
  2514  03E7  35F2               	lslf	i1___wmul@multiplicand,f
  2515  03E8  0DF3               	rlf	i1___wmul@multiplicand+1,f
  2516  03E9  0B89               	decfsz	9,f
  2517  03EA  2BE7               	goto	u112_25
  2518  03EB  3001               	movlw	1
  2519  03EC                     u113_25:	
  2520  03EC  36F1               	lsrf	i1___wmul@multiplier+1,f
  2521  03ED  0CF0               	rrf	i1___wmul@multiplier,f
  2522  03EE  0B89               	decfsz	9,f
  2523  03EF  2BEC               	goto	u113_25
  2524  03F0  0871               	movf	i1___wmul@multiplier+1,w
  2525  03F1  0470               	iorwf	i1___wmul@multiplier,w
  2526  03F2  1D03               	skipz
  2527  03F3  2BE0               	goto	i1l1274
  2528  03F4  0875               	movf	i1___wmul@product+1,w
  2529  03F5  01F1               	clrf	?i1___wmul+1
  2530  03F6  07F1               	addwf	?i1___wmul+1,f
  2531  03F7  0874               	movf	i1___wmul@product,w
  2532  03F8  01F0               	clrf	?i1___wmul
  2533  03F9  07F0               	addwf	?i1___wmul,f
  2534  03FA  0008               	return
  2535  03FB                     __end_ofi1___wmul:	
  2536  007E                     btemp	set	126	;btemp
  2537  007E                     pic14e$flags	set	126
  2538  007E                     wtemp	set	126
  2539  007E                     wtemp0	set	126
  2540  0080                     wtemp1	set	128
  2541  0082                     wtemp2	set	130
  2542  0084                     wtemp3	set	132
  2543  0086                     wtemp4	set	134
  2544  0088                     wtemp5	set	136
  2545  007F                     wtemp6	set	127
  2546  007E                     ttemp	set	126
  2547  007E                     ttemp0	set	126
  2548  0081                     ttemp1	set	129
  2549  0084                     ttemp2	set	132
  2550  0087                     ttemp3	set	135
  2551  007F                     ttemp4	set	127
  2552  007E                     ltemp	set	126
  2553  007E                     ltemp0	set	126
  2554  0082                     ltemp1	set	130
  2555  0086                     ltemp2	set	134
  2556  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     70      72
    BANK1            80     70      70
    BANK2            80      0      48
    BANK3            80      0      48
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           38      0       0
    BANK12            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterTimer in COMMON

    _InterTimer->_change
    _change->i1___wmul

Critical Paths under _main in BANK0

    _main->_x2
    _x2->___awdiv

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               157   157      0    3042
                                             15 BANK0     55    55      0
                                              0 BANK1     70    70      0
                         _E2promRead
                             ___wmul
                              _getch
                             _setpin
                                 _x2
 ---------------------------------------------------------------------------------
 (1) _x2                                                   6     6      0     544
                                              9 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _setpin                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _E2promRead                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterTimer                                           1     1      0     352
                                             12 COMMON     1     1      0
                             _change
 ---------------------------------------------------------------------------------
 (4) _change                                               6     6      0     352
                                              6 COMMON     6     6      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _E2promRead
   ___wmul
   _getch
   _setpin
   _x2
     ___awdiv

 _InterTimer (ROOT)
   _change
     i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      46       7       87.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      30       9       60.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      30      11       60.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     142      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              26      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     142      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Sep 28 15:22:32 2014

            ?_E2promRead 0070              __CFG_CP$OFF 0000                       _RD 0CA8  
           ___awdiv@sign 0026                       _x2 0393      ___wmul@multiplicand 0022  
       i1___wmul@product 0074              __CFG_LVP$ON 0000                      ?_x2 0070  
                    l244 0215                      l245 025E                      l239 015B  
                    l353 03C9                      l266 042E                      _GIE 005F  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RA3 0063                      _RC0 0070                      _RA4 0064  
                    _RC1 0071                      _RA5 0065                      _RC2 0072  
                    _RA6 0066                      _RC3 0073                      _RA7 0067  
           __CFG_CPD$OFF 0000                      x2@i 002C                      _led 0120  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
                   ??_x2 0029              main@getdata 00A0                     l1242 0355  
                   l1260 037B                     l1252 035D                     l1236 034A  
                   l1254 0369                     l1334 03B1                     l1264 0384  
                   l1336 03BE                     l1328 039A                     l1600 0080  
                   l1354 03C3                     l1268 038C                     l1620 00C2  
                   l1606 00B3                     l1624 00C9                     l1634 00E0  
                   l1670 0117                     l1662 0109                     l1654 00FD  
                   l1638 00E7                     l1680 0122                     l1648 00F3  
                   l1656 00FE                     l1668 0116                     l1694 0153  
                   l1686 0127                     u1205 03CA                     u1045 0360  
                   u1215 03CF                     u1065 036A                     u1075 0374  
                   u1085 037C                     u1730 005D                     u1905 012A  
                   u1915 013D                     u1955 01BC                     u1985 0266  
                   _RCIF 008D                     _TMR0 0015                     _TRMT 0CF1  
                   _WPUB 020D             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 004E              main@onetime 0064                     _time 0067  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   _stoc 01A0                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 001A                     ttemp 007E  
                   wtemp 007E            __CFG_PLLEN$ON 0000                    ?_main 0070  
        __end_of___awdiv 0393                    _EEADR 0191            __CFG_WDTE$OFF 0000  
        ___awdiv@divisor 0020                    i1l353 03E6                    i1l196 0015  
                  i1l197 0016          ___awdiv@counter 0025                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _PORTD 000F  
                  _PORTE 0010                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TRISD 008F                    _TRISE 0090  
                  _TXREG 019A                    _TXSTA 019E            __CFG_PWRTE$ON 0000  
                  x2@ret 002D                    x2@num 002E                    _getch 042E  
                  main@i 0065                    main@j 0063                    main@n 005F  
    __size_of_E2promRead 000F         __end_ofi1___wmul 03FB                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
    i1___wmul@multiplier 0070                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 001C             __end_of_main 0296                   ??_main 002F  
             _InterTimer 0004                   ?_getch 0070                   _EEDATA 0193  
       ___awdiv@dividend 0022                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELD 018F                   _ANSELE 0190                   i1l1274 03E0  
                 u112_25 03E7                   u113_25 03EC                   _OSCCON 0099  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TRISC6 0476  
                 _TRISC7 0477                   _nWPUEN 04AF                   ___wmul 03C0  
              ??___awdiv 0024           __CFG_STVREN$ON 0000                   _change 0296  
          main@resetFlug 0062         ___awdiv@quotient 0027                   _setpin 03FB  
          E2promRead@adr 0022  __end_of__initialization 004A           __pcstackCOMMON 0070  
           ??_E2promRead 0020            __end_of_getch 0435               __end_of_x2 03C0  
            ?_InterTimer 0070                ?i1___wmul 0070                  ??_getch 0020  
         main@getKeeping 003E               __pbssBANK0 0066               __pbssBANK2 0120  
             __pbssBANK3 01A0               __pbssBANK4 0220       __end_of_E2promRead 0422  
        __CFG_VCAPEN$OFF 0000               __pmaintext 004E                  ?___wmul 0020  
                ?_change 0070               __pintentry 0004                  _BAUDCON 019F  
                ?_setpin 0070               ??i1___wmul 0074           main@individual 005E  
    __size_of_InterTimer 0016                  ___awdiv 033F          __size_of___wmul 001E  
        __size_of_change 00A9                  __ptext0 0000                  __ptext1 0393  
                __ptext2 033F                  __ptext3 03FB                  __ptext4 042E  
                __ptext5 03C0                  __ptext6 0413                  __ptext8 0296  
                __ptext9 03DE          __size_of_setpin 0018                  _putdata 2396  
                clrloop0 0423     end_of_initialization 004A    i1___wmul@multiplicand 0072  
       __CFG_FOSC$INTOSC 0000               main@getNum 0061           __end_of___wmul 03DE  
         __end_of_change 033F             ??_InterTimer 007C           __end_of_setpin 0413  
    start_initialization 001C        __size_ofi1___wmul 001D       __end_of_InterTimer 001A  
               ??___wmul 0024                 ??_change 0076                 ??_setpin 0020  
            __pbssBIGRAM 2396              __pbssCOMMON 007D                ___latbits 0003  
          __pcstackBANK0 0020            __pcstackBANK1 00A0       main@gettingSuccess 0060  
               ?___awdiv 0020           __size_of_getch 0007              __size_of_x2 002D  
         ___wmul@product 0024                clear_ram0 0422                main@F3525 0220  
      ___wmul@multiplier 0020                 i1___wmul 03DE         __size_of___awdiv 0054  
               _ledcount 007D            __size_of_main 0248               _E2promRead 0413  
           _reservingNow 0066              pic14e$flags 007E                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
